Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    GLOBAL
    METHOD
    REFERENCIA
    ENDFOR
    HASH
    CALLMETHOD
    ENDVAR
    VALOR
    EQUALTO
    ELSEIF
    CHILL
    AND
    OR
    ENDMETHOD
    READ
    ENDGLOBAL
    VOID
    FOR
    GTHANEQ
    LTHANEQ
    ENDPROGRAM
    ENDIF
    BOOL
    RETURN
    FALSE
    TRUE
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM IDENTIFIER SEMICOLON vars bloque
Rule 2     programa -> PROGRAM IDENTIFIER SEMICOLON bloque
Rule 3     vars -> VAR vars1
Rule 4     vars1 -> IDENTIFIER vars2 COLON tipo SEMICOLON vars1
Rule 5     vars1 -> IDENTIFIER vars2 COLON tipo SEMICOLON
Rule 6     vars2 -> empty
Rule 7     vars2 -> COMMA IDENTIFIER vars2
Rule 8     tipo -> INT
Rule 9     tipo -> FLOAT
Rule 10    bloque -> LBRACE bloque1 RBRACE
Rule 11    bloque1 -> empty
Rule 12    bloque1 -> estatuto bloque1
Rule 13    estatuto -> asignacion
Rule 14    estatuto -> condicion
Rule 15    estatuto -> escritura
Rule 16    asignacion -> IDENTIFIER EQUAL expresion SEMICOLON
Rule 17    escritura -> PRINT LPARENTHESES escritura1 RPARENTHESES SEMICOLON
Rule 18    escritura1 -> expresion escritura2
Rule 19    escritura1 -> STRING escritura2
Rule 20    escritura2 -> empty
Rule 21    escritura2 -> COMMA escritura1
Rule 22    condicion -> IF LPARENTHESES expresion RPARENTHESES bloque SEMICOLON
Rule 23    condicion -> IF LPARENTHESES expresion RPARENTHESES bloque ELSE bloque SEMICOLON
Rule 24    expresion -> exp
Rule 25    expresion -> exp LTHAN exp
Rule 26    expresion -> exp GTHAN exp
Rule 27    expresion -> exp NOTEQUAL exp
Rule 28    exp -> termino exp1
Rule 29    exp1 -> empty
Rule 30    exp1 -> PLUS termino exp1
Rule 31    exp1 -> MINUS termino exp1
Rule 32    termino -> factor termino1
Rule 33    termino1 -> empty
Rule 34    termino1 -> MULTI factor termino1
Rule 35    termino1 -> DIVIDE factor termino1
Rule 36    factor -> LPARENTHESES expresion RPARENTHESES
Rule 37    factor -> factor1 varcte
Rule 38    factor1 -> empty
Rule 39    factor1 -> PLUS
Rule 40    factor1 -> MINUS
Rule 41    varcte -> IDENTIFIER
Rule 42    varcte -> CTEINT
Rule 43    varcte -> CTEFLOAT
Rule 44    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
BOOL                 : 
CALLMETHOD           : 
CHILL                : 
COLON                : 4 5
COMMA                : 7 21
CTEFLOAT             : 43
CTEINT               : 42
DIVIDE               : 35
ELSE                 : 23
ELSEIF               : 
ENDFOR               : 
ENDGLOBAL            : 
ENDIF                : 
ENDMETHOD            : 
ENDPROGRAM           : 
ENDVAR               : 
EQUAL                : 16
EQUALTO              : 
FALSE                : 
FLOAT                : 9
FOR                  : 
GLOBAL               : 
GTHAN                : 26
GTHANEQ              : 
HASH                 : 
IDENTIFIER           : 1 2 4 5 7 16 41
IF                   : 22 23
INT                  : 8
LBRACE               : 10
LPARENTHESES         : 17 22 23 36
LTHAN                : 25
LTHANEQ              : 
METHOD               : 
MINUS                : 31 40
MULTI                : 34
NOTEQUAL             : 27
OR                   : 
PLUS                 : 30 39
PRINT                : 17
PROGRAM              : 1 2
RBRACE               : 10
READ                 : 
REFERENCIA           : 
RETURN               : 
RPARENTHESES         : 17 22 23 36
SEMICOLON            : 1 2 4 5 16 17 22 23
STRING               : 19
TRUE                 : 
VALOR                : 
VAR                  : 3
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 13
bloque               : 1 2 22 23 23
bloque1              : 10 12
condicion            : 14
empty                : 6 11 20 29 33 38
escritura            : 15
escritura1           : 17 21
escritura2           : 18 19
estatuto             : 12
exp                  : 24 25 25 26 26 27 27
exp1                 : 28 30 31
expresion            : 16 18 22 23 36
factor               : 32 34 35
factor1              : 37
programa             : 0
termino              : 28 30 31
termino1             : 32 34 35
tipo                 : 4 5
varcte               : 37
vars                 : 1
vars1                : 3 4
vars2                : 4 5 7

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM IDENTIFIER SEMICOLON vars bloque
    (2) programa -> . PROGRAM IDENTIFIER SEMICOLON bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . IDENTIFIER SEMICOLON vars bloque
    (2) programa -> PROGRAM . IDENTIFIER SEMICOLON bloque

    IDENTIFIER      shift and go to state 3


state 3

    (1) programa -> PROGRAM IDENTIFIER . SEMICOLON vars bloque
    (2) programa -> PROGRAM IDENTIFIER . SEMICOLON bloque

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM IDENTIFIER SEMICOLON . vars bloque
    (2) programa -> PROGRAM IDENTIFIER SEMICOLON . bloque
    (3) vars -> . VAR vars1
    (10) bloque -> . LBRACE bloque1 RBRACE

    VAR             shift and go to state 8
    LBRACE          shift and go to state 7

    bloque                         shift and go to state 5
    vars                           shift and go to state 6

state 5

    (2) programa -> PROGRAM IDENTIFIER SEMICOLON bloque .

    $end            reduce using rule 2 (programa -> PROGRAM IDENTIFIER SEMICOLON bloque .)


state 6

    (1) programa -> PROGRAM IDENTIFIER SEMICOLON vars . bloque
    (10) bloque -> . LBRACE bloque1 RBRACE

    LBRACE          shift and go to state 7

    bloque                         shift and go to state 9

state 7

    (10) bloque -> LBRACE . bloque1 RBRACE
    (11) bloque1 -> . empty
    (12) bloque1 -> . estatuto bloque1
    (44) empty -> .
    (13) estatuto -> . asignacion
    (14) estatuto -> . condicion
    (15) estatuto -> . escritura
    (16) asignacion -> . IDENTIFIER EQUAL expresion SEMICOLON
    (22) condicion -> . IF LPARENTHESES expresion RPARENTHESES bloque SEMICOLON
    (23) condicion -> . IF LPARENTHESES expresion RPARENTHESES bloque ELSE bloque SEMICOLON
    (17) escritura -> . PRINT LPARENTHESES escritura1 RPARENTHESES SEMICOLON

    RBRACE          reduce using rule 44 (empty -> .)
    IDENTIFIER      shift and go to state 12
    IF              shift and go to state 10
    PRINT           shift and go to state 13

    empty                          shift and go to state 15
    escritura                      shift and go to state 11
    bloque1                        shift and go to state 16
    estatuto                       shift and go to state 14
    condicion                      shift and go to state 18
    asignacion                     shift and go to state 17

state 8

    (3) vars -> VAR . vars1
    (4) vars1 -> . IDENTIFIER vars2 COLON tipo SEMICOLON vars1
    (5) vars1 -> . IDENTIFIER vars2 COLON tipo SEMICOLON

    IDENTIFIER      shift and go to state 19

    vars1                          shift and go to state 20

state 9

    (1) programa -> PROGRAM IDENTIFIER SEMICOLON vars bloque .

    $end            reduce using rule 1 (programa -> PROGRAM IDENTIFIER SEMICOLON vars bloque .)


state 10

    (22) condicion -> IF . LPARENTHESES expresion RPARENTHESES bloque SEMICOLON
    (23) condicion -> IF . LPARENTHESES expresion RPARENTHESES bloque ELSE bloque SEMICOLON

    LPARENTHESES    shift and go to state 21


state 11

    (15) estatuto -> escritura .

    IDENTIFIER      reduce using rule 15 (estatuto -> escritura .)
    IF              reduce using rule 15 (estatuto -> escritura .)
    PRINT           reduce using rule 15 (estatuto -> escritura .)
    RBRACE          reduce using rule 15 (estatuto -> escritura .)


state 12

    (16) asignacion -> IDENTIFIER . EQUAL expresion SEMICOLON

    EQUAL           shift and go to state 22


state 13

    (17) escritura -> PRINT . LPARENTHESES escritura1 RPARENTHESES SEMICOLON

    LPARENTHESES    shift and go to state 23


state 14

    (12) bloque1 -> estatuto . bloque1
    (11) bloque1 -> . empty
    (12) bloque1 -> . estatuto bloque1
    (44) empty -> .
    (13) estatuto -> . asignacion
    (14) estatuto -> . condicion
    (15) estatuto -> . escritura
    (16) asignacion -> . IDENTIFIER EQUAL expresion SEMICOLON
    (22) condicion -> . IF LPARENTHESES expresion RPARENTHESES bloque SEMICOLON
    (23) condicion -> . IF LPARENTHESES expresion RPARENTHESES bloque ELSE bloque SEMICOLON
    (17) escritura -> . PRINT LPARENTHESES escritura1 RPARENTHESES SEMICOLON

    RBRACE          reduce using rule 44 (empty -> .)
    IDENTIFIER      shift and go to state 12
    IF              shift and go to state 10
    PRINT           shift and go to state 13

    empty                          shift and go to state 15
    escritura                      shift and go to state 11
    bloque1                        shift and go to state 24
    estatuto                       shift and go to state 14
    condicion                      shift and go to state 18
    asignacion                     shift and go to state 17

state 15

    (11) bloque1 -> empty .

    RBRACE          reduce using rule 11 (bloque1 -> empty .)


state 16

    (10) bloque -> LBRACE bloque1 . RBRACE

    RBRACE          shift and go to state 25


state 17

    (13) estatuto -> asignacion .

    IDENTIFIER      reduce using rule 13 (estatuto -> asignacion .)
    IF              reduce using rule 13 (estatuto -> asignacion .)
    PRINT           reduce using rule 13 (estatuto -> asignacion .)
    RBRACE          reduce using rule 13 (estatuto -> asignacion .)


state 18

    (14) estatuto -> condicion .

    IDENTIFIER      reduce using rule 14 (estatuto -> condicion .)
    IF              reduce using rule 14 (estatuto -> condicion .)
    PRINT           reduce using rule 14 (estatuto -> condicion .)
    RBRACE          reduce using rule 14 (estatuto -> condicion .)


state 19

    (4) vars1 -> IDENTIFIER . vars2 COLON tipo SEMICOLON vars1
    (5) vars1 -> IDENTIFIER . vars2 COLON tipo SEMICOLON
    (6) vars2 -> . empty
    (7) vars2 -> . COMMA IDENTIFIER vars2
    (44) empty -> .

    COMMA           shift and go to state 28
    COLON           reduce using rule 44 (empty -> .)

    vars2                          shift and go to state 27
    empty                          shift and go to state 26

state 20

    (3) vars -> VAR vars1 .

    LBRACE          reduce using rule 3 (vars -> VAR vars1 .)


state 21

    (22) condicion -> IF LPARENTHESES . expresion RPARENTHESES bloque SEMICOLON
    (23) condicion -> IF LPARENTHESES . expresion RPARENTHESES bloque ELSE bloque SEMICOLON
    (24) expresion -> . exp
    (25) expresion -> . exp LTHAN exp
    (26) expresion -> . exp GTHAN exp
    (27) expresion -> . exp NOTEQUAL exp
    (28) exp -> . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    expresion                      shift and go to state 33
    empty                          shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 31
    factor1                        shift and go to state 36
    exp                            shift and go to state 32

state 22

    (16) asignacion -> IDENTIFIER EQUAL . expresion SEMICOLON
    (24) expresion -> . exp
    (25) expresion -> . exp LTHAN exp
    (26) expresion -> . exp GTHAN exp
    (27) expresion -> . exp NOTEQUAL exp
    (28) exp -> . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    expresion                      shift and go to state 38
    empty                          shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 31
    factor1                        shift and go to state 36
    exp                            shift and go to state 32

state 23

    (17) escritura -> PRINT LPARENTHESES . escritura1 RPARENTHESES SEMICOLON
    (18) escritura1 -> . expresion escritura2
    (19) escritura1 -> . STRING escritura2
    (24) expresion -> . exp
    (25) expresion -> . exp LTHAN exp
    (26) expresion -> . exp GTHAN exp
    (27) expresion -> . exp NOTEQUAL exp
    (28) exp -> . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    STRING          shift and go to state 40
    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    expresion                      shift and go to state 41
    escritura1                     shift and go to state 39
    termino                        shift and go to state 35
    factor                         shift and go to state 31
    factor1                        shift and go to state 36
    exp                            shift and go to state 32
    empty                          shift and go to state 34

state 24

    (12) bloque1 -> estatuto bloque1 .

    RBRACE          reduce using rule 12 (bloque1 -> estatuto bloque1 .)


state 25

    (10) bloque -> LBRACE bloque1 RBRACE .

    SEMICOLON       reduce using rule 10 (bloque -> LBRACE bloque1 RBRACE .)
    ELSE            reduce using rule 10 (bloque -> LBRACE bloque1 RBRACE .)
    $end            reduce using rule 10 (bloque -> LBRACE bloque1 RBRACE .)


state 26

    (6) vars2 -> empty .

    COLON           reduce using rule 6 (vars2 -> empty .)


state 27

    (4) vars1 -> IDENTIFIER vars2 . COLON tipo SEMICOLON vars1
    (5) vars1 -> IDENTIFIER vars2 . COLON tipo SEMICOLON

    COLON           shift and go to state 42


state 28

    (7) vars2 -> COMMA . IDENTIFIER vars2

    IDENTIFIER      shift and go to state 43


state 29

    (36) factor -> LPARENTHESES . expresion RPARENTHESES
    (24) expresion -> . exp
    (25) expresion -> . exp LTHAN exp
    (26) expresion -> . exp GTHAN exp
    (27) expresion -> . exp NOTEQUAL exp
    (28) exp -> . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    expresion                      shift and go to state 44
    empty                          shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 31
    factor1                        shift and go to state 36
    exp                            shift and go to state 32

state 30

    (40) factor1 -> MINUS .

    IDENTIFIER      reduce using rule 40 (factor1 -> MINUS .)
    CTEINT          reduce using rule 40 (factor1 -> MINUS .)
    CTEFLOAT        reduce using rule 40 (factor1 -> MINUS .)


state 31

    (32) termino -> factor . termino1
    (33) termino1 -> . empty
    (34) termino1 -> . MULTI factor termino1
    (35) termino1 -> . DIVIDE factor termino1
    (44) empty -> .

    MULTI           shift and go to state 45
    DIVIDE          shift and go to state 46
    PLUS            reduce using rule 44 (empty -> .)
    MINUS           reduce using rule 44 (empty -> .)
    LTHAN           reduce using rule 44 (empty -> .)
    GTHAN           reduce using rule 44 (empty -> .)
    NOTEQUAL        reduce using rule 44 (empty -> .)
    RPARENTHESES    reduce using rule 44 (empty -> .)
    SEMICOLON       reduce using rule 44 (empty -> .)
    COMMA           reduce using rule 44 (empty -> .)

    empty                          shift and go to state 47
    termino1                       shift and go to state 48

state 32

    (24) expresion -> exp .
    (25) expresion -> exp . LTHAN exp
    (26) expresion -> exp . GTHAN exp
    (27) expresion -> exp . NOTEQUAL exp

    SEMICOLON       reduce using rule 24 (expresion -> exp .)
    COMMA           reduce using rule 24 (expresion -> exp .)
    RPARENTHESES    reduce using rule 24 (expresion -> exp .)
    LTHAN           shift and go to state 49
    GTHAN           shift and go to state 51
    NOTEQUAL        shift and go to state 50


state 33

    (22) condicion -> IF LPARENTHESES expresion . RPARENTHESES bloque SEMICOLON
    (23) condicion -> IF LPARENTHESES expresion . RPARENTHESES bloque ELSE bloque SEMICOLON

    RPARENTHESES    shift and go to state 52


state 34

    (38) factor1 -> empty .

    IDENTIFIER      reduce using rule 38 (factor1 -> empty .)
    CTEINT          reduce using rule 38 (factor1 -> empty .)
    CTEFLOAT        reduce using rule 38 (factor1 -> empty .)


state 35

    (28) exp -> termino . exp1
    (29) exp1 -> . empty
    (30) exp1 -> . PLUS termino exp1
    (31) exp1 -> . MINUS termino exp1
    (44) empty -> .

    PLUS            shift and go to state 56
    MINUS           shift and go to state 54
    LTHAN           reduce using rule 44 (empty -> .)
    GTHAN           reduce using rule 44 (empty -> .)
    NOTEQUAL        reduce using rule 44 (empty -> .)
    RPARENTHESES    reduce using rule 44 (empty -> .)
    SEMICOLON       reduce using rule 44 (empty -> .)
    COMMA           reduce using rule 44 (empty -> .)

    exp1                           shift and go to state 53
    empty                          shift and go to state 55

state 36

    (37) factor -> factor1 . varcte
    (41) varcte -> . IDENTIFIER
    (42) varcte -> . CTEINT
    (43) varcte -> . CTEFLOAT

    IDENTIFIER      shift and go to state 58
    CTEINT          shift and go to state 60
    CTEFLOAT        shift and go to state 59

    varcte                         shift and go to state 57

state 37

    (39) factor1 -> PLUS .

    IDENTIFIER      reduce using rule 39 (factor1 -> PLUS .)
    CTEINT          reduce using rule 39 (factor1 -> PLUS .)
    CTEFLOAT        reduce using rule 39 (factor1 -> PLUS .)


state 38

    (16) asignacion -> IDENTIFIER EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 61


state 39

    (17) escritura -> PRINT LPARENTHESES escritura1 . RPARENTHESES SEMICOLON

    RPARENTHESES    shift and go to state 62


state 40

    (19) escritura1 -> STRING . escritura2
    (20) escritura2 -> . empty
    (21) escritura2 -> . COMMA escritura1
    (44) empty -> .

    COMMA           shift and go to state 63
    RPARENTHESES    reduce using rule 44 (empty -> .)

    empty                          shift and go to state 65
    escritura2                     shift and go to state 64

state 41

    (18) escritura1 -> expresion . escritura2
    (20) escritura2 -> . empty
    (21) escritura2 -> . COMMA escritura1
    (44) empty -> .

    COMMA           shift and go to state 63
    RPARENTHESES    reduce using rule 44 (empty -> .)

    empty                          shift and go to state 65
    escritura2                     shift and go to state 66

state 42

    (4) vars1 -> IDENTIFIER vars2 COLON . tipo SEMICOLON vars1
    (5) vars1 -> IDENTIFIER vars2 COLON . tipo SEMICOLON
    (8) tipo -> . INT
    (9) tipo -> . FLOAT

    INT             shift and go to state 68
    FLOAT           shift and go to state 67

    tipo                           shift and go to state 69

state 43

    (7) vars2 -> COMMA IDENTIFIER . vars2
    (6) vars2 -> . empty
    (7) vars2 -> . COMMA IDENTIFIER vars2
    (44) empty -> .

    COMMA           shift and go to state 28
    COLON           reduce using rule 44 (empty -> .)

    vars2                          shift and go to state 70
    empty                          shift and go to state 26

state 44

    (36) factor -> LPARENTHESES expresion . RPARENTHESES

    RPARENTHESES    shift and go to state 71


state 45

    (34) termino1 -> MULTI . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    empty                          shift and go to state 34
    factor                         shift and go to state 72
    factor1                        shift and go to state 36

state 46

    (35) termino1 -> DIVIDE . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    empty                          shift and go to state 34
    factor                         shift and go to state 73
    factor1                        shift and go to state 36

state 47

    (33) termino1 -> empty .

    PLUS            reduce using rule 33 (termino1 -> empty .)
    MINUS           reduce using rule 33 (termino1 -> empty .)
    LTHAN           reduce using rule 33 (termino1 -> empty .)
    GTHAN           reduce using rule 33 (termino1 -> empty .)
    NOTEQUAL        reduce using rule 33 (termino1 -> empty .)
    RPARENTHESES    reduce using rule 33 (termino1 -> empty .)
    SEMICOLON       reduce using rule 33 (termino1 -> empty .)
    COMMA           reduce using rule 33 (termino1 -> empty .)


state 48

    (32) termino -> factor termino1 .

    PLUS            reduce using rule 32 (termino -> factor termino1 .)
    MINUS           reduce using rule 32 (termino -> factor termino1 .)
    LTHAN           reduce using rule 32 (termino -> factor termino1 .)
    GTHAN           reduce using rule 32 (termino -> factor termino1 .)
    NOTEQUAL        reduce using rule 32 (termino -> factor termino1 .)
    COMMA           reduce using rule 32 (termino -> factor termino1 .)
    RPARENTHESES    reduce using rule 32 (termino -> factor termino1 .)
    SEMICOLON       reduce using rule 32 (termino -> factor termino1 .)


state 49

    (25) expresion -> exp LTHAN . exp
    (28) exp -> . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    empty                          shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 31
    factor1                        shift and go to state 36
    exp                            shift and go to state 74

state 50

    (27) expresion -> exp NOTEQUAL . exp
    (28) exp -> . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    empty                          shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 31
    factor1                        shift and go to state 36
    exp                            shift and go to state 75

state 51

    (26) expresion -> exp GTHAN . exp
    (28) exp -> . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    empty                          shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 31
    factor1                        shift and go to state 36
    exp                            shift and go to state 76

state 52

    (22) condicion -> IF LPARENTHESES expresion RPARENTHESES . bloque SEMICOLON
    (23) condicion -> IF LPARENTHESES expresion RPARENTHESES . bloque ELSE bloque SEMICOLON
    (10) bloque -> . LBRACE bloque1 RBRACE

    LBRACE          shift and go to state 7

    bloque                         shift and go to state 77

state 53

    (28) exp -> termino exp1 .

    LTHAN           reduce using rule 28 (exp -> termino exp1 .)
    GTHAN           reduce using rule 28 (exp -> termino exp1 .)
    NOTEQUAL        reduce using rule 28 (exp -> termino exp1 .)
    COMMA           reduce using rule 28 (exp -> termino exp1 .)
    RPARENTHESES    reduce using rule 28 (exp -> termino exp1 .)
    SEMICOLON       reduce using rule 28 (exp -> termino exp1 .)


state 54

    (31) exp1 -> MINUS . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    empty                          shift and go to state 34
    termino                        shift and go to state 78
    factor                         shift and go to state 31
    factor1                        shift and go to state 36

state 55

    (29) exp1 -> empty .

    LTHAN           reduce using rule 29 (exp1 -> empty .)
    GTHAN           reduce using rule 29 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 29 (exp1 -> empty .)
    RPARENTHESES    reduce using rule 29 (exp1 -> empty .)
    SEMICOLON       reduce using rule 29 (exp1 -> empty .)
    COMMA           reduce using rule 29 (exp1 -> empty .)


state 56

    (30) exp1 -> PLUS . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    empty                          shift and go to state 34
    termino                        shift and go to state 79
    factor                         shift and go to state 31
    factor1                        shift and go to state 36

state 57

    (37) factor -> factor1 varcte .

    MULTI           reduce using rule 37 (factor -> factor1 varcte .)
    DIVIDE          reduce using rule 37 (factor -> factor1 varcte .)
    PLUS            reduce using rule 37 (factor -> factor1 varcte .)
    MINUS           reduce using rule 37 (factor -> factor1 varcte .)
    LTHAN           reduce using rule 37 (factor -> factor1 varcte .)
    GTHAN           reduce using rule 37 (factor -> factor1 varcte .)
    NOTEQUAL        reduce using rule 37 (factor -> factor1 varcte .)
    RPARENTHESES    reduce using rule 37 (factor -> factor1 varcte .)
    SEMICOLON       reduce using rule 37 (factor -> factor1 varcte .)
    COMMA           reduce using rule 37 (factor -> factor1 varcte .)


state 58

    (41) varcte -> IDENTIFIER .

    MULTI           reduce using rule 41 (varcte -> IDENTIFIER .)
    DIVIDE          reduce using rule 41 (varcte -> IDENTIFIER .)
    PLUS            reduce using rule 41 (varcte -> IDENTIFIER .)
    MINUS           reduce using rule 41 (varcte -> IDENTIFIER .)
    LTHAN           reduce using rule 41 (varcte -> IDENTIFIER .)
    GTHAN           reduce using rule 41 (varcte -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 41 (varcte -> IDENTIFIER .)
    RPARENTHESES    reduce using rule 41 (varcte -> IDENTIFIER .)
    SEMICOLON       reduce using rule 41 (varcte -> IDENTIFIER .)
    COMMA           reduce using rule 41 (varcte -> IDENTIFIER .)


state 59

    (43) varcte -> CTEFLOAT .

    MULTI           reduce using rule 43 (varcte -> CTEFLOAT .)
    DIVIDE          reduce using rule 43 (varcte -> CTEFLOAT .)
    PLUS            reduce using rule 43 (varcte -> CTEFLOAT .)
    MINUS           reduce using rule 43 (varcte -> CTEFLOAT .)
    LTHAN           reduce using rule 43 (varcte -> CTEFLOAT .)
    GTHAN           reduce using rule 43 (varcte -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 43 (varcte -> CTEFLOAT .)
    RPARENTHESES    reduce using rule 43 (varcte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 43 (varcte -> CTEFLOAT .)
    COMMA           reduce using rule 43 (varcte -> CTEFLOAT .)


state 60

    (42) varcte -> CTEINT .

    MULTI           reduce using rule 42 (varcte -> CTEINT .)
    DIVIDE          reduce using rule 42 (varcte -> CTEINT .)
    PLUS            reduce using rule 42 (varcte -> CTEINT .)
    MINUS           reduce using rule 42 (varcte -> CTEINT .)
    LTHAN           reduce using rule 42 (varcte -> CTEINT .)
    GTHAN           reduce using rule 42 (varcte -> CTEINT .)
    NOTEQUAL        reduce using rule 42 (varcte -> CTEINT .)
    RPARENTHESES    reduce using rule 42 (varcte -> CTEINT .)
    SEMICOLON       reduce using rule 42 (varcte -> CTEINT .)
    COMMA           reduce using rule 42 (varcte -> CTEINT .)


state 61

    (16) asignacion -> IDENTIFIER EQUAL expresion SEMICOLON .

    IDENTIFIER      reduce using rule 16 (asignacion -> IDENTIFIER EQUAL expresion SEMICOLON .)
    IF              reduce using rule 16 (asignacion -> IDENTIFIER EQUAL expresion SEMICOLON .)
    PRINT           reduce using rule 16 (asignacion -> IDENTIFIER EQUAL expresion SEMICOLON .)
    RBRACE          reduce using rule 16 (asignacion -> IDENTIFIER EQUAL expresion SEMICOLON .)


state 62

    (17) escritura -> PRINT LPARENTHESES escritura1 RPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 80


state 63

    (21) escritura2 -> COMMA . escritura1
    (18) escritura1 -> . expresion escritura2
    (19) escritura1 -> . STRING escritura2
    (24) expresion -> . exp
    (25) expresion -> . exp LTHAN exp
    (26) expresion -> . exp GTHAN exp
    (27) expresion -> . exp NOTEQUAL exp
    (28) exp -> . termino exp1
    (32) termino -> . factor termino1
    (36) factor -> . LPARENTHESES expresion RPARENTHESES
    (37) factor -> . factor1 varcte
    (38) factor1 -> . empty
    (39) factor1 -> . PLUS
    (40) factor1 -> . MINUS
    (44) empty -> .

    STRING          shift and go to state 40
    LPARENTHESES    shift and go to state 29
    PLUS            shift and go to state 37
    MINUS           shift and go to state 30
    IDENTIFIER      reduce using rule 44 (empty -> .)
    CTEINT          reduce using rule 44 (empty -> .)
    CTEFLOAT        reduce using rule 44 (empty -> .)

    expresion                      shift and go to state 41
    escritura1                     shift and go to state 81
    termino                        shift and go to state 35
    factor                         shift and go to state 31
    factor1                        shift and go to state 36
    exp                            shift and go to state 32
    empty                          shift and go to state 34

state 64

    (19) escritura1 -> STRING escritura2 .

    RPARENTHESES    reduce using rule 19 (escritura1 -> STRING escritura2 .)


state 65

    (20) escritura2 -> empty .

    RPARENTHESES    reduce using rule 20 (escritura2 -> empty .)


state 66

    (18) escritura1 -> expresion escritura2 .

    RPARENTHESES    reduce using rule 18 (escritura1 -> expresion escritura2 .)


state 67

    (9) tipo -> FLOAT .

    SEMICOLON       reduce using rule 9 (tipo -> FLOAT .)


state 68

    (8) tipo -> INT .

    SEMICOLON       reduce using rule 8 (tipo -> INT .)


state 69

    (4) vars1 -> IDENTIFIER vars2 COLON tipo . SEMICOLON vars1
    (5) vars1 -> IDENTIFIER vars2 COLON tipo . SEMICOLON

    SEMICOLON       shift and go to state 82


state 70

    (7) vars2 -> COMMA IDENTIFIER vars2 .

    COLON           reduce using rule 7 (vars2 -> COMMA IDENTIFIER vars2 .)


state 71

    (36) factor -> LPARENTHESES expresion RPARENTHESES .

    MULTI           reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)
    DIVIDE          reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)
    PLUS            reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)
    MINUS           reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)
    LTHAN           reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)
    GTHAN           reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)
    NOTEQUAL        reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)
    RPARENTHESES    reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)
    SEMICOLON       reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)
    COMMA           reduce using rule 36 (factor -> LPARENTHESES expresion RPARENTHESES .)


state 72

    (34) termino1 -> MULTI factor . termino1
    (33) termino1 -> . empty
    (34) termino1 -> . MULTI factor termino1
    (35) termino1 -> . DIVIDE factor termino1
    (44) empty -> .

    MULTI           shift and go to state 45
    DIVIDE          shift and go to state 46
    PLUS            reduce using rule 44 (empty -> .)
    MINUS           reduce using rule 44 (empty -> .)
    LTHAN           reduce using rule 44 (empty -> .)
    GTHAN           reduce using rule 44 (empty -> .)
    NOTEQUAL        reduce using rule 44 (empty -> .)
    RPARENTHESES    reduce using rule 44 (empty -> .)
    SEMICOLON       reduce using rule 44 (empty -> .)
    COMMA           reduce using rule 44 (empty -> .)

    empty                          shift and go to state 47
    termino1                       shift and go to state 83

state 73

    (35) termino1 -> DIVIDE factor . termino1
    (33) termino1 -> . empty
    (34) termino1 -> . MULTI factor termino1
    (35) termino1 -> . DIVIDE factor termino1
    (44) empty -> .

    MULTI           shift and go to state 45
    DIVIDE          shift and go to state 46
    PLUS            reduce using rule 44 (empty -> .)
    MINUS           reduce using rule 44 (empty -> .)
    LTHAN           reduce using rule 44 (empty -> .)
    GTHAN           reduce using rule 44 (empty -> .)
    NOTEQUAL        reduce using rule 44 (empty -> .)
    RPARENTHESES    reduce using rule 44 (empty -> .)
    SEMICOLON       reduce using rule 44 (empty -> .)
    COMMA           reduce using rule 44 (empty -> .)

    empty                          shift and go to state 47
    termino1                       shift and go to state 84

state 74

    (25) expresion -> exp LTHAN exp .

    SEMICOLON       reduce using rule 25 (expresion -> exp LTHAN exp .)
    COMMA           reduce using rule 25 (expresion -> exp LTHAN exp .)
    RPARENTHESES    reduce using rule 25 (expresion -> exp LTHAN exp .)


state 75

    (27) expresion -> exp NOTEQUAL exp .

    SEMICOLON       reduce using rule 27 (expresion -> exp NOTEQUAL exp .)
    COMMA           reduce using rule 27 (expresion -> exp NOTEQUAL exp .)
    RPARENTHESES    reduce using rule 27 (expresion -> exp NOTEQUAL exp .)


state 76

    (26) expresion -> exp GTHAN exp .

    SEMICOLON       reduce using rule 26 (expresion -> exp GTHAN exp .)
    COMMA           reduce using rule 26 (expresion -> exp GTHAN exp .)
    RPARENTHESES    reduce using rule 26 (expresion -> exp GTHAN exp .)


state 77

    (22) condicion -> IF LPARENTHESES expresion RPARENTHESES bloque . SEMICOLON
    (23) condicion -> IF LPARENTHESES expresion RPARENTHESES bloque . ELSE bloque SEMICOLON

    SEMICOLON       shift and go to state 85
    ELSE            shift and go to state 86


state 78

    (31) exp1 -> MINUS termino . exp1
    (29) exp1 -> . empty
    (30) exp1 -> . PLUS termino exp1
    (31) exp1 -> . MINUS termino exp1
    (44) empty -> .

    PLUS            shift and go to state 56
    MINUS           shift and go to state 54
    LTHAN           reduce using rule 44 (empty -> .)
    GTHAN           reduce using rule 44 (empty -> .)
    NOTEQUAL        reduce using rule 44 (empty -> .)
    RPARENTHESES    reduce using rule 44 (empty -> .)
    SEMICOLON       reduce using rule 44 (empty -> .)
    COMMA           reduce using rule 44 (empty -> .)

    exp1                           shift and go to state 87
    empty                          shift and go to state 55

state 79

    (30) exp1 -> PLUS termino . exp1
    (29) exp1 -> . empty
    (30) exp1 -> . PLUS termino exp1
    (31) exp1 -> . MINUS termino exp1
    (44) empty -> .

    PLUS            shift and go to state 56
    MINUS           shift and go to state 54
    LTHAN           reduce using rule 44 (empty -> .)
    GTHAN           reduce using rule 44 (empty -> .)
    NOTEQUAL        reduce using rule 44 (empty -> .)
    RPARENTHESES    reduce using rule 44 (empty -> .)
    SEMICOLON       reduce using rule 44 (empty -> .)
    COMMA           reduce using rule 44 (empty -> .)

    exp1                           shift and go to state 88
    empty                          shift and go to state 55

state 80

    (17) escritura -> PRINT LPARENTHESES escritura1 RPARENTHESES SEMICOLON .

    IDENTIFIER      reduce using rule 17 (escritura -> PRINT LPARENTHESES escritura1 RPARENTHESES SEMICOLON .)
    IF              reduce using rule 17 (escritura -> PRINT LPARENTHESES escritura1 RPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 17 (escritura -> PRINT LPARENTHESES escritura1 RPARENTHESES SEMICOLON .)
    RBRACE          reduce using rule 17 (escritura -> PRINT LPARENTHESES escritura1 RPARENTHESES SEMICOLON .)


state 81

    (21) escritura2 -> COMMA escritura1 .

    RPARENTHESES    reduce using rule 21 (escritura2 -> COMMA escritura1 .)


state 82

    (4) vars1 -> IDENTIFIER vars2 COLON tipo SEMICOLON . vars1
    (5) vars1 -> IDENTIFIER vars2 COLON tipo SEMICOLON .
    (4) vars1 -> . IDENTIFIER vars2 COLON tipo SEMICOLON vars1
    (5) vars1 -> . IDENTIFIER vars2 COLON tipo SEMICOLON

    LBRACE          reduce using rule 5 (vars1 -> IDENTIFIER vars2 COLON tipo SEMICOLON .)
    IDENTIFIER      shift and go to state 19

    vars1                          shift and go to state 89

state 83

    (34) termino1 -> MULTI factor termino1 .

    PLUS            reduce using rule 34 (termino1 -> MULTI factor termino1 .)
    MINUS           reduce using rule 34 (termino1 -> MULTI factor termino1 .)
    LTHAN           reduce using rule 34 (termino1 -> MULTI factor termino1 .)
    GTHAN           reduce using rule 34 (termino1 -> MULTI factor termino1 .)
    NOTEQUAL        reduce using rule 34 (termino1 -> MULTI factor termino1 .)
    RPARENTHESES    reduce using rule 34 (termino1 -> MULTI factor termino1 .)
    SEMICOLON       reduce using rule 34 (termino1 -> MULTI factor termino1 .)
    COMMA           reduce using rule 34 (termino1 -> MULTI factor termino1 .)


state 84

    (35) termino1 -> DIVIDE factor termino1 .

    PLUS            reduce using rule 35 (termino1 -> DIVIDE factor termino1 .)
    MINUS           reduce using rule 35 (termino1 -> DIVIDE factor termino1 .)
    LTHAN           reduce using rule 35 (termino1 -> DIVIDE factor termino1 .)
    GTHAN           reduce using rule 35 (termino1 -> DIVIDE factor termino1 .)
    NOTEQUAL        reduce using rule 35 (termino1 -> DIVIDE factor termino1 .)
    RPARENTHESES    reduce using rule 35 (termino1 -> DIVIDE factor termino1 .)
    SEMICOLON       reduce using rule 35 (termino1 -> DIVIDE factor termino1 .)
    COMMA           reduce using rule 35 (termino1 -> DIVIDE factor termino1 .)


state 85

    (22) condicion -> IF LPARENTHESES expresion RPARENTHESES bloque SEMICOLON .

    IDENTIFIER      reduce using rule 22 (condicion -> IF LPARENTHESES expresion RPARENTHESES bloque SEMICOLON .)
    IF              reduce using rule 22 (condicion -> IF LPARENTHESES expresion RPARENTHESES bloque SEMICOLON .)
    PRINT           reduce using rule 22 (condicion -> IF LPARENTHESES expresion RPARENTHESES bloque SEMICOLON .)
    RBRACE          reduce using rule 22 (condicion -> IF LPARENTHESES expresion RPARENTHESES bloque SEMICOLON .)


state 86

    (23) condicion -> IF LPARENTHESES expresion RPARENTHESES bloque ELSE . bloque SEMICOLON
    (10) bloque -> . LBRACE bloque1 RBRACE

    LBRACE          shift and go to state 7

    bloque                         shift and go to state 90

state 87

    (31) exp1 -> MINUS termino exp1 .

    LTHAN           reduce using rule 31 (exp1 -> MINUS termino exp1 .)
    GTHAN           reduce using rule 31 (exp1 -> MINUS termino exp1 .)
    NOTEQUAL        reduce using rule 31 (exp1 -> MINUS termino exp1 .)
    RPARENTHESES    reduce using rule 31 (exp1 -> MINUS termino exp1 .)
    SEMICOLON       reduce using rule 31 (exp1 -> MINUS termino exp1 .)
    COMMA           reduce using rule 31 (exp1 -> MINUS termino exp1 .)


state 88

    (30) exp1 -> PLUS termino exp1 .

    LTHAN           reduce using rule 30 (exp1 -> PLUS termino exp1 .)
    GTHAN           reduce using rule 30 (exp1 -> PLUS termino exp1 .)
    NOTEQUAL        reduce using rule 30 (exp1 -> PLUS termino exp1 .)
    RPARENTHESES    reduce using rule 30 (exp1 -> PLUS termino exp1 .)
    SEMICOLON       reduce using rule 30 (exp1 -> PLUS termino exp1 .)
    COMMA           reduce using rule 30 (exp1 -> PLUS termino exp1 .)


state 89

    (4) vars1 -> IDENTIFIER vars2 COLON tipo SEMICOLON vars1 .

    LBRACE          reduce using rule 4 (vars1 -> IDENTIFIER vars2 COLON tipo SEMICOLON vars1 .)


state 90

    (23) condicion -> IF LPARENTHESES expresion RPARENTHESES bloque ELSE bloque . SEMICOLON

    SEMICOLON       shift and go to state 91


state 91

    (23) condicion -> IF LPARENTHESES expresion RPARENTHESES bloque ELSE bloque SEMICOLON .

    IDENTIFIER      reduce using rule 23 (condicion -> IF LPARENTHESES expresion RPARENTHESES bloque ELSE bloque SEMICOLON .)
    IF              reduce using rule 23 (condicion -> IF LPARENTHESES expresion RPARENTHESES bloque ELSE bloque SEMICOLON .)
    PRINT           reduce using rule 23 (condicion -> IF LPARENTHESES expresion RPARENTHESES bloque ELSE bloque SEMICOLON .)
    RBRACE          reduce using rule 23 (condicion -> IF LPARENTHESES expresion RPARENTHESES bloque ELSE bloque SEMICOLON .)

