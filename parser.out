Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    THASH
    FALSE
    TRUE
    TBOOL

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM bloque ENDPROGRAM
Rule 2     programa -> PROGRAM funciones bloque ENDPROGRAM
Rule 3     programa -> PROGRAM global funciones bloque ENDPROGRAM
Rule 4     programa -> PROGRAM global bloque ENDPROGRAM
Rule 5     funciones -> func funciones
Rule 6     funciones -> voidfunc funciones
Rule 7     funciones -> empty
Rule 8     vars -> VAR vars_list ENDVAR
Rule 9     global -> GLOBAL vars_list ENDGLOBAL
Rule 10    vars_list -> vars_declaration vars_list
Rule 11    vars_list -> vars_declaration
Rule 12    vars_list -> empty
Rule 13    vars_declaration -> tipo identifier
Rule 14    tipo -> TINT
Rule 15    tipo -> TFLOAT
Rule 16    tipo -> TSTRING
Rule 17    tipo -> VOID
Rule 18    bloque -> BLOQUE estatuto_list ENDBLOQUE
Rule 19    estatuto_list -> estatuto estatuto_list
Rule 20    estatuto_list -> estatuto
Rule 21    estatuto_list -> empty
Rule 22    estatuto -> asignacion
Rule 23    estatuto -> condicion
Rule 24    estatuto -> escritura
Rule 25    estatuto -> lectura
Rule 26    estatuto -> while
Rule 27    estatuto -> for
Rule 28    estatuto -> vars
Rule 29    estatuto -> llamarfun
Rule 30    asignacion -> identifier EQUAL expresion
Rule 31    escritura -> PRINT escritura_vars
Rule 32    escritura_vars -> expresion COMMA escritura_vars
Rule 33    escritura_vars -> expresion
Rule 34    lectura -> READ identifier
Rule 35    condicion -> IF expresion estatuto_list elseif ENDIF
Rule 36    condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
Rule 37    condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF
Rule 38    condicion -> IF expresion estatuto_list ENDIF
Rule 39    elseif -> ELSEIF expresion estatuto_list
Rule 40    while -> WHILE expresion estatuto_list ENDWHILE
Rule 41    for -> FOR expresion estatuto_list ENDFOR
Rule 42    expresion -> termino
Rule 43    expresion -> expresion and_or termino
Rule 44    termino -> factor
Rule 45    termino -> termino sign factor
Rule 46    factor -> elemento
Rule 47    factor -> factor psign elemento
Rule 48    sign -> LTHAN
Rule 49    sign -> GTHAN
Rule 50    sign -> EQUALTO
Rule 51    sign -> GTHANEQ
Rule 52    sign -> LTHANEQ
Rule 53    sign -> NOTEQUAL
Rule 54    sign -> PLUS
Rule 55    sign -> MINUS
Rule 56    psign -> MULTI
Rule 57    psign -> DIVIDE
Rule 58    and_or -> AND
Rule 59    and_or -> OR
Rule 60    elemento -> identifier
Rule 61    elemento -> int
Rule 62    elemento -> float
Rule 63    elemento -> string
Rule 64    elemento -> LPARENTHESES expresion RPARENTHESES
Rule 65    elemento -> llamarfun
Rule 66    func -> funchead bloque RETURN identifier ENDMETHOD
Rule 67    voidfunc -> prochead bloque ENDMETHOD
Rule 68    prochead -> METHOD VOID identifier parameter_list
Rule 69    prochead -> METHOD VOID identifier
Rule 70    funchead -> METHOD tipo identifier parameter_list
Rule 71    funchead -> METHOD tipo identifier
Rule 72    parameter_list -> parameter
Rule 73    parameter_list -> parameter COMMA parameter_list
Rule 74    parameter -> tipo identifier
Rule 75    parameter -> tipo referencia
Rule 76    llamarfun -> CALLMETHOD identifier funparams
Rule 77    llamarfun -> CALLMETHOD identifier
Rule 78    funparams -> param
Rule 79    funparams -> funparams COMMA param
Rule 80    param -> expresion
Rule 81    empty -> <empty>
Rule 82    identifier -> IDENTIFIER
Rule 83    referencia -> REFERENCIA
Rule 84    int -> INT
Rule 85    float -> FLOAT
Rule 86    string -> STRING

Terminals, with rules where they appear

AND                  : 58
BLOQUE               : 18
CALLMETHOD           : 76 77
COMMA                : 32 73 79
DIVIDE               : 57
ELSE                 : 36 37
ELSEIF               : 39
ENDBLOQUE            : 18
ENDFOR               : 41
ENDGLOBAL            : 9
ENDIF                : 35 36 37 38
ENDMETHOD            : 66 67
ENDPROGRAM           : 1 2 3 4
ENDVAR               : 8
ENDWHILE             : 40
EQUAL                : 30
EQUALTO              : 50
FALSE                : 
FLOAT                : 85
FOR                  : 41
GLOBAL               : 9
GTHAN                : 49
GTHANEQ              : 51
IDENTIFIER           : 82
IF                   : 35 36 37 38
INT                  : 84
LPARENTHESES         : 64
LTHAN                : 48
LTHANEQ              : 52
METHOD               : 68 69 70 71
MINUS                : 55
MULTI                : 56
NOTEQUAL             : 53
OR                   : 59
PLUS                 : 54
PRINT                : 31
PROGRAM              : 1 2 3 4
READ                 : 34
REFERENCIA           : 83
RETURN               : 66
RPARENTHESES         : 64
STRING               : 86
TBOOL                : 
TFLOAT               : 15
THASH                : 
TINT                 : 14
TRUE                 : 
TSTRING              : 16
VAR                  : 8
VOID                 : 17 68 69
WHILE                : 40
error                : 

Nonterminals, with rules where they appear

and_or               : 43
asignacion           : 22
bloque               : 1 2 3 4 66 67
condicion            : 23
elemento             : 46 47
elseif               : 35 36
empty                : 7 12 21
escritura            : 24
escritura_vars       : 31 32
estatuto             : 19 20
estatuto_list        : 18 19 35 36 36 37 37 38 39 40 41
expresion            : 30 32 33 35 36 37 38 39 40 41 43 64 80
factor               : 44 45 47
float                : 62
for                  : 27
func                 : 5
funchead             : 66
funciones            : 2 3 5 6
funparams            : 76 79
global               : 3 4
identifier           : 13 30 34 60 66 68 69 70 71 74 76 77
int                  : 61
lectura              : 25
llamarfun            : 29 65
param                : 78 79
parameter            : 72 73
parameter_list       : 68 70 73
prochead             : 67
programa             : 0
psign                : 47
referencia           : 75
sign                 : 45
string               : 63
termino              : 42 43 45
tipo                 : 13 70 71 74 75
vars                 : 28
vars_declaration     : 10 11
vars_list            : 8 9 10
voidfunc             : 6
while                : 26

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM bloque ENDPROGRAM
    (2) programa -> . PROGRAM funciones bloque ENDPROGRAM
    (3) programa -> . PROGRAM global funciones bloque ENDPROGRAM
    (4) programa -> . PROGRAM global bloque ENDPROGRAM

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . bloque ENDPROGRAM
    (2) programa -> PROGRAM . funciones bloque ENDPROGRAM
    (3) programa -> PROGRAM . global funciones bloque ENDPROGRAM
    (4) programa -> PROGRAM . global bloque ENDPROGRAM
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE
    (5) funciones -> . func funciones
    (6) funciones -> . voidfunc funciones
    (7) funciones -> . empty
    (9) global -> . GLOBAL vars_list ENDGLOBAL
    (66) func -> . funchead bloque RETURN identifier ENDMETHOD
    (67) voidfunc -> . prochead bloque ENDMETHOD
    (81) empty -> .
    (70) funchead -> . METHOD tipo identifier parameter_list
    (71) funchead -> . METHOD tipo identifier
    (68) prochead -> . METHOD VOID identifier parameter_list
    (69) prochead -> . METHOD VOID identifier

  ! shift/reduce conflict for BLOQUE resolved as shift
    BLOQUE          shift and go to state 6
    GLOBAL          shift and go to state 12
    METHOD          shift and go to state 3

  ! BLOQUE          [ reduce using rule 81 (empty -> .) ]

    func                           shift and go to state 4
    empty                          shift and go to state 9
    global                         shift and go to state 5
    voidfunc                       shift and go to state 10
    bloque                         shift and go to state 11
    funchead                       shift and go to state 7
    funciones                      shift and go to state 13
    prochead                       shift and go to state 8

state 2

    (0) S' -> programa .



state 3

    (70) funchead -> METHOD . tipo identifier parameter_list
    (71) funchead -> METHOD . tipo identifier
    (68) prochead -> METHOD . VOID identifier parameter_list
    (69) prochead -> METHOD . VOID identifier
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    VOID            shift and go to state 14
    TINT            shift and go to state 17
    TFLOAT          shift and go to state 16
    TSTRING         shift and go to state 15

    tipo                           shift and go to state 18

state 4

    (5) funciones -> func . funciones
    (5) funciones -> . func funciones
    (6) funciones -> . voidfunc funciones
    (7) funciones -> . empty
    (66) func -> . funchead bloque RETURN identifier ENDMETHOD
    (67) voidfunc -> . prochead bloque ENDMETHOD
    (81) empty -> .
    (70) funchead -> . METHOD tipo identifier parameter_list
    (71) funchead -> . METHOD tipo identifier
    (68) prochead -> . METHOD VOID identifier parameter_list
    (69) prochead -> . METHOD VOID identifier

    BLOQUE          reduce using rule 81 (empty -> .)
    METHOD          shift and go to state 3

    func                           shift and go to state 4
    empty                          shift and go to state 9
    funchead                       shift and go to state 7
    funciones                      shift and go to state 19
    voidfunc                       shift and go to state 10
    prochead                       shift and go to state 8

state 5

    (3) programa -> PROGRAM global . funciones bloque ENDPROGRAM
    (4) programa -> PROGRAM global . bloque ENDPROGRAM
    (5) funciones -> . func funciones
    (6) funciones -> . voidfunc funciones
    (7) funciones -> . empty
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE
    (66) func -> . funchead bloque RETURN identifier ENDMETHOD
    (67) voidfunc -> . prochead bloque ENDMETHOD
    (81) empty -> .
    (70) funchead -> . METHOD tipo identifier parameter_list
    (71) funchead -> . METHOD tipo identifier
    (68) prochead -> . METHOD VOID identifier parameter_list
    (69) prochead -> . METHOD VOID identifier

  ! shift/reduce conflict for BLOQUE resolved as shift
    BLOQUE          shift and go to state 6
    METHOD          shift and go to state 3

  ! BLOQUE          [ reduce using rule 81 (empty -> .) ]

    func                           shift and go to state 4
    empty                          shift and go to state 9
    voidfunc                       shift and go to state 10
    bloque                         shift and go to state 20
    funchead                       shift and go to state 7
    funciones                      shift and go to state 21
    prochead                       shift and go to state 8

state 6

    (18) bloque -> BLOQUE . estatuto_list ENDBLOQUE
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (29) estatuto -> . llamarfun
    (81) empty -> .
    (30) asignacion -> . identifier EQUAL expresion
    (35) condicion -> . IF expresion estatuto_list elseif ENDIF
    (36) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> . IF expresion estatuto_list ENDIF
    (31) escritura -> . PRINT escritura_vars
    (34) lectura -> . READ identifier
    (40) while -> . WHILE expresion estatuto_list ENDWHILE
    (41) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier
    (82) identifier -> . IDENTIFIER

    ENDBLOQUE       reduce using rule 81 (empty -> .)
    IF              shift and go to state 35
    PRINT           shift and go to state 25
    READ            shift and go to state 26
    WHILE           shift and go to state 31
    FOR             shift and go to state 36
    VAR             shift and go to state 22
    CALLMETHOD      shift and go to state 33
    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 30
    empty                          shift and go to state 32
    vars                           shift and go to state 24
    escritura                      shift and go to state 34
    while                          shift and go to state 27
    asignacion                     shift and go to state 28
    lectura                        shift and go to state 37
    estatuto_list                  shift and go to state 38
    for                            shift and go to state 29
    estatuto                       shift and go to state 39
    llamarfun                      shift and go to state 40
    condicion                      shift and go to state 41

state 7

    (66) func -> funchead . bloque RETURN identifier ENDMETHOD
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE

    BLOQUE          shift and go to state 6

    bloque                         shift and go to state 42

state 8

    (67) voidfunc -> prochead . bloque ENDMETHOD
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE

    BLOQUE          shift and go to state 6

    bloque                         shift and go to state 43

state 9

    (7) funciones -> empty .

    BLOQUE          reduce using rule 7 (funciones -> empty .)


state 10

    (6) funciones -> voidfunc . funciones
    (5) funciones -> . func funciones
    (6) funciones -> . voidfunc funciones
    (7) funciones -> . empty
    (66) func -> . funchead bloque RETURN identifier ENDMETHOD
    (67) voidfunc -> . prochead bloque ENDMETHOD
    (81) empty -> .
    (70) funchead -> . METHOD tipo identifier parameter_list
    (71) funchead -> . METHOD tipo identifier
    (68) prochead -> . METHOD VOID identifier parameter_list
    (69) prochead -> . METHOD VOID identifier

    BLOQUE          reduce using rule 81 (empty -> .)
    METHOD          shift and go to state 3

    func                           shift and go to state 4
    empty                          shift and go to state 9
    funchead                       shift and go to state 7
    funciones                      shift and go to state 44
    voidfunc                       shift and go to state 10
    prochead                       shift and go to state 8

state 11

    (1) programa -> PROGRAM bloque . ENDPROGRAM

    ENDPROGRAM      shift and go to state 45


state 12

    (9) global -> GLOBAL . vars_list ENDGLOBAL
    (10) vars_list -> . vars_declaration vars_list
    (11) vars_list -> . vars_declaration
    (12) vars_list -> . empty
    (13) vars_declaration -> . tipo identifier
    (81) empty -> .
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    ENDGLOBAL       reduce using rule 81 (empty -> .)
    TINT            shift and go to state 17
    TFLOAT          shift and go to state 16
    TSTRING         shift and go to state 15
    VOID            shift and go to state 47

    vars_declaration               shift and go to state 46
    tipo                           shift and go to state 49
    vars_list                      shift and go to state 50
    empty                          shift and go to state 48

state 13

    (2) programa -> PROGRAM funciones . bloque ENDPROGRAM
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE

    BLOQUE          shift and go to state 6

    bloque                         shift and go to state 51

state 14

    (68) prochead -> METHOD VOID . identifier parameter_list
    (69) prochead -> METHOD VOID . identifier
    (17) tipo -> VOID .
    (82) identifier -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 23

  ! IDENTIFIER      [ reduce using rule 17 (tipo -> VOID .) ]

    identifier                     shift and go to state 52

state 15

    (16) tipo -> TSTRING .

    IDENTIFIER      reduce using rule 16 (tipo -> TSTRING .)
    REFERENCIA      reduce using rule 16 (tipo -> TSTRING .)


state 16

    (15) tipo -> TFLOAT .

    IDENTIFIER      reduce using rule 15 (tipo -> TFLOAT .)
    REFERENCIA      reduce using rule 15 (tipo -> TFLOAT .)


state 17

    (14) tipo -> TINT .

    IDENTIFIER      reduce using rule 14 (tipo -> TINT .)
    REFERENCIA      reduce using rule 14 (tipo -> TINT .)


state 18

    (70) funchead -> METHOD tipo . identifier parameter_list
    (71) funchead -> METHOD tipo . identifier
    (82) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 53

state 19

    (5) funciones -> func funciones .

    BLOQUE          reduce using rule 5 (funciones -> func funciones .)


state 20

    (4) programa -> PROGRAM global bloque . ENDPROGRAM

    ENDPROGRAM      shift and go to state 54


state 21

    (3) programa -> PROGRAM global funciones . bloque ENDPROGRAM
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE

    BLOQUE          shift and go to state 6

    bloque                         shift and go to state 55

state 22

    (8) vars -> VAR . vars_list ENDVAR
    (10) vars_list -> . vars_declaration vars_list
    (11) vars_list -> . vars_declaration
    (12) vars_list -> . empty
    (13) vars_declaration -> . tipo identifier
    (81) empty -> .
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    ENDVAR          reduce using rule 81 (empty -> .)
    TINT            shift and go to state 17
    TFLOAT          shift and go to state 16
    TSTRING         shift and go to state 15
    VOID            shift and go to state 47

    vars_declaration               shift and go to state 46
    tipo                           shift and go to state 49
    vars_list                      shift and go to state 56
    empty                          shift and go to state 48

state 23

    (82) identifier -> IDENTIFIER .

    MULTI           reduce using rule 82 (identifier -> IDENTIFIER .)
    DIVIDE          reduce using rule 82 (identifier -> IDENTIFIER .)
    LTHAN           reduce using rule 82 (identifier -> IDENTIFIER .)
    GTHAN           reduce using rule 82 (identifier -> IDENTIFIER .)
    EQUALTO         reduce using rule 82 (identifier -> IDENTIFIER .)
    GTHANEQ         reduce using rule 82 (identifier -> IDENTIFIER .)
    LTHANEQ         reduce using rule 82 (identifier -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 82 (identifier -> IDENTIFIER .)
    PLUS            reduce using rule 82 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 82 (identifier -> IDENTIFIER .)
    AND             reduce using rule 82 (identifier -> IDENTIFIER .)
    OR              reduce using rule 82 (identifier -> IDENTIFIER .)
    IF              reduce using rule 82 (identifier -> IDENTIFIER .)
    PRINT           reduce using rule 82 (identifier -> IDENTIFIER .)
    READ            reduce using rule 82 (identifier -> IDENTIFIER .)
    WHILE           reduce using rule 82 (identifier -> IDENTIFIER .)
    FOR             reduce using rule 82 (identifier -> IDENTIFIER .)
    VAR             reduce using rule 82 (identifier -> IDENTIFIER .)
    CALLMETHOD      reduce using rule 82 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 82 (identifier -> IDENTIFIER .)
    ENDIF           reduce using rule 82 (identifier -> IDENTIFIER .)
    ELSE            reduce using rule 82 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 82 (identifier -> IDENTIFIER .)
    ENDBLOQUE       reduce using rule 82 (identifier -> IDENTIFIER .)
    ENDWHILE        reduce using rule 82 (identifier -> IDENTIFIER .)
    ELSEIF          reduce using rule 82 (identifier -> IDENTIFIER .)
    ENDFOR          reduce using rule 82 (identifier -> IDENTIFIER .)
    RPARENTHESES    reduce using rule 82 (identifier -> IDENTIFIER .)
    EQUAL           reduce using rule 82 (identifier -> IDENTIFIER .)
    TINT            reduce using rule 82 (identifier -> IDENTIFIER .)
    TFLOAT          reduce using rule 82 (identifier -> IDENTIFIER .)
    TSTRING         reduce using rule 82 (identifier -> IDENTIFIER .)
    VOID            reduce using rule 82 (identifier -> IDENTIFIER .)
    BLOQUE          reduce using rule 82 (identifier -> IDENTIFIER .)
    ENDMETHOD       reduce using rule 82 (identifier -> IDENTIFIER .)
    LPARENTHESES    reduce using rule 82 (identifier -> IDENTIFIER .)
    INT             reduce using rule 82 (identifier -> IDENTIFIER .)
    FLOAT           reduce using rule 82 (identifier -> IDENTIFIER .)
    STRING          reduce using rule 82 (identifier -> IDENTIFIER .)
    ENDGLOBAL       reduce using rule 82 (identifier -> IDENTIFIER .)
    ENDVAR          reduce using rule 82 (identifier -> IDENTIFIER .)


state 24

    (28) estatuto -> vars .

    IF              reduce using rule 28 (estatuto -> vars .)
    PRINT           reduce using rule 28 (estatuto -> vars .)
    READ            reduce using rule 28 (estatuto -> vars .)
    WHILE           reduce using rule 28 (estatuto -> vars .)
    FOR             reduce using rule 28 (estatuto -> vars .)
    VAR             reduce using rule 28 (estatuto -> vars .)
    CALLMETHOD      reduce using rule 28 (estatuto -> vars .)
    IDENTIFIER      reduce using rule 28 (estatuto -> vars .)
    ENDWHILE        reduce using rule 28 (estatuto -> vars .)
    ELSE            reduce using rule 28 (estatuto -> vars .)
    ENDIF           reduce using rule 28 (estatuto -> vars .)
    ELSEIF          reduce using rule 28 (estatuto -> vars .)
    ENDFOR          reduce using rule 28 (estatuto -> vars .)
    ENDBLOQUE       reduce using rule 28 (estatuto -> vars .)


state 25

    (31) escritura -> PRINT . escritura_vars
    (32) escritura_vars -> . expresion COMMA escritura_vars
    (33) escritura_vars -> . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    escritura_vars                 shift and go to state 65
    elemento                       shift and go to state 57
    identifier                     shift and go to state 58
    string                         shift and go to state 66
    factor                         shift and go to state 67
    int                            shift and go to state 69
    expresion                      shift and go to state 62
    float                          shift and go to state 63
    termino                        shift and go to state 64
    llamarfun                      shift and go to state 70

state 26

    (34) lectura -> READ . identifier
    (82) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 71

state 27

    (26) estatuto -> while .

    IF              reduce using rule 26 (estatuto -> while .)
    PRINT           reduce using rule 26 (estatuto -> while .)
    READ            reduce using rule 26 (estatuto -> while .)
    WHILE           reduce using rule 26 (estatuto -> while .)
    FOR             reduce using rule 26 (estatuto -> while .)
    VAR             reduce using rule 26 (estatuto -> while .)
    CALLMETHOD      reduce using rule 26 (estatuto -> while .)
    IDENTIFIER      reduce using rule 26 (estatuto -> while .)
    ENDWHILE        reduce using rule 26 (estatuto -> while .)
    ELSE            reduce using rule 26 (estatuto -> while .)
    ENDIF           reduce using rule 26 (estatuto -> while .)
    ELSEIF          reduce using rule 26 (estatuto -> while .)
    ENDFOR          reduce using rule 26 (estatuto -> while .)
    ENDBLOQUE       reduce using rule 26 (estatuto -> while .)


state 28

    (22) estatuto -> asignacion .

    IF              reduce using rule 22 (estatuto -> asignacion .)
    PRINT           reduce using rule 22 (estatuto -> asignacion .)
    READ            reduce using rule 22 (estatuto -> asignacion .)
    WHILE           reduce using rule 22 (estatuto -> asignacion .)
    FOR             reduce using rule 22 (estatuto -> asignacion .)
    VAR             reduce using rule 22 (estatuto -> asignacion .)
    CALLMETHOD      reduce using rule 22 (estatuto -> asignacion .)
    IDENTIFIER      reduce using rule 22 (estatuto -> asignacion .)
    ENDWHILE        reduce using rule 22 (estatuto -> asignacion .)
    ELSE            reduce using rule 22 (estatuto -> asignacion .)
    ENDIF           reduce using rule 22 (estatuto -> asignacion .)
    ELSEIF          reduce using rule 22 (estatuto -> asignacion .)
    ENDFOR          reduce using rule 22 (estatuto -> asignacion .)
    ENDBLOQUE       reduce using rule 22 (estatuto -> asignacion .)


state 29

    (27) estatuto -> for .

    IF              reduce using rule 27 (estatuto -> for .)
    PRINT           reduce using rule 27 (estatuto -> for .)
    READ            reduce using rule 27 (estatuto -> for .)
    WHILE           reduce using rule 27 (estatuto -> for .)
    FOR             reduce using rule 27 (estatuto -> for .)
    VAR             reduce using rule 27 (estatuto -> for .)
    CALLMETHOD      reduce using rule 27 (estatuto -> for .)
    IDENTIFIER      reduce using rule 27 (estatuto -> for .)
    ENDWHILE        reduce using rule 27 (estatuto -> for .)
    ELSE            reduce using rule 27 (estatuto -> for .)
    ENDIF           reduce using rule 27 (estatuto -> for .)
    ELSEIF          reduce using rule 27 (estatuto -> for .)
    ENDFOR          reduce using rule 27 (estatuto -> for .)
    ENDBLOQUE       reduce using rule 27 (estatuto -> for .)


state 30

    (30) asignacion -> identifier . EQUAL expresion

    EQUAL           shift and go to state 72


state 31

    (40) while -> WHILE . expresion estatuto_list ENDWHILE
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 67
    int                            shift and go to state 69
    expresion                      shift and go to state 73
    float                          shift and go to state 63
    termino                        shift and go to state 64
    llamarfun                      shift and go to state 70

state 32

    (21) estatuto_list -> empty .

    ENDFOR          reduce using rule 21 (estatuto_list -> empty .)
    ENDIF           reduce using rule 21 (estatuto_list -> empty .)
    ENDBLOQUE       reduce using rule 21 (estatuto_list -> empty .)
    ELSE            reduce using rule 21 (estatuto_list -> empty .)
    ELSEIF          reduce using rule 21 (estatuto_list -> empty .)
    ENDWHILE        reduce using rule 21 (estatuto_list -> empty .)


state 33

    (76) llamarfun -> CALLMETHOD . identifier funparams
    (77) llamarfun -> CALLMETHOD . identifier
    (82) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 74

state 34

    (24) estatuto -> escritura .

    IF              reduce using rule 24 (estatuto -> escritura .)
    PRINT           reduce using rule 24 (estatuto -> escritura .)
    READ            reduce using rule 24 (estatuto -> escritura .)
    WHILE           reduce using rule 24 (estatuto -> escritura .)
    FOR             reduce using rule 24 (estatuto -> escritura .)
    VAR             reduce using rule 24 (estatuto -> escritura .)
    CALLMETHOD      reduce using rule 24 (estatuto -> escritura .)
    IDENTIFIER      reduce using rule 24 (estatuto -> escritura .)
    ENDWHILE        reduce using rule 24 (estatuto -> escritura .)
    ELSE            reduce using rule 24 (estatuto -> escritura .)
    ENDIF           reduce using rule 24 (estatuto -> escritura .)
    ELSEIF          reduce using rule 24 (estatuto -> escritura .)
    ENDFOR          reduce using rule 24 (estatuto -> escritura .)
    ENDBLOQUE       reduce using rule 24 (estatuto -> escritura .)


state 35

    (35) condicion -> IF . expresion estatuto_list elseif ENDIF
    (36) condicion -> IF . expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> IF . expresion estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> IF . expresion estatuto_list ENDIF
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 67
    int                            shift and go to state 69
    expresion                      shift and go to state 75
    termino                        shift and go to state 64
    float                          shift and go to state 63
    llamarfun                      shift and go to state 70

state 36

    (41) for -> FOR . expresion estatuto_list ENDFOR
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 67
    int                            shift and go to state 69
    expresion                      shift and go to state 76
    float                          shift and go to state 63
    termino                        shift and go to state 64
    llamarfun                      shift and go to state 70

state 37

    (25) estatuto -> lectura .

    IF              reduce using rule 25 (estatuto -> lectura .)
    PRINT           reduce using rule 25 (estatuto -> lectura .)
    READ            reduce using rule 25 (estatuto -> lectura .)
    WHILE           reduce using rule 25 (estatuto -> lectura .)
    FOR             reduce using rule 25 (estatuto -> lectura .)
    VAR             reduce using rule 25 (estatuto -> lectura .)
    CALLMETHOD      reduce using rule 25 (estatuto -> lectura .)
    IDENTIFIER      reduce using rule 25 (estatuto -> lectura .)
    ENDWHILE        reduce using rule 25 (estatuto -> lectura .)
    ELSE            reduce using rule 25 (estatuto -> lectura .)
    ENDIF           reduce using rule 25 (estatuto -> lectura .)
    ELSEIF          reduce using rule 25 (estatuto -> lectura .)
    ENDFOR          reduce using rule 25 (estatuto -> lectura .)
    ENDBLOQUE       reduce using rule 25 (estatuto -> lectura .)


state 38

    (18) bloque -> BLOQUE estatuto_list . ENDBLOQUE

    ENDBLOQUE       shift and go to state 77


state 39

    (19) estatuto_list -> estatuto . estatuto_list
    (20) estatuto_list -> estatuto .
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (29) estatuto -> . llamarfun
    (81) empty -> .
    (30) asignacion -> . identifier EQUAL expresion
    (35) condicion -> . IF expresion estatuto_list elseif ENDIF
    (36) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> . IF expresion estatuto_list ENDIF
    (31) escritura -> . PRINT escritura_vars
    (34) lectura -> . READ identifier
    (40) while -> . WHILE expresion estatuto_list ENDWHILE
    (41) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier
    (82) identifier -> . IDENTIFIER

  ! reduce/reduce conflict for ENDBLOQUE resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ENDWHILE resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ENDIF resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ENDFOR resolved using rule 20 (estatuto_list -> estatuto .)
    ENDFOR          reduce using rule 20 (estatuto_list -> estatuto .)
    ENDIF           reduce using rule 20 (estatuto_list -> estatuto .)
    ENDBLOQUE       reduce using rule 20 (estatuto_list -> estatuto .)
    ELSE            reduce using rule 20 (estatuto_list -> estatuto .)
    ELSEIF          reduce using rule 20 (estatuto_list -> estatuto .)
    ENDWHILE        reduce using rule 20 (estatuto_list -> estatuto .)
    IF              shift and go to state 35
    PRINT           shift and go to state 25
    READ            shift and go to state 26
    WHILE           shift and go to state 31
    FOR             shift and go to state 36
    VAR             shift and go to state 22
    CALLMETHOD      shift and go to state 33
    IDENTIFIER      shift and go to state 23

  ! ENDBLOQUE       [ reduce using rule 81 (empty -> .) ]
  ! ENDWHILE        [ reduce using rule 81 (empty -> .) ]
  ! ELSE            [ reduce using rule 81 (empty -> .) ]
  ! ENDIF           [ reduce using rule 81 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 81 (empty -> .) ]
  ! ENDFOR          [ reduce using rule 81 (empty -> .) ]

    identifier                     shift and go to state 30
    empty                          shift and go to state 32
    vars                           shift and go to state 24
    escritura                      shift and go to state 34
    while                          shift and go to state 27
    asignacion                     shift and go to state 28
    lectura                        shift and go to state 37
    estatuto_list                  shift and go to state 78
    for                            shift and go to state 29
    estatuto                       shift and go to state 39
    llamarfun                      shift and go to state 40
    condicion                      shift and go to state 41

state 40

    (29) estatuto -> llamarfun .

    IF              reduce using rule 29 (estatuto -> llamarfun .)
    PRINT           reduce using rule 29 (estatuto -> llamarfun .)
    READ            reduce using rule 29 (estatuto -> llamarfun .)
    WHILE           reduce using rule 29 (estatuto -> llamarfun .)
    FOR             reduce using rule 29 (estatuto -> llamarfun .)
    VAR             reduce using rule 29 (estatuto -> llamarfun .)
    CALLMETHOD      reduce using rule 29 (estatuto -> llamarfun .)
    IDENTIFIER      reduce using rule 29 (estatuto -> llamarfun .)
    ENDWHILE        reduce using rule 29 (estatuto -> llamarfun .)
    ELSE            reduce using rule 29 (estatuto -> llamarfun .)
    ENDIF           reduce using rule 29 (estatuto -> llamarfun .)
    ELSEIF          reduce using rule 29 (estatuto -> llamarfun .)
    ENDFOR          reduce using rule 29 (estatuto -> llamarfun .)
    ENDBLOQUE       reduce using rule 29 (estatuto -> llamarfun .)


state 41

    (23) estatuto -> condicion .

    IF              reduce using rule 23 (estatuto -> condicion .)
    PRINT           reduce using rule 23 (estatuto -> condicion .)
    READ            reduce using rule 23 (estatuto -> condicion .)
    WHILE           reduce using rule 23 (estatuto -> condicion .)
    FOR             reduce using rule 23 (estatuto -> condicion .)
    VAR             reduce using rule 23 (estatuto -> condicion .)
    CALLMETHOD      reduce using rule 23 (estatuto -> condicion .)
    IDENTIFIER      reduce using rule 23 (estatuto -> condicion .)
    ENDWHILE        reduce using rule 23 (estatuto -> condicion .)
    ELSE            reduce using rule 23 (estatuto -> condicion .)
    ENDIF           reduce using rule 23 (estatuto -> condicion .)
    ELSEIF          reduce using rule 23 (estatuto -> condicion .)
    ENDFOR          reduce using rule 23 (estatuto -> condicion .)
    ENDBLOQUE       reduce using rule 23 (estatuto -> condicion .)


state 42

    (66) func -> funchead bloque . RETURN identifier ENDMETHOD

    RETURN          shift and go to state 79


state 43

    (67) voidfunc -> prochead bloque . ENDMETHOD

    ENDMETHOD       shift and go to state 80


state 44

    (6) funciones -> voidfunc funciones .

    BLOQUE          reduce using rule 6 (funciones -> voidfunc funciones .)


state 45

    (1) programa -> PROGRAM bloque ENDPROGRAM .

    $end            reduce using rule 1 (programa -> PROGRAM bloque ENDPROGRAM .)


state 46

    (10) vars_list -> vars_declaration . vars_list
    (11) vars_list -> vars_declaration .
    (10) vars_list -> . vars_declaration vars_list
    (11) vars_list -> . vars_declaration
    (12) vars_list -> . empty
    (13) vars_declaration -> . tipo identifier
    (81) empty -> .
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

  ! reduce/reduce conflict for ENDGLOBAL resolved using rule 11 (vars_list -> vars_declaration .)
  ! reduce/reduce conflict for ENDVAR resolved using rule 11 (vars_list -> vars_declaration .)
    ENDVAR          reduce using rule 11 (vars_list -> vars_declaration .)
    ENDGLOBAL       reduce using rule 11 (vars_list -> vars_declaration .)
    TINT            shift and go to state 17
    TFLOAT          shift and go to state 16
    TSTRING         shift and go to state 15
    VOID            shift and go to state 47

  ! ENDGLOBAL       [ reduce using rule 81 (empty -> .) ]
  ! ENDVAR          [ reduce using rule 81 (empty -> .) ]

    vars_declaration               shift and go to state 46
    tipo                           shift and go to state 49
    vars_list                      shift and go to state 81
    empty                          shift and go to state 48

state 47

    (17) tipo -> VOID .

    IDENTIFIER      reduce using rule 17 (tipo -> VOID .)
    REFERENCIA      reduce using rule 17 (tipo -> VOID .)


state 48

    (12) vars_list -> empty .

    ENDVAR          reduce using rule 12 (vars_list -> empty .)
    ENDGLOBAL       reduce using rule 12 (vars_list -> empty .)


state 49

    (13) vars_declaration -> tipo . identifier
    (82) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 82

state 50

    (9) global -> GLOBAL vars_list . ENDGLOBAL

    ENDGLOBAL       shift and go to state 83


state 51

    (2) programa -> PROGRAM funciones bloque . ENDPROGRAM

    ENDPROGRAM      shift and go to state 84


state 52

    (68) prochead -> METHOD VOID identifier . parameter_list
    (69) prochead -> METHOD VOID identifier .
    (72) parameter_list -> . parameter
    (73) parameter_list -> . parameter COMMA parameter_list
    (74) parameter -> . tipo identifier
    (75) parameter -> . tipo referencia
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    BLOQUE          reduce using rule 69 (prochead -> METHOD VOID identifier .)
    TINT            shift and go to state 17
    TFLOAT          shift and go to state 16
    TSTRING         shift and go to state 15
    VOID            shift and go to state 47

    parameter                      shift and go to state 85
    tipo                           shift and go to state 87
    parameter_list                 shift and go to state 86

state 53

    (70) funchead -> METHOD tipo identifier . parameter_list
    (71) funchead -> METHOD tipo identifier .
    (72) parameter_list -> . parameter
    (73) parameter_list -> . parameter COMMA parameter_list
    (74) parameter -> . tipo identifier
    (75) parameter -> . tipo referencia
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    BLOQUE          reduce using rule 71 (funchead -> METHOD tipo identifier .)
    TINT            shift and go to state 17
    TFLOAT          shift and go to state 16
    TSTRING         shift and go to state 15
    VOID            shift and go to state 47

    parameter                      shift and go to state 85
    tipo                           shift and go to state 87
    parameter_list                 shift and go to state 88

state 54

    (4) programa -> PROGRAM global bloque ENDPROGRAM .

    $end            reduce using rule 4 (programa -> PROGRAM global bloque ENDPROGRAM .)


state 55

    (3) programa -> PROGRAM global funciones bloque . ENDPROGRAM

    ENDPROGRAM      shift and go to state 89


state 56

    (8) vars -> VAR vars_list . ENDVAR

    ENDVAR          shift and go to state 90


state 57

    (46) factor -> elemento .

    MULTI           reduce using rule 46 (factor -> elemento .)
    DIVIDE          reduce using rule 46 (factor -> elemento .)
    LTHAN           reduce using rule 46 (factor -> elemento .)
    GTHAN           reduce using rule 46 (factor -> elemento .)
    EQUALTO         reduce using rule 46 (factor -> elemento .)
    GTHANEQ         reduce using rule 46 (factor -> elemento .)
    LTHANEQ         reduce using rule 46 (factor -> elemento .)
    NOTEQUAL        reduce using rule 46 (factor -> elemento .)
    PLUS            reduce using rule 46 (factor -> elemento .)
    MINUS           reduce using rule 46 (factor -> elemento .)
    RPARENTHESES    reduce using rule 46 (factor -> elemento .)
    AND             reduce using rule 46 (factor -> elemento .)
    OR              reduce using rule 46 (factor -> elemento .)
    IF              reduce using rule 46 (factor -> elemento .)
    PRINT           reduce using rule 46 (factor -> elemento .)
    READ            reduce using rule 46 (factor -> elemento .)
    WHILE           reduce using rule 46 (factor -> elemento .)
    FOR             reduce using rule 46 (factor -> elemento .)
    VAR             reduce using rule 46 (factor -> elemento .)
    CALLMETHOD      reduce using rule 46 (factor -> elemento .)
    IDENTIFIER      reduce using rule 46 (factor -> elemento .)
    ENDFOR          reduce using rule 46 (factor -> elemento .)
    COMMA           reduce using rule 46 (factor -> elemento .)
    ENDBLOQUE       reduce using rule 46 (factor -> elemento .)
    ENDWHILE        reduce using rule 46 (factor -> elemento .)
    ELSE            reduce using rule 46 (factor -> elemento .)
    ENDIF           reduce using rule 46 (factor -> elemento .)
    ELSEIF          reduce using rule 46 (factor -> elemento .)


state 58

    (60) elemento -> identifier .

    MULTI           reduce using rule 60 (elemento -> identifier .)
    DIVIDE          reduce using rule 60 (elemento -> identifier .)
    LTHAN           reduce using rule 60 (elemento -> identifier .)
    GTHAN           reduce using rule 60 (elemento -> identifier .)
    EQUALTO         reduce using rule 60 (elemento -> identifier .)
    GTHANEQ         reduce using rule 60 (elemento -> identifier .)
    LTHANEQ         reduce using rule 60 (elemento -> identifier .)
    NOTEQUAL        reduce using rule 60 (elemento -> identifier .)
    PLUS            reduce using rule 60 (elemento -> identifier .)
    MINUS           reduce using rule 60 (elemento -> identifier .)
    AND             reduce using rule 60 (elemento -> identifier .)
    OR              reduce using rule 60 (elemento -> identifier .)
    COMMA           reduce using rule 60 (elemento -> identifier .)
    IF              reduce using rule 60 (elemento -> identifier .)
    PRINT           reduce using rule 60 (elemento -> identifier .)
    READ            reduce using rule 60 (elemento -> identifier .)
    WHILE           reduce using rule 60 (elemento -> identifier .)
    FOR             reduce using rule 60 (elemento -> identifier .)
    VAR             reduce using rule 60 (elemento -> identifier .)
    CALLMETHOD      reduce using rule 60 (elemento -> identifier .)
    IDENTIFIER      reduce using rule 60 (elemento -> identifier .)
    ENDBLOQUE       reduce using rule 60 (elemento -> identifier .)
    ENDWHILE        reduce using rule 60 (elemento -> identifier .)
    ELSE            reduce using rule 60 (elemento -> identifier .)
    ENDIF           reduce using rule 60 (elemento -> identifier .)
    ELSEIF          reduce using rule 60 (elemento -> identifier .)
    ENDFOR          reduce using rule 60 (elemento -> identifier .)
    RPARENTHESES    reduce using rule 60 (elemento -> identifier .)


state 59

    (64) elemento -> LPARENTHESES . expresion RPARENTHESES
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 67
    int                            shift and go to state 69
    expresion                      shift and go to state 91
    float                          shift and go to state 63
    termino                        shift and go to state 64
    llamarfun                      shift and go to state 70

state 60

    (86) string -> STRING .

    MULTI           reduce using rule 86 (string -> STRING .)
    DIVIDE          reduce using rule 86 (string -> STRING .)
    LTHAN           reduce using rule 86 (string -> STRING .)
    GTHAN           reduce using rule 86 (string -> STRING .)
    EQUALTO         reduce using rule 86 (string -> STRING .)
    GTHANEQ         reduce using rule 86 (string -> STRING .)
    LTHANEQ         reduce using rule 86 (string -> STRING .)
    NOTEQUAL        reduce using rule 86 (string -> STRING .)
    PLUS            reduce using rule 86 (string -> STRING .)
    MINUS           reduce using rule 86 (string -> STRING .)
    AND             reduce using rule 86 (string -> STRING .)
    OR              reduce using rule 86 (string -> STRING .)
    COMMA           reduce using rule 86 (string -> STRING .)
    IF              reduce using rule 86 (string -> STRING .)
    PRINT           reduce using rule 86 (string -> STRING .)
    READ            reduce using rule 86 (string -> STRING .)
    WHILE           reduce using rule 86 (string -> STRING .)
    FOR             reduce using rule 86 (string -> STRING .)
    VAR             reduce using rule 86 (string -> STRING .)
    CALLMETHOD      reduce using rule 86 (string -> STRING .)
    IDENTIFIER      reduce using rule 86 (string -> STRING .)
    ENDBLOQUE       reduce using rule 86 (string -> STRING .)
    ENDWHILE        reduce using rule 86 (string -> STRING .)
    ELSE            reduce using rule 86 (string -> STRING .)
    ENDIF           reduce using rule 86 (string -> STRING .)
    ELSEIF          reduce using rule 86 (string -> STRING .)
    ENDFOR          reduce using rule 86 (string -> STRING .)
    RPARENTHESES    reduce using rule 86 (string -> STRING .)


state 61

    (85) float -> FLOAT .

    MULTI           reduce using rule 85 (float -> FLOAT .)
    DIVIDE          reduce using rule 85 (float -> FLOAT .)
    LTHAN           reduce using rule 85 (float -> FLOAT .)
    GTHAN           reduce using rule 85 (float -> FLOAT .)
    EQUALTO         reduce using rule 85 (float -> FLOAT .)
    GTHANEQ         reduce using rule 85 (float -> FLOAT .)
    LTHANEQ         reduce using rule 85 (float -> FLOAT .)
    NOTEQUAL        reduce using rule 85 (float -> FLOAT .)
    PLUS            reduce using rule 85 (float -> FLOAT .)
    MINUS           reduce using rule 85 (float -> FLOAT .)
    AND             reduce using rule 85 (float -> FLOAT .)
    OR              reduce using rule 85 (float -> FLOAT .)
    IF              reduce using rule 85 (float -> FLOAT .)
    PRINT           reduce using rule 85 (float -> FLOAT .)
    READ            reduce using rule 85 (float -> FLOAT .)
    WHILE           reduce using rule 85 (float -> FLOAT .)
    FOR             reduce using rule 85 (float -> FLOAT .)
    VAR             reduce using rule 85 (float -> FLOAT .)
    CALLMETHOD      reduce using rule 85 (float -> FLOAT .)
    IDENTIFIER      reduce using rule 85 (float -> FLOAT .)
    ENDFOR          reduce using rule 85 (float -> FLOAT .)
    ENDIF           reduce using rule 85 (float -> FLOAT .)
    ELSE            reduce using rule 85 (float -> FLOAT .)
    COMMA           reduce using rule 85 (float -> FLOAT .)
    ENDBLOQUE       reduce using rule 85 (float -> FLOAT .)
    ENDWHILE        reduce using rule 85 (float -> FLOAT .)
    ELSEIF          reduce using rule 85 (float -> FLOAT .)
    RPARENTHESES    reduce using rule 85 (float -> FLOAT .)


state 62

    (32) escritura_vars -> expresion . COMMA escritura_vars
    (33) escritura_vars -> expresion .
    (43) expresion -> expresion . and_or termino
    (58) and_or -> . AND
    (59) and_or -> . OR

    COMMA           shift and go to state 94
    IF              reduce using rule 33 (escritura_vars -> expresion .)
    PRINT           reduce using rule 33 (escritura_vars -> expresion .)
    READ            reduce using rule 33 (escritura_vars -> expresion .)
    WHILE           reduce using rule 33 (escritura_vars -> expresion .)
    FOR             reduce using rule 33 (escritura_vars -> expresion .)
    VAR             reduce using rule 33 (escritura_vars -> expresion .)
    CALLMETHOD      reduce using rule 33 (escritura_vars -> expresion .)
    IDENTIFIER      reduce using rule 33 (escritura_vars -> expresion .)
    ENDBLOQUE       reduce using rule 33 (escritura_vars -> expresion .)
    ENDWHILE        reduce using rule 33 (escritura_vars -> expresion .)
    ELSE            reduce using rule 33 (escritura_vars -> expresion .)
    ENDIF           reduce using rule 33 (escritura_vars -> expresion .)
    ELSEIF          reduce using rule 33 (escritura_vars -> expresion .)
    ENDFOR          reduce using rule 33 (escritura_vars -> expresion .)
    AND             shift and go to state 92
    OR              shift and go to state 93

    and_or                         shift and go to state 95

state 63

    (62) elemento -> float .

    MULTI           reduce using rule 62 (elemento -> float .)
    DIVIDE          reduce using rule 62 (elemento -> float .)
    LTHAN           reduce using rule 62 (elemento -> float .)
    GTHAN           reduce using rule 62 (elemento -> float .)
    EQUALTO         reduce using rule 62 (elemento -> float .)
    GTHANEQ         reduce using rule 62 (elemento -> float .)
    LTHANEQ         reduce using rule 62 (elemento -> float .)
    NOTEQUAL        reduce using rule 62 (elemento -> float .)
    PLUS            reduce using rule 62 (elemento -> float .)
    MINUS           reduce using rule 62 (elemento -> float .)
    AND             reduce using rule 62 (elemento -> float .)
    OR              reduce using rule 62 (elemento -> float .)
    COMMA           reduce using rule 62 (elemento -> float .)
    IF              reduce using rule 62 (elemento -> float .)
    PRINT           reduce using rule 62 (elemento -> float .)
    READ            reduce using rule 62 (elemento -> float .)
    WHILE           reduce using rule 62 (elemento -> float .)
    FOR             reduce using rule 62 (elemento -> float .)
    VAR             reduce using rule 62 (elemento -> float .)
    CALLMETHOD      reduce using rule 62 (elemento -> float .)
    IDENTIFIER      reduce using rule 62 (elemento -> float .)
    ENDBLOQUE       reduce using rule 62 (elemento -> float .)
    ENDWHILE        reduce using rule 62 (elemento -> float .)
    ELSE            reduce using rule 62 (elemento -> float .)
    ENDIF           reduce using rule 62 (elemento -> float .)
    ELSEIF          reduce using rule 62 (elemento -> float .)
    ENDFOR          reduce using rule 62 (elemento -> float .)
    RPARENTHESES    reduce using rule 62 (elemento -> float .)


state 64

    (42) expresion -> termino .
    (45) termino -> termino . sign factor
    (48) sign -> . LTHAN
    (49) sign -> . GTHAN
    (50) sign -> . EQUALTO
    (51) sign -> . GTHANEQ
    (52) sign -> . LTHANEQ
    (53) sign -> . NOTEQUAL
    (54) sign -> . PLUS
    (55) sign -> . MINUS

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUALTO resolved as shift
  ! shift/reduce conflict for GTHANEQ resolved as shift
  ! shift/reduce conflict for LTHANEQ resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    AND             reduce using rule 42 (expresion -> termino .)
    OR              reduce using rule 42 (expresion -> termino .)
    IF              reduce using rule 42 (expresion -> termino .)
    PRINT           reduce using rule 42 (expresion -> termino .)
    READ            reduce using rule 42 (expresion -> termino .)
    WHILE           reduce using rule 42 (expresion -> termino .)
    FOR             reduce using rule 42 (expresion -> termino .)
    VAR             reduce using rule 42 (expresion -> termino .)
    CALLMETHOD      reduce using rule 42 (expresion -> termino .)
    IDENTIFIER      reduce using rule 42 (expresion -> termino .)
    ENDFOR          reduce using rule 42 (expresion -> termino .)
    COMMA           reduce using rule 42 (expresion -> termino .)
    ENDBLOQUE       reduce using rule 42 (expresion -> termino .)
    ENDWHILE        reduce using rule 42 (expresion -> termino .)
    ELSE            reduce using rule 42 (expresion -> termino .)
    ENDIF           reduce using rule 42 (expresion -> termino .)
    ELSEIF          reduce using rule 42 (expresion -> termino .)
    RPARENTHESES    reduce using rule 42 (expresion -> termino .)
    MULTI           reduce using rule 42 (expresion -> termino .)
    DIVIDE          reduce using rule 42 (expresion -> termino .)
    LTHAN           shift and go to state 99
    GTHAN           shift and go to state 101
    EQUALTO         shift and go to state 96
    GTHANEQ         shift and go to state 97
    LTHANEQ         shift and go to state 103
    NOTEQUAL        shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98

  ! LTHAN           [ reduce using rule 42 (expresion -> termino .) ]
  ! GTHAN           [ reduce using rule 42 (expresion -> termino .) ]
  ! EQUALTO         [ reduce using rule 42 (expresion -> termino .) ]
  ! GTHANEQ         [ reduce using rule 42 (expresion -> termino .) ]
  ! LTHANEQ         [ reduce using rule 42 (expresion -> termino .) ]
  ! NOTEQUAL        [ reduce using rule 42 (expresion -> termino .) ]
  ! PLUS            [ reduce using rule 42 (expresion -> termino .) ]
  ! MINUS           [ reduce using rule 42 (expresion -> termino .) ]

    sign                           shift and go to state 102

state 65

    (31) escritura -> PRINT escritura_vars .

    IF              reduce using rule 31 (escritura -> PRINT escritura_vars .)
    PRINT           reduce using rule 31 (escritura -> PRINT escritura_vars .)
    READ            reduce using rule 31 (escritura -> PRINT escritura_vars .)
    WHILE           reduce using rule 31 (escritura -> PRINT escritura_vars .)
    FOR             reduce using rule 31 (escritura -> PRINT escritura_vars .)
    VAR             reduce using rule 31 (escritura -> PRINT escritura_vars .)
    CALLMETHOD      reduce using rule 31 (escritura -> PRINT escritura_vars .)
    IDENTIFIER      reduce using rule 31 (escritura -> PRINT escritura_vars .)
    ENDIF           reduce using rule 31 (escritura -> PRINT escritura_vars .)
    ELSE            reduce using rule 31 (escritura -> PRINT escritura_vars .)
    ELSEIF          reduce using rule 31 (escritura -> PRINT escritura_vars .)
    ENDBLOQUE       reduce using rule 31 (escritura -> PRINT escritura_vars .)
    ENDWHILE        reduce using rule 31 (escritura -> PRINT escritura_vars .)
    ENDFOR          reduce using rule 31 (escritura -> PRINT escritura_vars .)


state 66

    (63) elemento -> string .

    MULTI           reduce using rule 63 (elemento -> string .)
    DIVIDE          reduce using rule 63 (elemento -> string .)
    LTHAN           reduce using rule 63 (elemento -> string .)
    GTHAN           reduce using rule 63 (elemento -> string .)
    EQUALTO         reduce using rule 63 (elemento -> string .)
    GTHANEQ         reduce using rule 63 (elemento -> string .)
    LTHANEQ         reduce using rule 63 (elemento -> string .)
    NOTEQUAL        reduce using rule 63 (elemento -> string .)
    PLUS            reduce using rule 63 (elemento -> string .)
    MINUS           reduce using rule 63 (elemento -> string .)
    AND             reduce using rule 63 (elemento -> string .)
    OR              reduce using rule 63 (elemento -> string .)
    COMMA           reduce using rule 63 (elemento -> string .)
    IF              reduce using rule 63 (elemento -> string .)
    PRINT           reduce using rule 63 (elemento -> string .)
    READ            reduce using rule 63 (elemento -> string .)
    WHILE           reduce using rule 63 (elemento -> string .)
    FOR             reduce using rule 63 (elemento -> string .)
    VAR             reduce using rule 63 (elemento -> string .)
    CALLMETHOD      reduce using rule 63 (elemento -> string .)
    IDENTIFIER      reduce using rule 63 (elemento -> string .)
    ENDBLOQUE       reduce using rule 63 (elemento -> string .)
    ENDWHILE        reduce using rule 63 (elemento -> string .)
    ELSE            reduce using rule 63 (elemento -> string .)
    ENDIF           reduce using rule 63 (elemento -> string .)
    ELSEIF          reduce using rule 63 (elemento -> string .)
    ENDFOR          reduce using rule 63 (elemento -> string .)
    RPARENTHESES    reduce using rule 63 (elemento -> string .)


state 67

    (44) termino -> factor .
    (47) factor -> factor . psign elemento
    (56) psign -> . MULTI
    (57) psign -> . DIVIDE

  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LTHAN           reduce using rule 44 (termino -> factor .)
    GTHAN           reduce using rule 44 (termino -> factor .)
    EQUALTO         reduce using rule 44 (termino -> factor .)
    GTHANEQ         reduce using rule 44 (termino -> factor .)
    LTHANEQ         reduce using rule 44 (termino -> factor .)
    NOTEQUAL        reduce using rule 44 (termino -> factor .)
    PLUS            reduce using rule 44 (termino -> factor .)
    MINUS           reduce using rule 44 (termino -> factor .)
    COMMA           reduce using rule 44 (termino -> factor .)
    AND             reduce using rule 44 (termino -> factor .)
    OR              reduce using rule 44 (termino -> factor .)
    IF              reduce using rule 44 (termino -> factor .)
    PRINT           reduce using rule 44 (termino -> factor .)
    READ            reduce using rule 44 (termino -> factor .)
    WHILE           reduce using rule 44 (termino -> factor .)
    FOR             reduce using rule 44 (termino -> factor .)
    VAR             reduce using rule 44 (termino -> factor .)
    CALLMETHOD      reduce using rule 44 (termino -> factor .)
    IDENTIFIER      reduce using rule 44 (termino -> factor .)
    ENDBLOQUE       reduce using rule 44 (termino -> factor .)
    ENDWHILE        reduce using rule 44 (termino -> factor .)
    ELSE            reduce using rule 44 (termino -> factor .)
    ENDIF           reduce using rule 44 (termino -> factor .)
    ELSEIF          reduce using rule 44 (termino -> factor .)
    ENDFOR          reduce using rule 44 (termino -> factor .)
    RPARENTHESES    reduce using rule 44 (termino -> factor .)
    MULTI           shift and go to state 105
    DIVIDE          shift and go to state 106

  ! MULTI           [ reduce using rule 44 (termino -> factor .) ]
  ! DIVIDE          [ reduce using rule 44 (termino -> factor .) ]

    psign                          shift and go to state 107

state 68

    (84) int -> INT .

    MULTI           reduce using rule 84 (int -> INT .)
    DIVIDE          reduce using rule 84 (int -> INT .)
    LTHAN           reduce using rule 84 (int -> INT .)
    GTHAN           reduce using rule 84 (int -> INT .)
    EQUALTO         reduce using rule 84 (int -> INT .)
    GTHANEQ         reduce using rule 84 (int -> INT .)
    LTHANEQ         reduce using rule 84 (int -> INT .)
    NOTEQUAL        reduce using rule 84 (int -> INT .)
    PLUS            reduce using rule 84 (int -> INT .)
    MINUS           reduce using rule 84 (int -> INT .)
    COMMA           reduce using rule 84 (int -> INT .)
    AND             reduce using rule 84 (int -> INT .)
    OR              reduce using rule 84 (int -> INT .)
    IF              reduce using rule 84 (int -> INT .)
    PRINT           reduce using rule 84 (int -> INT .)
    READ            reduce using rule 84 (int -> INT .)
    WHILE           reduce using rule 84 (int -> INT .)
    FOR             reduce using rule 84 (int -> INT .)
    VAR             reduce using rule 84 (int -> INT .)
    CALLMETHOD      reduce using rule 84 (int -> INT .)
    IDENTIFIER      reduce using rule 84 (int -> INT .)
    ENDBLOQUE       reduce using rule 84 (int -> INT .)
    ENDWHILE        reduce using rule 84 (int -> INT .)
    ELSE            reduce using rule 84 (int -> INT .)
    ENDIF           reduce using rule 84 (int -> INT .)
    ELSEIF          reduce using rule 84 (int -> INT .)
    ENDFOR          reduce using rule 84 (int -> INT .)
    RPARENTHESES    reduce using rule 84 (int -> INT .)


state 69

    (61) elemento -> int .

    MULTI           reduce using rule 61 (elemento -> int .)
    DIVIDE          reduce using rule 61 (elemento -> int .)
    LTHAN           reduce using rule 61 (elemento -> int .)
    GTHAN           reduce using rule 61 (elemento -> int .)
    EQUALTO         reduce using rule 61 (elemento -> int .)
    GTHANEQ         reduce using rule 61 (elemento -> int .)
    LTHANEQ         reduce using rule 61 (elemento -> int .)
    NOTEQUAL        reduce using rule 61 (elemento -> int .)
    PLUS            reduce using rule 61 (elemento -> int .)
    MINUS           reduce using rule 61 (elemento -> int .)
    AND             reduce using rule 61 (elemento -> int .)
    OR              reduce using rule 61 (elemento -> int .)
    COMMA           reduce using rule 61 (elemento -> int .)
    IF              reduce using rule 61 (elemento -> int .)
    PRINT           reduce using rule 61 (elemento -> int .)
    READ            reduce using rule 61 (elemento -> int .)
    WHILE           reduce using rule 61 (elemento -> int .)
    FOR             reduce using rule 61 (elemento -> int .)
    VAR             reduce using rule 61 (elemento -> int .)
    CALLMETHOD      reduce using rule 61 (elemento -> int .)
    IDENTIFIER      reduce using rule 61 (elemento -> int .)
    ENDBLOQUE       reduce using rule 61 (elemento -> int .)
    ENDWHILE        reduce using rule 61 (elemento -> int .)
    ELSE            reduce using rule 61 (elemento -> int .)
    ENDIF           reduce using rule 61 (elemento -> int .)
    ELSEIF          reduce using rule 61 (elemento -> int .)
    ENDFOR          reduce using rule 61 (elemento -> int .)
    RPARENTHESES    reduce using rule 61 (elemento -> int .)


state 70

    (65) elemento -> llamarfun .

    MULTI           reduce using rule 65 (elemento -> llamarfun .)
    DIVIDE          reduce using rule 65 (elemento -> llamarfun .)
    LTHAN           reduce using rule 65 (elemento -> llamarfun .)
    GTHAN           reduce using rule 65 (elemento -> llamarfun .)
    EQUALTO         reduce using rule 65 (elemento -> llamarfun .)
    GTHANEQ         reduce using rule 65 (elemento -> llamarfun .)
    LTHANEQ         reduce using rule 65 (elemento -> llamarfun .)
    NOTEQUAL        reduce using rule 65 (elemento -> llamarfun .)
    PLUS            reduce using rule 65 (elemento -> llamarfun .)
    MINUS           reduce using rule 65 (elemento -> llamarfun .)
    AND             reduce using rule 65 (elemento -> llamarfun .)
    OR              reduce using rule 65 (elemento -> llamarfun .)
    COMMA           reduce using rule 65 (elemento -> llamarfun .)
    IF              reduce using rule 65 (elemento -> llamarfun .)
    PRINT           reduce using rule 65 (elemento -> llamarfun .)
    READ            reduce using rule 65 (elemento -> llamarfun .)
    WHILE           reduce using rule 65 (elemento -> llamarfun .)
    FOR             reduce using rule 65 (elemento -> llamarfun .)
    VAR             reduce using rule 65 (elemento -> llamarfun .)
    CALLMETHOD      reduce using rule 65 (elemento -> llamarfun .)
    IDENTIFIER      reduce using rule 65 (elemento -> llamarfun .)
    ENDBLOQUE       reduce using rule 65 (elemento -> llamarfun .)
    ENDWHILE        reduce using rule 65 (elemento -> llamarfun .)
    ELSE            reduce using rule 65 (elemento -> llamarfun .)
    ENDIF           reduce using rule 65 (elemento -> llamarfun .)
    ELSEIF          reduce using rule 65 (elemento -> llamarfun .)
    ENDFOR          reduce using rule 65 (elemento -> llamarfun .)
    RPARENTHESES    reduce using rule 65 (elemento -> llamarfun .)


state 71

    (34) lectura -> READ identifier .

    IF              reduce using rule 34 (lectura -> READ identifier .)
    PRINT           reduce using rule 34 (lectura -> READ identifier .)
    READ            reduce using rule 34 (lectura -> READ identifier .)
    WHILE           reduce using rule 34 (lectura -> READ identifier .)
    FOR             reduce using rule 34 (lectura -> READ identifier .)
    VAR             reduce using rule 34 (lectura -> READ identifier .)
    CALLMETHOD      reduce using rule 34 (lectura -> READ identifier .)
    IDENTIFIER      reduce using rule 34 (lectura -> READ identifier .)
    ENDIF           reduce using rule 34 (lectura -> READ identifier .)
    ELSE            reduce using rule 34 (lectura -> READ identifier .)
    ENDWHILE        reduce using rule 34 (lectura -> READ identifier .)
    ENDFOR          reduce using rule 34 (lectura -> READ identifier .)
    ENDBLOQUE       reduce using rule 34 (lectura -> READ identifier .)
    ELSEIF          reduce using rule 34 (lectura -> READ identifier .)


state 72

    (30) asignacion -> identifier EQUAL . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 67
    int                            shift and go to state 69
    expresion                      shift and go to state 108
    float                          shift and go to state 63
    termino                        shift and go to state 64
    llamarfun                      shift and go to state 70

state 73

    (40) while -> WHILE expresion . estatuto_list ENDWHILE
    (43) expresion -> expresion . and_or termino
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (58) and_or -> . AND
    (59) and_or -> . OR
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (29) estatuto -> . llamarfun
    (81) empty -> .
    (30) asignacion -> . identifier EQUAL expresion
    (35) condicion -> . IF expresion estatuto_list elseif ENDIF
    (36) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> . IF expresion estatuto_list ENDIF
    (31) escritura -> . PRINT escritura_vars
    (34) lectura -> . READ identifier
    (40) while -> . WHILE expresion estatuto_list ENDWHILE
    (41) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier
    (82) identifier -> . IDENTIFIER

    AND             shift and go to state 92
    OR              shift and go to state 93
    ENDWHILE        reduce using rule 81 (empty -> .)
    IF              shift and go to state 35
    PRINT           shift and go to state 25
    READ            shift and go to state 26
    WHILE           shift and go to state 31
    FOR             shift and go to state 36
    VAR             shift and go to state 22
    CALLMETHOD      shift and go to state 33
    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 30
    for                            shift and go to state 29
    empty                          shift and go to state 32
    vars                           shift and go to state 24
    escritura                      shift and go to state 34
    and_or                         shift and go to state 95
    while                          shift and go to state 27
    asignacion                     shift and go to state 28
    lectura                        shift and go to state 37
    estatuto_list                  shift and go to state 109
    estatuto                       shift and go to state 39
    llamarfun                      shift and go to state 40
    condicion                      shift and go to state 41

state 74

    (76) llamarfun -> CALLMETHOD identifier . funparams
    (77) llamarfun -> CALLMETHOD identifier .
    (78) funparams -> . param
    (79) funparams -> . funparams COMMA param
    (80) param -> . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for CALLMETHOD resolved as shift
    MULTI           reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    DIVIDE          reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    LTHAN           reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    GTHAN           reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    EQUALTO         reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    GTHANEQ         reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    LTHANEQ         reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    NOTEQUAL        reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    PLUS            reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    MINUS           reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    COMMA           reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    AND             reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    OR              reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    IF              reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    PRINT           reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    READ            reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    WHILE           reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    FOR             reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    VAR             reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    ENDBLOQUE       reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    ENDWHILE        reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    ELSE            reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    ENDIF           reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    ELSEIF          reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    ENDFOR          reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    RPARENTHESES    reduce using rule 77 (llamarfun -> CALLMETHOD identifier .)
    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

  ! CALLMETHOD      [ reduce using rule 77 (llamarfun -> CALLMETHOD identifier .) ]
  ! IDENTIFIER      [ reduce using rule 77 (llamarfun -> CALLMETHOD identifier .) ]

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 67
    funparams                      shift and go to state 111
    param                          shift and go to state 112
    int                            shift and go to state 69
    expresion                      shift and go to state 110
    termino                        shift and go to state 64
    float                          shift and go to state 63
    llamarfun                      shift and go to state 70

state 75

    (35) condicion -> IF expresion . estatuto_list elseif ENDIF
    (36) condicion -> IF expresion . estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> IF expresion . estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> IF expresion . estatuto_list ENDIF
    (43) expresion -> expresion . and_or termino
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (58) and_or -> . AND
    (59) and_or -> . OR
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (29) estatuto -> . llamarfun
    (81) empty -> .
    (30) asignacion -> . identifier EQUAL expresion
    (35) condicion -> . IF expresion estatuto_list elseif ENDIF
    (36) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> . IF expresion estatuto_list ENDIF
    (31) escritura -> . PRINT escritura_vars
    (34) lectura -> . READ identifier
    (40) while -> . WHILE expresion estatuto_list ENDWHILE
    (41) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier
    (82) identifier -> . IDENTIFIER

    AND             shift and go to state 92
    OR              shift and go to state 93
    ELSE            reduce using rule 81 (empty -> .)
    ENDIF           reduce using rule 81 (empty -> .)
    ELSEIF          reduce using rule 81 (empty -> .)
    IF              shift and go to state 35
    PRINT           shift and go to state 25
    READ            shift and go to state 26
    WHILE           shift and go to state 31
    FOR             shift and go to state 36
    VAR             shift and go to state 22
    CALLMETHOD      shift and go to state 33
    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 30
    for                            shift and go to state 29
    empty                          shift and go to state 32
    vars                           shift and go to state 24
    escritura                      shift and go to state 34
    and_or                         shift and go to state 95
    while                          shift and go to state 27
    asignacion                     shift and go to state 28
    lectura                        shift and go to state 37
    estatuto_list                  shift and go to state 113
    estatuto                       shift and go to state 39
    llamarfun                      shift and go to state 40
    condicion                      shift and go to state 41

state 76

    (41) for -> FOR expresion . estatuto_list ENDFOR
    (43) expresion -> expresion . and_or termino
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (58) and_or -> . AND
    (59) and_or -> . OR
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (29) estatuto -> . llamarfun
    (81) empty -> .
    (30) asignacion -> . identifier EQUAL expresion
    (35) condicion -> . IF expresion estatuto_list elseif ENDIF
    (36) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> . IF expresion estatuto_list ENDIF
    (31) escritura -> . PRINT escritura_vars
    (34) lectura -> . READ identifier
    (40) while -> . WHILE expresion estatuto_list ENDWHILE
    (41) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier
    (82) identifier -> . IDENTIFIER

    AND             shift and go to state 92
    OR              shift and go to state 93
    ENDFOR          reduce using rule 81 (empty -> .)
    IF              shift and go to state 35
    PRINT           shift and go to state 25
    READ            shift and go to state 26
    WHILE           shift and go to state 31
    FOR             shift and go to state 36
    VAR             shift and go to state 22
    CALLMETHOD      shift and go to state 33
    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 30
    for                            shift and go to state 29
    empty                          shift and go to state 32
    vars                           shift and go to state 24
    escritura                      shift and go to state 34
    and_or                         shift and go to state 95
    while                          shift and go to state 27
    asignacion                     shift and go to state 28
    lectura                        shift and go to state 37
    estatuto_list                  shift and go to state 114
    estatuto                       shift and go to state 39
    llamarfun                      shift and go to state 40
    condicion                      shift and go to state 41

state 77

    (18) bloque -> BLOQUE estatuto_list ENDBLOQUE .

    ENDMETHOD       reduce using rule 18 (bloque -> BLOQUE estatuto_list ENDBLOQUE .)
    ENDPROGRAM      reduce using rule 18 (bloque -> BLOQUE estatuto_list ENDBLOQUE .)
    RETURN          reduce using rule 18 (bloque -> BLOQUE estatuto_list ENDBLOQUE .)


state 78

    (19) estatuto_list -> estatuto estatuto_list .

    ENDFOR          reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ENDIF           reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ENDBLOQUE       reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ELSE            reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ELSEIF          reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ENDWHILE        reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)


state 79

    (66) func -> funchead bloque RETURN . identifier ENDMETHOD
    (82) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 115

state 80

    (67) voidfunc -> prochead bloque ENDMETHOD .

    METHOD          reduce using rule 67 (voidfunc -> prochead bloque ENDMETHOD .)
    BLOQUE          reduce using rule 67 (voidfunc -> prochead bloque ENDMETHOD .)


state 81

    (10) vars_list -> vars_declaration vars_list .

    ENDVAR          reduce using rule 10 (vars_list -> vars_declaration vars_list .)
    ENDGLOBAL       reduce using rule 10 (vars_list -> vars_declaration vars_list .)


state 82

    (13) vars_declaration -> tipo identifier .

    TINT            reduce using rule 13 (vars_declaration -> tipo identifier .)
    TFLOAT          reduce using rule 13 (vars_declaration -> tipo identifier .)
    TSTRING         reduce using rule 13 (vars_declaration -> tipo identifier .)
    VOID            reduce using rule 13 (vars_declaration -> tipo identifier .)
    ENDVAR          reduce using rule 13 (vars_declaration -> tipo identifier .)
    ENDGLOBAL       reduce using rule 13 (vars_declaration -> tipo identifier .)


state 83

    (9) global -> GLOBAL vars_list ENDGLOBAL .

    BLOQUE          reduce using rule 9 (global -> GLOBAL vars_list ENDGLOBAL .)
    METHOD          reduce using rule 9 (global -> GLOBAL vars_list ENDGLOBAL .)


state 84

    (2) programa -> PROGRAM funciones bloque ENDPROGRAM .

    $end            reduce using rule 2 (programa -> PROGRAM funciones bloque ENDPROGRAM .)


state 85

    (72) parameter_list -> parameter .
    (73) parameter_list -> parameter . COMMA parameter_list

    BLOQUE          reduce using rule 72 (parameter_list -> parameter .)
    COMMA           shift and go to state 116


state 86

    (68) prochead -> METHOD VOID identifier parameter_list .

    BLOQUE          reduce using rule 68 (prochead -> METHOD VOID identifier parameter_list .)


state 87

    (74) parameter -> tipo . identifier
    (75) parameter -> tipo . referencia
    (82) identifier -> . IDENTIFIER
    (83) referencia -> . REFERENCIA

    IDENTIFIER      shift and go to state 23
    REFERENCIA      shift and go to state 119

    identifier                     shift and go to state 117
    referencia                     shift and go to state 118

state 88

    (70) funchead -> METHOD tipo identifier parameter_list .

    BLOQUE          reduce using rule 70 (funchead -> METHOD tipo identifier parameter_list .)


state 89

    (3) programa -> PROGRAM global funciones bloque ENDPROGRAM .

    $end            reduce using rule 3 (programa -> PROGRAM global funciones bloque ENDPROGRAM .)


state 90

    (8) vars -> VAR vars_list ENDVAR .

    IF              reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    PRINT           reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    READ            reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    WHILE           reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    FOR             reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    VAR             reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    CALLMETHOD      reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    IDENTIFIER      reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ENDBLOQUE       reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ENDWHILE        reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ELSE            reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ENDIF           reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ELSEIF          reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ENDFOR          reduce using rule 8 (vars -> VAR vars_list ENDVAR .)


state 91

    (64) elemento -> LPARENTHESES expresion . RPARENTHESES
    (43) expresion -> expresion . and_or termino
    (58) and_or -> . AND
    (59) and_or -> . OR

    RPARENTHESES    shift and go to state 120
    AND             shift and go to state 92
    OR              shift and go to state 93

    and_or                         shift and go to state 95

state 92

    (58) and_or -> AND .

    LPARENTHESES    reduce using rule 58 (and_or -> AND .)
    IDENTIFIER      reduce using rule 58 (and_or -> AND .)
    INT             reduce using rule 58 (and_or -> AND .)
    FLOAT           reduce using rule 58 (and_or -> AND .)
    STRING          reduce using rule 58 (and_or -> AND .)
    CALLMETHOD      reduce using rule 58 (and_or -> AND .)


state 93

    (59) and_or -> OR .

    LPARENTHESES    reduce using rule 59 (and_or -> OR .)
    IDENTIFIER      reduce using rule 59 (and_or -> OR .)
    INT             reduce using rule 59 (and_or -> OR .)
    FLOAT           reduce using rule 59 (and_or -> OR .)
    STRING          reduce using rule 59 (and_or -> OR .)
    CALLMETHOD      reduce using rule 59 (and_or -> OR .)


state 94

    (32) escritura_vars -> expresion COMMA . escritura_vars
    (32) escritura_vars -> . expresion COMMA escritura_vars
    (33) escritura_vars -> . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    escritura_vars                 shift and go to state 121
    elemento                       shift and go to state 57
    identifier                     shift and go to state 58
    string                         shift and go to state 66
    factor                         shift and go to state 67
    int                            shift and go to state 69
    expresion                      shift and go to state 62
    float                          shift and go to state 63
    termino                        shift and go to state 64
    llamarfun                      shift and go to state 70

state 95

    (43) expresion -> expresion and_or . termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 67
    int                            shift and go to state 69
    float                          shift and go to state 63
    termino                        shift and go to state 122
    llamarfun                      shift and go to state 70

state 96

    (50) sign -> EQUALTO .

    LPARENTHESES    reduce using rule 50 (sign -> EQUALTO .)
    IDENTIFIER      reduce using rule 50 (sign -> EQUALTO .)
    INT             reduce using rule 50 (sign -> EQUALTO .)
    FLOAT           reduce using rule 50 (sign -> EQUALTO .)
    STRING          reduce using rule 50 (sign -> EQUALTO .)
    CALLMETHOD      reduce using rule 50 (sign -> EQUALTO .)


state 97

    (51) sign -> GTHANEQ .

    LPARENTHESES    reduce using rule 51 (sign -> GTHANEQ .)
    IDENTIFIER      reduce using rule 51 (sign -> GTHANEQ .)
    INT             reduce using rule 51 (sign -> GTHANEQ .)
    FLOAT           reduce using rule 51 (sign -> GTHANEQ .)
    STRING          reduce using rule 51 (sign -> GTHANEQ .)
    CALLMETHOD      reduce using rule 51 (sign -> GTHANEQ .)


state 98

    (55) sign -> MINUS .

    LPARENTHESES    reduce using rule 55 (sign -> MINUS .)
    IDENTIFIER      reduce using rule 55 (sign -> MINUS .)
    INT             reduce using rule 55 (sign -> MINUS .)
    FLOAT           reduce using rule 55 (sign -> MINUS .)
    STRING          reduce using rule 55 (sign -> MINUS .)
    CALLMETHOD      reduce using rule 55 (sign -> MINUS .)


state 99

    (48) sign -> LTHAN .

    LPARENTHESES    reduce using rule 48 (sign -> LTHAN .)
    IDENTIFIER      reduce using rule 48 (sign -> LTHAN .)
    INT             reduce using rule 48 (sign -> LTHAN .)
    FLOAT           reduce using rule 48 (sign -> LTHAN .)
    STRING          reduce using rule 48 (sign -> LTHAN .)
    CALLMETHOD      reduce using rule 48 (sign -> LTHAN .)


state 100

    (53) sign -> NOTEQUAL .

    LPARENTHESES    reduce using rule 53 (sign -> NOTEQUAL .)
    IDENTIFIER      reduce using rule 53 (sign -> NOTEQUAL .)
    INT             reduce using rule 53 (sign -> NOTEQUAL .)
    FLOAT           reduce using rule 53 (sign -> NOTEQUAL .)
    STRING          reduce using rule 53 (sign -> NOTEQUAL .)
    CALLMETHOD      reduce using rule 53 (sign -> NOTEQUAL .)


state 101

    (49) sign -> GTHAN .

    LPARENTHESES    reduce using rule 49 (sign -> GTHAN .)
    IDENTIFIER      reduce using rule 49 (sign -> GTHAN .)
    INT             reduce using rule 49 (sign -> GTHAN .)
    FLOAT           reduce using rule 49 (sign -> GTHAN .)
    STRING          reduce using rule 49 (sign -> GTHAN .)
    CALLMETHOD      reduce using rule 49 (sign -> GTHAN .)


state 102

    (45) termino -> termino sign . factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 123
    int                            shift and go to state 69
    float                          shift and go to state 63
    llamarfun                      shift and go to state 70

state 103

    (52) sign -> LTHANEQ .

    LPARENTHESES    reduce using rule 52 (sign -> LTHANEQ .)
    IDENTIFIER      reduce using rule 52 (sign -> LTHANEQ .)
    INT             reduce using rule 52 (sign -> LTHANEQ .)
    FLOAT           reduce using rule 52 (sign -> LTHANEQ .)
    STRING          reduce using rule 52 (sign -> LTHANEQ .)
    CALLMETHOD      reduce using rule 52 (sign -> LTHANEQ .)


state 104

    (54) sign -> PLUS .

    LPARENTHESES    reduce using rule 54 (sign -> PLUS .)
    IDENTIFIER      reduce using rule 54 (sign -> PLUS .)
    INT             reduce using rule 54 (sign -> PLUS .)
    FLOAT           reduce using rule 54 (sign -> PLUS .)
    STRING          reduce using rule 54 (sign -> PLUS .)
    CALLMETHOD      reduce using rule 54 (sign -> PLUS .)


state 105

    (56) psign -> MULTI .

    LPARENTHESES    reduce using rule 56 (psign -> MULTI .)
    IDENTIFIER      reduce using rule 56 (psign -> MULTI .)
    INT             reduce using rule 56 (psign -> MULTI .)
    FLOAT           reduce using rule 56 (psign -> MULTI .)
    STRING          reduce using rule 56 (psign -> MULTI .)
    CALLMETHOD      reduce using rule 56 (psign -> MULTI .)


state 106

    (57) psign -> DIVIDE .

    LPARENTHESES    reduce using rule 57 (psign -> DIVIDE .)
    IDENTIFIER      reduce using rule 57 (psign -> DIVIDE .)
    INT             reduce using rule 57 (psign -> DIVIDE .)
    FLOAT           reduce using rule 57 (psign -> DIVIDE .)
    STRING          reduce using rule 57 (psign -> DIVIDE .)
    CALLMETHOD      reduce using rule 57 (psign -> DIVIDE .)


state 107

    (47) factor -> factor psign . elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 124
    int                            shift and go to state 69
    float                          shift and go to state 63
    string                         shift and go to state 66
    llamarfun                      shift and go to state 70

state 108

    (30) asignacion -> identifier EQUAL expresion .
    (43) expresion -> expresion . and_or termino
    (58) and_or -> . AND
    (59) and_or -> . OR

    IF              reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    PRINT           reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    READ            reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    WHILE           reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    FOR             reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    VAR             reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    CALLMETHOD      reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    IDENTIFIER      reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    ENDFOR          reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    ENDIF           reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    ELSE            reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    ELSEIF          reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    ENDWHILE        reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    ENDBLOQUE       reduce using rule 30 (asignacion -> identifier EQUAL expresion .)
    AND             shift and go to state 92
    OR              shift and go to state 93

    and_or                         shift and go to state 95

state 109

    (40) while -> WHILE expresion estatuto_list . ENDWHILE

    ENDWHILE        shift and go to state 125


state 110

    (80) param -> expresion .
    (43) expresion -> expresion . and_or termino
    (58) and_or -> . AND
    (59) and_or -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MULTI           reduce using rule 80 (param -> expresion .)
    DIVIDE          reduce using rule 80 (param -> expresion .)
    LTHAN           reduce using rule 80 (param -> expresion .)
    GTHAN           reduce using rule 80 (param -> expresion .)
    EQUALTO         reduce using rule 80 (param -> expresion .)
    GTHANEQ         reduce using rule 80 (param -> expresion .)
    LTHANEQ         reduce using rule 80 (param -> expresion .)
    NOTEQUAL        reduce using rule 80 (param -> expresion .)
    PLUS            reduce using rule 80 (param -> expresion .)
    MINUS           reduce using rule 80 (param -> expresion .)
    COMMA           reduce using rule 80 (param -> expresion .)
    IF              reduce using rule 80 (param -> expresion .)
    PRINT           reduce using rule 80 (param -> expresion .)
    READ            reduce using rule 80 (param -> expresion .)
    WHILE           reduce using rule 80 (param -> expresion .)
    FOR             reduce using rule 80 (param -> expresion .)
    VAR             reduce using rule 80 (param -> expresion .)
    CALLMETHOD      reduce using rule 80 (param -> expresion .)
    IDENTIFIER      reduce using rule 80 (param -> expresion .)
    ENDBLOQUE       reduce using rule 80 (param -> expresion .)
    ENDWHILE        reduce using rule 80 (param -> expresion .)
    ELSE            reduce using rule 80 (param -> expresion .)
    ENDIF           reduce using rule 80 (param -> expresion .)
    ELSEIF          reduce using rule 80 (param -> expresion .)
    ENDFOR          reduce using rule 80 (param -> expresion .)
    RPARENTHESES    reduce using rule 80 (param -> expresion .)
    AND             shift and go to state 92
    OR              shift and go to state 93

  ! AND             [ reduce using rule 80 (param -> expresion .) ]
  ! OR              [ reduce using rule 80 (param -> expresion .) ]

    and_or                         shift and go to state 95

state 111

    (76) llamarfun -> CALLMETHOD identifier funparams .
    (79) funparams -> funparams . COMMA param

  ! shift/reduce conflict for COMMA resolved as shift
    MULTI           reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    DIVIDE          reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    LTHAN           reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    GTHAN           reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    EQUALTO         reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    GTHANEQ         reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    LTHANEQ         reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    NOTEQUAL        reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    PLUS            reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    MINUS           reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    AND             reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    OR              reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    IF              reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    PRINT           reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    READ            reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    WHILE           reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    FOR             reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    VAR             reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    CALLMETHOD      reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    IDENTIFIER      reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    ENDBLOQUE       reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    ENDWHILE        reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    ELSE            reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    ENDIF           reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    ELSEIF          reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    ENDFOR          reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    RPARENTHESES    reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .)
    COMMA           shift and go to state 126

  ! COMMA           [ reduce using rule 76 (llamarfun -> CALLMETHOD identifier funparams .) ]


state 112

    (78) funparams -> param .

    MULTI           reduce using rule 78 (funparams -> param .)
    DIVIDE          reduce using rule 78 (funparams -> param .)
    LTHAN           reduce using rule 78 (funparams -> param .)
    GTHAN           reduce using rule 78 (funparams -> param .)
    EQUALTO         reduce using rule 78 (funparams -> param .)
    GTHANEQ         reduce using rule 78 (funparams -> param .)
    LTHANEQ         reduce using rule 78 (funparams -> param .)
    NOTEQUAL        reduce using rule 78 (funparams -> param .)
    PLUS            reduce using rule 78 (funparams -> param .)
    MINUS           reduce using rule 78 (funparams -> param .)
    AND             reduce using rule 78 (funparams -> param .)
    OR              reduce using rule 78 (funparams -> param .)
    COMMA           reduce using rule 78 (funparams -> param .)
    IF              reduce using rule 78 (funparams -> param .)
    PRINT           reduce using rule 78 (funparams -> param .)
    READ            reduce using rule 78 (funparams -> param .)
    WHILE           reduce using rule 78 (funparams -> param .)
    FOR             reduce using rule 78 (funparams -> param .)
    VAR             reduce using rule 78 (funparams -> param .)
    CALLMETHOD      reduce using rule 78 (funparams -> param .)
    IDENTIFIER      reduce using rule 78 (funparams -> param .)
    ENDBLOQUE       reduce using rule 78 (funparams -> param .)
    ENDWHILE        reduce using rule 78 (funparams -> param .)
    ELSE            reduce using rule 78 (funparams -> param .)
    ENDIF           reduce using rule 78 (funparams -> param .)
    ELSEIF          reduce using rule 78 (funparams -> param .)
    ENDFOR          reduce using rule 78 (funparams -> param .)
    RPARENTHESES    reduce using rule 78 (funparams -> param .)


state 113

    (35) condicion -> IF expresion estatuto_list . elseif ENDIF
    (36) condicion -> IF expresion estatuto_list . elseif ELSE estatuto_list ENDIF
    (37) condicion -> IF expresion estatuto_list . ELSE estatuto_list ENDIF
    (38) condicion -> IF expresion estatuto_list . ENDIF
    (39) elseif -> . ELSEIF expresion estatuto_list

    ELSE            shift and go to state 129
    ENDIF           shift and go to state 127
    ELSEIF          shift and go to state 128

    elseif                         shift and go to state 130

state 114

    (41) for -> FOR expresion estatuto_list . ENDFOR

    ENDFOR          shift and go to state 131


state 115

    (66) func -> funchead bloque RETURN identifier . ENDMETHOD

    ENDMETHOD       shift and go to state 132


state 116

    (73) parameter_list -> parameter COMMA . parameter_list
    (72) parameter_list -> . parameter
    (73) parameter_list -> . parameter COMMA parameter_list
    (74) parameter -> . tipo identifier
    (75) parameter -> . tipo referencia
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    TINT            shift and go to state 17
    TFLOAT          shift and go to state 16
    TSTRING         shift and go to state 15
    VOID            shift and go to state 47

    parameter                      shift and go to state 85
    tipo                           shift and go to state 87
    parameter_list                 shift and go to state 133

state 117

    (74) parameter -> tipo identifier .

    COMMA           reduce using rule 74 (parameter -> tipo identifier .)
    BLOQUE          reduce using rule 74 (parameter -> tipo identifier .)


state 118

    (75) parameter -> tipo referencia .

    COMMA           reduce using rule 75 (parameter -> tipo referencia .)
    BLOQUE          reduce using rule 75 (parameter -> tipo referencia .)


state 119

    (83) referencia -> REFERENCIA .

    COMMA           reduce using rule 83 (referencia -> REFERENCIA .)
    BLOQUE          reduce using rule 83 (referencia -> REFERENCIA .)


state 120

    (64) elemento -> LPARENTHESES expresion RPARENTHESES .

    MULTI           reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    DIVIDE          reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    LTHAN           reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    GTHAN           reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    EQUALTO         reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    GTHANEQ         reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    LTHANEQ         reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    NOTEQUAL        reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    PLUS            reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    MINUS           reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    AND             reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    OR              reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    COMMA           reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    IF              reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    PRINT           reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    READ            reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    WHILE           reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    FOR             reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    VAR             reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    CALLMETHOD      reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    IDENTIFIER      reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ENDBLOQUE       reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ENDWHILE        reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ELSE            reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ENDIF           reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ELSEIF          reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ENDFOR          reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    RPARENTHESES    reduce using rule 64 (elemento -> LPARENTHESES expresion RPARENTHESES .)


state 121

    (32) escritura_vars -> expresion COMMA escritura_vars .

    IF              reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    PRINT           reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    READ            reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    WHILE           reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    FOR             reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    VAR             reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    CALLMETHOD      reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    IDENTIFIER      reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    ENDBLOQUE       reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    ENDWHILE        reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    ELSE            reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    ENDIF           reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    ELSEIF          reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)
    ENDFOR          reduce using rule 32 (escritura_vars -> expresion COMMA escritura_vars .)


state 122

    (43) expresion -> expresion and_or termino .
    (45) termino -> termino . sign factor
    (48) sign -> . LTHAN
    (49) sign -> . GTHAN
    (50) sign -> . EQUALTO
    (51) sign -> . GTHANEQ
    (52) sign -> . LTHANEQ
    (53) sign -> . NOTEQUAL
    (54) sign -> . PLUS
    (55) sign -> . MINUS

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUALTO resolved as shift
  ! shift/reduce conflict for GTHANEQ resolved as shift
  ! shift/reduce conflict for LTHANEQ resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    AND             reduce using rule 43 (expresion -> expresion and_or termino .)
    OR              reduce using rule 43 (expresion -> expresion and_or termino .)
    IF              reduce using rule 43 (expresion -> expresion and_or termino .)
    PRINT           reduce using rule 43 (expresion -> expresion and_or termino .)
    READ            reduce using rule 43 (expresion -> expresion and_or termino .)
    WHILE           reduce using rule 43 (expresion -> expresion and_or termino .)
    FOR             reduce using rule 43 (expresion -> expresion and_or termino .)
    VAR             reduce using rule 43 (expresion -> expresion and_or termino .)
    CALLMETHOD      reduce using rule 43 (expresion -> expresion and_or termino .)
    IDENTIFIER      reduce using rule 43 (expresion -> expresion and_or termino .)
    ENDFOR          reduce using rule 43 (expresion -> expresion and_or termino .)
    COMMA           reduce using rule 43 (expresion -> expresion and_or termino .)
    ENDBLOQUE       reduce using rule 43 (expresion -> expresion and_or termino .)
    ENDWHILE        reduce using rule 43 (expresion -> expresion and_or termino .)
    ELSE            reduce using rule 43 (expresion -> expresion and_or termino .)
    ENDIF           reduce using rule 43 (expresion -> expresion and_or termino .)
    ELSEIF          reduce using rule 43 (expresion -> expresion and_or termino .)
    RPARENTHESES    reduce using rule 43 (expresion -> expresion and_or termino .)
    MULTI           reduce using rule 43 (expresion -> expresion and_or termino .)
    DIVIDE          reduce using rule 43 (expresion -> expresion and_or termino .)
    LTHAN           shift and go to state 99
    GTHAN           shift and go to state 101
    EQUALTO         shift and go to state 96
    GTHANEQ         shift and go to state 97
    LTHANEQ         shift and go to state 103
    NOTEQUAL        shift and go to state 100
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98

  ! LTHAN           [ reduce using rule 43 (expresion -> expresion and_or termino .) ]
  ! GTHAN           [ reduce using rule 43 (expresion -> expresion and_or termino .) ]
  ! EQUALTO         [ reduce using rule 43 (expresion -> expresion and_or termino .) ]
  ! GTHANEQ         [ reduce using rule 43 (expresion -> expresion and_or termino .) ]
  ! LTHANEQ         [ reduce using rule 43 (expresion -> expresion and_or termino .) ]
  ! NOTEQUAL        [ reduce using rule 43 (expresion -> expresion and_or termino .) ]
  ! PLUS            [ reduce using rule 43 (expresion -> expresion and_or termino .) ]
  ! MINUS           [ reduce using rule 43 (expresion -> expresion and_or termino .) ]

    sign                           shift and go to state 102

state 123

    (45) termino -> termino sign factor .
    (47) factor -> factor . psign elemento
    (56) psign -> . MULTI
    (57) psign -> . DIVIDE

  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LTHAN           reduce using rule 45 (termino -> termino sign factor .)
    GTHAN           reduce using rule 45 (termino -> termino sign factor .)
    EQUALTO         reduce using rule 45 (termino -> termino sign factor .)
    GTHANEQ         reduce using rule 45 (termino -> termino sign factor .)
    LTHANEQ         reduce using rule 45 (termino -> termino sign factor .)
    NOTEQUAL        reduce using rule 45 (termino -> termino sign factor .)
    PLUS            reduce using rule 45 (termino -> termino sign factor .)
    MINUS           reduce using rule 45 (termino -> termino sign factor .)
    COMMA           reduce using rule 45 (termino -> termino sign factor .)
    AND             reduce using rule 45 (termino -> termino sign factor .)
    OR              reduce using rule 45 (termino -> termino sign factor .)
    IF              reduce using rule 45 (termino -> termino sign factor .)
    PRINT           reduce using rule 45 (termino -> termino sign factor .)
    READ            reduce using rule 45 (termino -> termino sign factor .)
    WHILE           reduce using rule 45 (termino -> termino sign factor .)
    FOR             reduce using rule 45 (termino -> termino sign factor .)
    VAR             reduce using rule 45 (termino -> termino sign factor .)
    CALLMETHOD      reduce using rule 45 (termino -> termino sign factor .)
    IDENTIFIER      reduce using rule 45 (termino -> termino sign factor .)
    ENDBLOQUE       reduce using rule 45 (termino -> termino sign factor .)
    ENDWHILE        reduce using rule 45 (termino -> termino sign factor .)
    ELSE            reduce using rule 45 (termino -> termino sign factor .)
    ENDIF           reduce using rule 45 (termino -> termino sign factor .)
    ELSEIF          reduce using rule 45 (termino -> termino sign factor .)
    ENDFOR          reduce using rule 45 (termino -> termino sign factor .)
    RPARENTHESES    reduce using rule 45 (termino -> termino sign factor .)
    MULTI           shift and go to state 105
    DIVIDE          shift and go to state 106

  ! MULTI           [ reduce using rule 45 (termino -> termino sign factor .) ]
  ! DIVIDE          [ reduce using rule 45 (termino -> termino sign factor .) ]

    psign                          shift and go to state 107

state 124

    (47) factor -> factor psign elemento .

    MULTI           reduce using rule 47 (factor -> factor psign elemento .)
    DIVIDE          reduce using rule 47 (factor -> factor psign elemento .)
    LTHAN           reduce using rule 47 (factor -> factor psign elemento .)
    GTHAN           reduce using rule 47 (factor -> factor psign elemento .)
    EQUALTO         reduce using rule 47 (factor -> factor psign elemento .)
    GTHANEQ         reduce using rule 47 (factor -> factor psign elemento .)
    LTHANEQ         reduce using rule 47 (factor -> factor psign elemento .)
    NOTEQUAL        reduce using rule 47 (factor -> factor psign elemento .)
    PLUS            reduce using rule 47 (factor -> factor psign elemento .)
    MINUS           reduce using rule 47 (factor -> factor psign elemento .)
    RPARENTHESES    reduce using rule 47 (factor -> factor psign elemento .)
    AND             reduce using rule 47 (factor -> factor psign elemento .)
    OR              reduce using rule 47 (factor -> factor psign elemento .)
    IF              reduce using rule 47 (factor -> factor psign elemento .)
    PRINT           reduce using rule 47 (factor -> factor psign elemento .)
    READ            reduce using rule 47 (factor -> factor psign elemento .)
    WHILE           reduce using rule 47 (factor -> factor psign elemento .)
    FOR             reduce using rule 47 (factor -> factor psign elemento .)
    VAR             reduce using rule 47 (factor -> factor psign elemento .)
    CALLMETHOD      reduce using rule 47 (factor -> factor psign elemento .)
    IDENTIFIER      reduce using rule 47 (factor -> factor psign elemento .)
    ENDFOR          reduce using rule 47 (factor -> factor psign elemento .)
    COMMA           reduce using rule 47 (factor -> factor psign elemento .)
    ENDBLOQUE       reduce using rule 47 (factor -> factor psign elemento .)
    ENDWHILE        reduce using rule 47 (factor -> factor psign elemento .)
    ELSE            reduce using rule 47 (factor -> factor psign elemento .)
    ENDIF           reduce using rule 47 (factor -> factor psign elemento .)
    ELSEIF          reduce using rule 47 (factor -> factor psign elemento .)


state 125

    (40) while -> WHILE expresion estatuto_list ENDWHILE .

    IF              reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    PRINT           reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    READ            reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    WHILE           reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    FOR             reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    VAR             reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    CALLMETHOD      reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    IDENTIFIER      reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ENDIF           reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ELSE            reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ELSEIF          reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ENDFOR          reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ENDBLOQUE       reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ENDWHILE        reduce using rule 40 (while -> WHILE expresion estatuto_list ENDWHILE .)


state 126

    (79) funparams -> funparams COMMA . param
    (80) param -> . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 67
    param                          shift and go to state 134
    int                            shift and go to state 69
    expresion                      shift and go to state 110
    termino                        shift and go to state 64
    float                          shift and go to state 63
    llamarfun                      shift and go to state 70

state 127

    (38) condicion -> IF expresion estatuto_list ENDIF .

    IF              reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    PRINT           reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    READ            reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    WHILE           reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    FOR             reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    VAR             reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    CALLMETHOD      reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    IDENTIFIER      reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    ENDIF           reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    ELSE            reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    ELSEIF          reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    ENDBLOQUE       reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    ENDWHILE        reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)
    ENDFOR          reduce using rule 38 (condicion -> IF expresion estatuto_list ENDIF .)


state 128

    (39) elseif -> ELSEIF . expresion estatuto_list
    (42) expresion -> . termino
    (43) expresion -> . expresion and_or termino
    (44) termino -> . factor
    (45) termino -> . termino sign factor
    (46) factor -> . elemento
    (47) factor -> . factor psign elemento
    (60) elemento -> . identifier
    (61) elemento -> . int
    (62) elemento -> . float
    (63) elemento -> . string
    (64) elemento -> . LPARENTHESES expresion RPARENTHESES
    (65) elemento -> . llamarfun
    (82) identifier -> . IDENTIFIER
    (84) int -> . INT
    (85) float -> . FLOAT
    (86) string -> . STRING
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 59
    IDENTIFIER      shift and go to state 23
    INT             shift and go to state 68
    FLOAT           shift and go to state 61
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 33

    identifier                     shift and go to state 58
    elemento                       shift and go to state 57
    string                         shift and go to state 66
    factor                         shift and go to state 67
    int                            shift and go to state 69
    expresion                      shift and go to state 135
    float                          shift and go to state 63
    termino                        shift and go to state 64
    llamarfun                      shift and go to state 70

state 129

    (37) condicion -> IF expresion estatuto_list ELSE . estatuto_list ENDIF
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (29) estatuto -> . llamarfun
    (81) empty -> .
    (30) asignacion -> . identifier EQUAL expresion
    (35) condicion -> . IF expresion estatuto_list elseif ENDIF
    (36) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> . IF expresion estatuto_list ENDIF
    (31) escritura -> . PRINT escritura_vars
    (34) lectura -> . READ identifier
    (40) while -> . WHILE expresion estatuto_list ENDWHILE
    (41) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier
    (82) identifier -> . IDENTIFIER

    ENDIF           reduce using rule 81 (empty -> .)
    IF              shift and go to state 35
    PRINT           shift and go to state 25
    READ            shift and go to state 26
    WHILE           shift and go to state 31
    FOR             shift and go to state 36
    VAR             shift and go to state 22
    CALLMETHOD      shift and go to state 33
    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 30
    empty                          shift and go to state 32
    vars                           shift and go to state 24
    escritura                      shift and go to state 34
    while                          shift and go to state 27
    asignacion                     shift and go to state 28
    lectura                        shift and go to state 37
    estatuto_list                  shift and go to state 136
    for                            shift and go to state 29
    estatuto                       shift and go to state 39
    llamarfun                      shift and go to state 40
    condicion                      shift and go to state 41

state 130

    (35) condicion -> IF expresion estatuto_list elseif . ENDIF
    (36) condicion -> IF expresion estatuto_list elseif . ELSE estatuto_list ENDIF

    ENDIF           shift and go to state 137
    ELSE            shift and go to state 138


state 131

    (41) for -> FOR expresion estatuto_list ENDFOR .

    IF              reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    PRINT           reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    READ            reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    WHILE           reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    FOR             reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    VAR             reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    CALLMETHOD      reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    IDENTIFIER      reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    ELSE            reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    ENDIF           reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    ELSEIF          reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    ENDBLOQUE       reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    ENDWHILE        reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)
    ENDFOR          reduce using rule 41 (for -> FOR expresion estatuto_list ENDFOR .)


state 132

    (66) func -> funchead bloque RETURN identifier ENDMETHOD .

    METHOD          reduce using rule 66 (func -> funchead bloque RETURN identifier ENDMETHOD .)
    BLOQUE          reduce using rule 66 (func -> funchead bloque RETURN identifier ENDMETHOD .)


state 133

    (73) parameter_list -> parameter COMMA parameter_list .

    BLOQUE          reduce using rule 73 (parameter_list -> parameter COMMA parameter_list .)


state 134

    (79) funparams -> funparams COMMA param .

    MULTI           reduce using rule 79 (funparams -> funparams COMMA param .)
    DIVIDE          reduce using rule 79 (funparams -> funparams COMMA param .)
    LTHAN           reduce using rule 79 (funparams -> funparams COMMA param .)
    GTHAN           reduce using rule 79 (funparams -> funparams COMMA param .)
    EQUALTO         reduce using rule 79 (funparams -> funparams COMMA param .)
    GTHANEQ         reduce using rule 79 (funparams -> funparams COMMA param .)
    LTHANEQ         reduce using rule 79 (funparams -> funparams COMMA param .)
    NOTEQUAL        reduce using rule 79 (funparams -> funparams COMMA param .)
    PLUS            reduce using rule 79 (funparams -> funparams COMMA param .)
    MINUS           reduce using rule 79 (funparams -> funparams COMMA param .)
    AND             reduce using rule 79 (funparams -> funparams COMMA param .)
    OR              reduce using rule 79 (funparams -> funparams COMMA param .)
    COMMA           reduce using rule 79 (funparams -> funparams COMMA param .)
    IF              reduce using rule 79 (funparams -> funparams COMMA param .)
    PRINT           reduce using rule 79 (funparams -> funparams COMMA param .)
    READ            reduce using rule 79 (funparams -> funparams COMMA param .)
    WHILE           reduce using rule 79 (funparams -> funparams COMMA param .)
    FOR             reduce using rule 79 (funparams -> funparams COMMA param .)
    VAR             reduce using rule 79 (funparams -> funparams COMMA param .)
    CALLMETHOD      reduce using rule 79 (funparams -> funparams COMMA param .)
    IDENTIFIER      reduce using rule 79 (funparams -> funparams COMMA param .)
    ENDBLOQUE       reduce using rule 79 (funparams -> funparams COMMA param .)
    ENDWHILE        reduce using rule 79 (funparams -> funparams COMMA param .)
    ELSE            reduce using rule 79 (funparams -> funparams COMMA param .)
    ENDIF           reduce using rule 79 (funparams -> funparams COMMA param .)
    ELSEIF          reduce using rule 79 (funparams -> funparams COMMA param .)
    ENDFOR          reduce using rule 79 (funparams -> funparams COMMA param .)
    RPARENTHESES    reduce using rule 79 (funparams -> funparams COMMA param .)


state 135

    (39) elseif -> ELSEIF expresion . estatuto_list
    (43) expresion -> expresion . and_or termino
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (58) and_or -> . AND
    (59) and_or -> . OR
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (29) estatuto -> . llamarfun
    (81) empty -> .
    (30) asignacion -> . identifier EQUAL expresion
    (35) condicion -> . IF expresion estatuto_list elseif ENDIF
    (36) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> . IF expresion estatuto_list ENDIF
    (31) escritura -> . PRINT escritura_vars
    (34) lectura -> . READ identifier
    (40) while -> . WHILE expresion estatuto_list ENDWHILE
    (41) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier
    (82) identifier -> . IDENTIFIER

    AND             shift and go to state 92
    OR              shift and go to state 93
    ENDIF           reduce using rule 81 (empty -> .)
    ELSE            reduce using rule 81 (empty -> .)
    IF              shift and go to state 35
    PRINT           shift and go to state 25
    READ            shift and go to state 26
    WHILE           shift and go to state 31
    FOR             shift and go to state 36
    VAR             shift and go to state 22
    CALLMETHOD      shift and go to state 33
    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 30
    for                            shift and go to state 29
    empty                          shift and go to state 32
    vars                           shift and go to state 24
    escritura                      shift and go to state 34
    and_or                         shift and go to state 95
    while                          shift and go to state 27
    asignacion                     shift and go to state 28
    lectura                        shift and go to state 37
    estatuto_list                  shift and go to state 139
    estatuto                       shift and go to state 39
    llamarfun                      shift and go to state 40
    condicion                      shift and go to state 41

state 136

    (37) condicion -> IF expresion estatuto_list ELSE estatuto_list . ENDIF

    ENDIF           shift and go to state 140


state 137

    (35) condicion -> IF expresion estatuto_list elseif ENDIF .

    IF              reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    PRINT           reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    READ            reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    WHILE           reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    FOR             reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    VAR             reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    CALLMETHOD      reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    IDENTIFIER      reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ENDIF           reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ELSE            reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ELSEIF          reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ENDBLOQUE       reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ENDWHILE        reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ENDFOR          reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ENDIF .)


state 138

    (36) condicion -> IF expresion estatuto_list elseif ELSE . estatuto_list ENDIF
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (29) estatuto -> . llamarfun
    (81) empty -> .
    (30) asignacion -> . identifier EQUAL expresion
    (35) condicion -> . IF expresion estatuto_list elseif ENDIF
    (36) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (38) condicion -> . IF expresion estatuto_list ENDIF
    (31) escritura -> . PRINT escritura_vars
    (34) lectura -> . READ identifier
    (40) while -> . WHILE expresion estatuto_list ENDWHILE
    (41) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (76) llamarfun -> . CALLMETHOD identifier funparams
    (77) llamarfun -> . CALLMETHOD identifier
    (82) identifier -> . IDENTIFIER

    ENDIF           reduce using rule 81 (empty -> .)
    IF              shift and go to state 35
    PRINT           shift and go to state 25
    READ            shift and go to state 26
    WHILE           shift and go to state 31
    FOR             shift and go to state 36
    VAR             shift and go to state 22
    CALLMETHOD      shift and go to state 33
    IDENTIFIER      shift and go to state 23

    identifier                     shift and go to state 30
    empty                          shift and go to state 32
    vars                           shift and go to state 24
    escritura                      shift and go to state 34
    while                          shift and go to state 27
    asignacion                     shift and go to state 28
    lectura                        shift and go to state 37
    estatuto_list                  shift and go to state 141
    for                            shift and go to state 29
    estatuto                       shift and go to state 39
    llamarfun                      shift and go to state 40
    condicion                      shift and go to state 41

state 139

    (39) elseif -> ELSEIF expresion estatuto_list .

    ENDIF           reduce using rule 39 (elseif -> ELSEIF expresion estatuto_list .)
    ELSE            reduce using rule 39 (elseif -> ELSEIF expresion estatuto_list .)


state 140

    (37) condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .

    IF              reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    PRINT           reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    READ            reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    WHILE           reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    FOR             reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    VAR             reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    CALLMETHOD      reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    IDENTIFIER      reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ENDIF           reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ELSE            reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ELSEIF          reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ENDBLOQUE       reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ENDWHILE        reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ENDFOR          reduce using rule 37 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)


state 141

    (36) condicion -> IF expresion estatuto_list elseif ELSE estatuto_list . ENDIF

    ENDIF           shift and go to state 142


state 142

    (36) condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .

    IF              reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    PRINT           reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    READ            reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    WHILE           reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    FOR             reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    VAR             reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    CALLMETHOD      reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    IDENTIFIER      reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ENDIF           reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ELSE            reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ELSEIF          reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ENDBLOQUE       reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ENDWHILE        reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ENDFOR          reduce using rule 36 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BLOQUE in state 1 resolved as shift
WARNING: shift/reduce conflict for BLOQUE in state 5 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 14 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 64 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUALTO in state 64 resolved as shift
WARNING: shift/reduce conflict for GTHANEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for LTHANEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 74 resolved as shift
WARNING: shift/reduce conflict for CALLMETHOD in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 111 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 122 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 122 resolved as shift
WARNING: shift/reduce conflict for EQUALTO in state 122 resolved as shift
WARNING: shift/reduce conflict for GTHANEQ in state 122 resolved as shift
WARNING: shift/reduce conflict for LTHANEQ in state 122 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 123 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 123 resolved as shift
WARNING: reduce/reduce conflict in state 39 resolved using rule (estatuto_list -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 46 resolved using rule (vars_list -> vars_declaration)
WARNING: rejected rule (empty -> <empty>) in state 46
