Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    TBOOL
    FALSE
    TRUE
    THASH

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM bloque ENDPROGRAM
Rule 2     programa -> PROGRAM bloque funciones ENDPROGRAM
Rule 3     programa -> PROGRAM global bloque funciones ENDPROGRAM
Rule 4     programa -> PROGRAM global bloque ENDPROGRAM
Rule 5     funciones -> func funciones
Rule 6     funciones -> voidfunc funciones
Rule 7     funciones -> empty
Rule 8     vars -> VAR vars_list ENDVAR
Rule 9     global -> GLOBAL vars_list ENDGLOBAL
Rule 10    vars_list -> vars_declaration vars_list
Rule 11    vars_list -> vars_declaration
Rule 12    vars_list -> empty
Rule 13    vars_declaration -> tipo identifier
Rule 14    tipo -> TINT
Rule 15    tipo -> TFLOAT
Rule 16    tipo -> TSTRING
Rule 17    tipo -> VOID
Rule 18    bloque -> BLOQUE estatuto_list ENDBLOQUE
Rule 19    estatuto_list -> estatuto estatuto_list
Rule 20    estatuto_list -> estatuto
Rule 21    estatuto_list -> empty
Rule 22    estatuto -> asignacion
Rule 23    estatuto -> condicion
Rule 24    estatuto -> escritura
Rule 25    estatuto -> lectura
Rule 26    estatuto -> while
Rule 27    estatuto -> for
Rule 28    estatuto -> vars
Rule 29    asignacion -> identifier EQUAL expresion
Rule 30    escritura -> PRINT escritura_vars
Rule 31    escritura_vars -> expresion COMMA escritura_vars
Rule 32    escritura_vars -> expresion
Rule 33    lectura -> READ identifier
Rule 34    condicion -> IF expresion estatuto_list elseif ENDIF
Rule 35    condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
Rule 36    condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF
Rule 37    condicion -> IF expresion estatuto_list ENDIF
Rule 38    elseif -> ELSEIF expresion estatuto_list
Rule 39    while -> WHILE expresion estatuto_list ENDWHILE
Rule 40    for -> FOR expresion estatuto_list ENDFOR
Rule 41    expresion -> termino
Rule 42    expresion -> expresion and_or termino
Rule 43    termino -> factor
Rule 44    termino -> termino sign factor
Rule 45    factor -> elemento
Rule 46    factor -> factor psign elemento
Rule 47    sign -> LTHAN
Rule 48    sign -> GTHAN
Rule 49    sign -> EQUALTO
Rule 50    sign -> GTHANEQ
Rule 51    sign -> LTHANEQ
Rule 52    sign -> NOTEQUAL
Rule 53    sign -> PLUS
Rule 54    sign -> MINUS
Rule 55    psign -> MULTI
Rule 56    psign -> DIVIDE
Rule 57    and_or -> AND
Rule 58    and_or -> OR
Rule 59    elemento -> identifier
Rule 60    elemento -> int
Rule 61    elemento -> float
Rule 62    elemento -> string
Rule 63    elemento -> LPARENTHESES expresion RPARENTHESES
Rule 64    elemento -> llamarfun
Rule 65    func -> funchead bloque RETURN identifier ENDMETHOD
Rule 66    voidfunc -> prochead bloque ENDMETHOD
Rule 67    prochead -> METHOD VOID identifier parameter_list
Rule 68    prochead -> METHOD VOID identifier
Rule 69    funchead -> METHOD tipo identifier parameter_list
Rule 70    funchead -> METHOD tipo identifier
Rule 71    parameter_list -> parameter
Rule 72    parameter_list -> parameter COMMA parameter_list
Rule 73    parameter -> tipo identifier
Rule 74    parameter -> tipo referencia
Rule 75    llamarfun -> CALLMETHOD identifier funparams
Rule 76    llamarfun -> CALLMETHOD identifier
Rule 77    funparams -> expresion
Rule 78    funparams -> expresion COMMA funparams
Rule 79    empty -> <empty>
Rule 80    identifier -> IDENTIFIER
Rule 81    referencia -> REFERENCIA
Rule 82    int -> INT
Rule 83    float -> FLOAT
Rule 84    string -> STRING

Terminals, with rules where they appear

AND                  : 57
BLOQUE               : 18
CALLMETHOD           : 75 76
COMMA                : 31 72 78
DIVIDE               : 56
ELSE                 : 35 36
ELSEIF               : 38
ENDBLOQUE            : 18
ENDFOR               : 40
ENDGLOBAL            : 9
ENDIF                : 34 35 36 37
ENDMETHOD            : 65 66
ENDPROGRAM           : 1 2 3 4
ENDVAR               : 8
ENDWHILE             : 39
EQUAL                : 29
EQUALTO              : 49
FALSE                : 
FLOAT                : 83
FOR                  : 40
GLOBAL               : 9
GTHAN                : 48
GTHANEQ              : 50
IDENTIFIER           : 80
IF                   : 34 35 36 37
INT                  : 82
LPARENTHESES         : 63
LTHAN                : 47
LTHANEQ              : 51
METHOD               : 67 68 69 70
MINUS                : 54
MULTI                : 55
NOTEQUAL             : 52
OR                   : 58
PLUS                 : 53
PRINT                : 30
PROGRAM              : 1 2 3 4
READ                 : 33
REFERENCIA           : 81
RETURN               : 65
RPARENTHESES         : 63
STRING               : 84
TBOOL                : 
TFLOAT               : 15
THASH                : 
TINT                 : 14
TRUE                 : 
TSTRING              : 16
VAR                  : 8
VOID                 : 17 67 68
WHILE                : 39
error                : 

Nonterminals, with rules where they appear

and_or               : 42
asignacion           : 22
bloque               : 1 2 3 4 65 66
condicion            : 23
elemento             : 45 46
elseif               : 34 35
empty                : 7 12 21
escritura            : 24
escritura_vars       : 30 31
estatuto             : 19 20
estatuto_list        : 18 19 34 35 35 36 36 37 38 39 40
expresion            : 29 31 32 34 35 36 37 38 39 40 42 63 77 78
factor               : 43 44 46
float                : 61
for                  : 27
func                 : 5
funchead             : 65
funciones            : 2 3 5 6
funparams            : 75 78
global               : 3 4
identifier           : 13 29 33 59 65 67 68 69 70 73 75 76
int                  : 60
lectura              : 25
llamarfun            : 64
parameter            : 71 72
parameter_list       : 67 69 72
prochead             : 66
programa             : 0
psign                : 46
referencia           : 74
sign                 : 44
string               : 62
termino              : 41 42 44
tipo                 : 13 69 70 73 74
vars                 : 28
vars_declaration     : 10 11
vars_list            : 8 9 10
voidfunc             : 6
while                : 26

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM bloque ENDPROGRAM
    (2) programa -> . PROGRAM bloque funciones ENDPROGRAM
    (3) programa -> . PROGRAM global bloque funciones ENDPROGRAM
    (4) programa -> . PROGRAM global bloque ENDPROGRAM

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . bloque ENDPROGRAM
    (2) programa -> PROGRAM . bloque funciones ENDPROGRAM
    (3) programa -> PROGRAM . global bloque funciones ENDPROGRAM
    (4) programa -> PROGRAM . global bloque ENDPROGRAM
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE
    (9) global -> . GLOBAL vars_list ENDGLOBAL

    BLOQUE          shift and go to state 4
    GLOBAL          shift and go to state 3

    bloque                         shift and go to state 5
    global                         shift and go to state 6

state 2

    (0) S' -> programa .



state 3

    (9) global -> GLOBAL . vars_list ENDGLOBAL
    (10) vars_list -> . vars_declaration vars_list
    (11) vars_list -> . vars_declaration
    (12) vars_list -> . empty
    (13) vars_declaration -> . tipo identifier
    (79) empty -> .
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    ENDGLOBAL       reduce using rule 79 (empty -> .)
    TINT            shift and go to state 9
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 10
    VOID            shift and go to state 14

    empty                          shift and go to state 7
    vars_declaration               shift and go to state 11
    tipo                           shift and go to state 8
    vars_list                      shift and go to state 13

state 4

    (18) bloque -> BLOQUE . estatuto_list ENDBLOQUE
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (79) empty -> .
    (29) asignacion -> . identifier EQUAL expresion
    (34) condicion -> . IF expresion estatuto_list elseif ENDIF
    (35) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ENDIF
    (30) escritura -> . PRINT escritura_vars
    (33) lectura -> . READ identifier
    (39) while -> . WHILE expresion estatuto_list ENDWHILE
    (40) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (80) identifier -> . IDENTIFIER

    ENDBLOQUE       reduce using rule 79 (empty -> .)
    IF              shift and go to state 23
    PRINT           shift and go to state 20
    READ            shift and go to state 18
    WHILE           shift and go to state 29
    FOR             shift and go to state 24
    VAR             shift and go to state 28
    IDENTIFIER      shift and go to state 19

    while                          shift and go to state 15
    estatuto_list                  shift and go to state 25
    identifier                     shift and go to state 26
    asignacion                     shift and go to state 27
    lectura                        shift and go to state 16
    for                            shift and go to state 17
    condicion                      shift and go to state 21
    escritura                      shift and go to state 22
    estatuto                       shift and go to state 32
    empty                          shift and go to state 31
    vars                           shift and go to state 30

state 5

    (1) programa -> PROGRAM bloque . ENDPROGRAM
    (2) programa -> PROGRAM bloque . funciones ENDPROGRAM
    (5) funciones -> . func funciones
    (6) funciones -> . voidfunc funciones
    (7) funciones -> . empty
    (65) func -> . funchead bloque RETURN identifier ENDMETHOD
    (66) voidfunc -> . prochead bloque ENDMETHOD
    (79) empty -> .
    (69) funchead -> . METHOD tipo identifier parameter_list
    (70) funchead -> . METHOD tipo identifier
    (67) prochead -> . METHOD VOID identifier parameter_list
    (68) prochead -> . METHOD VOID identifier

  ! shift/reduce conflict for ENDPROGRAM resolved as shift
    ENDPROGRAM      shift and go to state 40
    METHOD          shift and go to state 35

  ! ENDPROGRAM      [ reduce using rule 79 (empty -> .) ]

    funchead                       shift and go to state 37
    func                           shift and go to state 33
    voidfunc                       shift and go to state 38
    funciones                      shift and go to state 34
    empty                          shift and go to state 39
    prochead                       shift and go to state 36

state 6

    (3) programa -> PROGRAM global . bloque funciones ENDPROGRAM
    (4) programa -> PROGRAM global . bloque ENDPROGRAM
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE

    BLOQUE          shift and go to state 4

    bloque                         shift and go to state 41

state 7

    (12) vars_list -> empty .

    ENDVAR          reduce using rule 12 (vars_list -> empty .)
    ENDGLOBAL       reduce using rule 12 (vars_list -> empty .)


state 8

    (13) vars_declaration -> tipo . identifier
    (80) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 19

    identifier                     shift and go to state 42

state 9

    (14) tipo -> TINT .

    IDENTIFIER      reduce using rule 14 (tipo -> TINT .)
    REFERENCIA      reduce using rule 14 (tipo -> TINT .)


state 10

    (16) tipo -> TSTRING .

    IDENTIFIER      reduce using rule 16 (tipo -> TSTRING .)
    REFERENCIA      reduce using rule 16 (tipo -> TSTRING .)


state 11

    (10) vars_list -> vars_declaration . vars_list
    (11) vars_list -> vars_declaration .
    (10) vars_list -> . vars_declaration vars_list
    (11) vars_list -> . vars_declaration
    (12) vars_list -> . empty
    (13) vars_declaration -> . tipo identifier
    (79) empty -> .
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

  ! reduce/reduce conflict for ENDGLOBAL resolved using rule 11 (vars_list -> vars_declaration .)
  ! reduce/reduce conflict for ENDVAR resolved using rule 11 (vars_list -> vars_declaration .)
    ENDVAR          reduce using rule 11 (vars_list -> vars_declaration .)
    ENDGLOBAL       reduce using rule 11 (vars_list -> vars_declaration .)
    TINT            shift and go to state 9
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 10
    VOID            shift and go to state 14

  ! ENDGLOBAL       [ reduce using rule 79 (empty -> .) ]
  ! ENDVAR          [ reduce using rule 79 (empty -> .) ]

    empty                          shift and go to state 7
    vars_declaration               shift and go to state 11
    tipo                           shift and go to state 8
    vars_list                      shift and go to state 43

state 12

    (15) tipo -> TFLOAT .

    IDENTIFIER      reduce using rule 15 (tipo -> TFLOAT .)
    REFERENCIA      reduce using rule 15 (tipo -> TFLOAT .)


state 13

    (9) global -> GLOBAL vars_list . ENDGLOBAL

    ENDGLOBAL       shift and go to state 44


state 14

    (17) tipo -> VOID .

    IDENTIFIER      reduce using rule 17 (tipo -> VOID .)
    REFERENCIA      reduce using rule 17 (tipo -> VOID .)


state 15

    (26) estatuto -> while .

    IF              reduce using rule 26 (estatuto -> while .)
    PRINT           reduce using rule 26 (estatuto -> while .)
    READ            reduce using rule 26 (estatuto -> while .)
    WHILE           reduce using rule 26 (estatuto -> while .)
    FOR             reduce using rule 26 (estatuto -> while .)
    VAR             reduce using rule 26 (estatuto -> while .)
    IDENTIFIER      reduce using rule 26 (estatuto -> while .)
    ENDBLOQUE       reduce using rule 26 (estatuto -> while .)
    ELSE            reduce using rule 26 (estatuto -> while .)
    ENDIF           reduce using rule 26 (estatuto -> while .)
    ELSEIF          reduce using rule 26 (estatuto -> while .)
    ENDFOR          reduce using rule 26 (estatuto -> while .)
    ENDWHILE        reduce using rule 26 (estatuto -> while .)


state 16

    (25) estatuto -> lectura .

    IF              reduce using rule 25 (estatuto -> lectura .)
    PRINT           reduce using rule 25 (estatuto -> lectura .)
    READ            reduce using rule 25 (estatuto -> lectura .)
    WHILE           reduce using rule 25 (estatuto -> lectura .)
    FOR             reduce using rule 25 (estatuto -> lectura .)
    VAR             reduce using rule 25 (estatuto -> lectura .)
    IDENTIFIER      reduce using rule 25 (estatuto -> lectura .)
    ENDBLOQUE       reduce using rule 25 (estatuto -> lectura .)
    ELSE            reduce using rule 25 (estatuto -> lectura .)
    ENDIF           reduce using rule 25 (estatuto -> lectura .)
    ELSEIF          reduce using rule 25 (estatuto -> lectura .)
    ENDFOR          reduce using rule 25 (estatuto -> lectura .)
    ENDWHILE        reduce using rule 25 (estatuto -> lectura .)


state 17

    (27) estatuto -> for .

    IF              reduce using rule 27 (estatuto -> for .)
    PRINT           reduce using rule 27 (estatuto -> for .)
    READ            reduce using rule 27 (estatuto -> for .)
    WHILE           reduce using rule 27 (estatuto -> for .)
    FOR             reduce using rule 27 (estatuto -> for .)
    VAR             reduce using rule 27 (estatuto -> for .)
    IDENTIFIER      reduce using rule 27 (estatuto -> for .)
    ENDBLOQUE       reduce using rule 27 (estatuto -> for .)
    ELSE            reduce using rule 27 (estatuto -> for .)
    ENDIF           reduce using rule 27 (estatuto -> for .)
    ELSEIF          reduce using rule 27 (estatuto -> for .)
    ENDFOR          reduce using rule 27 (estatuto -> for .)
    ENDWHILE        reduce using rule 27 (estatuto -> for .)


state 18

    (33) lectura -> READ . identifier
    (80) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 19

    identifier                     shift and go to state 45

state 19

    (80) identifier -> IDENTIFIER .

    TINT            reduce using rule 80 (identifier -> IDENTIFIER .)
    TFLOAT          reduce using rule 80 (identifier -> IDENTIFIER .)
    TSTRING         reduce using rule 80 (identifier -> IDENTIFIER .)
    VOID            reduce using rule 80 (identifier -> IDENTIFIER .)
    ENDGLOBAL       reduce using rule 80 (identifier -> IDENTIFIER .)
    ENDVAR          reduce using rule 80 (identifier -> IDENTIFIER .)
    EQUAL           reduce using rule 80 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 80 (identifier -> IDENTIFIER .)
    BLOQUE          reduce using rule 80 (identifier -> IDENTIFIER .)
    MULTI           reduce using rule 80 (identifier -> IDENTIFIER .)
    DIVIDE          reduce using rule 80 (identifier -> IDENTIFIER .)
    LTHAN           reduce using rule 80 (identifier -> IDENTIFIER .)
    GTHAN           reduce using rule 80 (identifier -> IDENTIFIER .)
    EQUALTO         reduce using rule 80 (identifier -> IDENTIFIER .)
    GTHANEQ         reduce using rule 80 (identifier -> IDENTIFIER .)
    LTHANEQ         reduce using rule 80 (identifier -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 80 (identifier -> IDENTIFIER .)
    PLUS            reduce using rule 80 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 80 (identifier -> IDENTIFIER .)
    AND             reduce using rule 80 (identifier -> IDENTIFIER .)
    OR              reduce using rule 80 (identifier -> IDENTIFIER .)
    IF              reduce using rule 80 (identifier -> IDENTIFIER .)
    PRINT           reduce using rule 80 (identifier -> IDENTIFIER .)
    READ            reduce using rule 80 (identifier -> IDENTIFIER .)
    WHILE           reduce using rule 80 (identifier -> IDENTIFIER .)
    FOR             reduce using rule 80 (identifier -> IDENTIFIER .)
    VAR             reduce using rule 80 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 80 (identifier -> IDENTIFIER .)
    ENDBLOQUE       reduce using rule 80 (identifier -> IDENTIFIER .)
    ELSE            reduce using rule 80 (identifier -> IDENTIFIER .)
    ENDIF           reduce using rule 80 (identifier -> IDENTIFIER .)
    ELSEIF          reduce using rule 80 (identifier -> IDENTIFIER .)
    ENDFOR          reduce using rule 80 (identifier -> IDENTIFIER .)
    ENDWHILE        reduce using rule 80 (identifier -> IDENTIFIER .)
    RPARENTHESES    reduce using rule 80 (identifier -> IDENTIFIER .)
    LPARENTHESES    reduce using rule 80 (identifier -> IDENTIFIER .)
    INT             reduce using rule 80 (identifier -> IDENTIFIER .)
    FLOAT           reduce using rule 80 (identifier -> IDENTIFIER .)
    STRING          reduce using rule 80 (identifier -> IDENTIFIER .)
    CALLMETHOD      reduce using rule 80 (identifier -> IDENTIFIER .)
    ENDMETHOD       reduce using rule 80 (identifier -> IDENTIFIER .)


state 20

    (30) escritura -> PRINT . escritura_vars
    (31) escritura_vars -> . expresion COMMA escritura_vars
    (32) escritura_vars -> . expresion
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 54
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    escritura_vars                 shift and go to state 50
    llamarfun                      shift and go to state 59

state 21

    (23) estatuto -> condicion .

    IF              reduce using rule 23 (estatuto -> condicion .)
    PRINT           reduce using rule 23 (estatuto -> condicion .)
    READ            reduce using rule 23 (estatuto -> condicion .)
    WHILE           reduce using rule 23 (estatuto -> condicion .)
    FOR             reduce using rule 23 (estatuto -> condicion .)
    VAR             reduce using rule 23 (estatuto -> condicion .)
    IDENTIFIER      reduce using rule 23 (estatuto -> condicion .)
    ENDBLOQUE       reduce using rule 23 (estatuto -> condicion .)
    ELSE            reduce using rule 23 (estatuto -> condicion .)
    ENDIF           reduce using rule 23 (estatuto -> condicion .)
    ELSEIF          reduce using rule 23 (estatuto -> condicion .)
    ENDFOR          reduce using rule 23 (estatuto -> condicion .)
    ENDWHILE        reduce using rule 23 (estatuto -> condicion .)


state 22

    (24) estatuto -> escritura .

    IF              reduce using rule 24 (estatuto -> escritura .)
    PRINT           reduce using rule 24 (estatuto -> escritura .)
    READ            reduce using rule 24 (estatuto -> escritura .)
    WHILE           reduce using rule 24 (estatuto -> escritura .)
    FOR             reduce using rule 24 (estatuto -> escritura .)
    VAR             reduce using rule 24 (estatuto -> escritura .)
    IDENTIFIER      reduce using rule 24 (estatuto -> escritura .)
    ENDBLOQUE       reduce using rule 24 (estatuto -> escritura .)
    ELSE            reduce using rule 24 (estatuto -> escritura .)
    ENDIF           reduce using rule 24 (estatuto -> escritura .)
    ELSEIF          reduce using rule 24 (estatuto -> escritura .)
    ENDFOR          reduce using rule 24 (estatuto -> escritura .)
    ENDWHILE        reduce using rule 24 (estatuto -> escritura .)


state 23

    (34) condicion -> IF . expresion estatuto_list elseif ENDIF
    (35) condicion -> IF . expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> IF . expresion estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> IF . expresion estatuto_list ENDIF
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 61
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    llamarfun                      shift and go to state 59

state 24

    (40) for -> FOR . expresion estatuto_list ENDFOR
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 62
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    llamarfun                      shift and go to state 59

state 25

    (18) bloque -> BLOQUE estatuto_list . ENDBLOQUE

    ENDBLOQUE       shift and go to state 63


state 26

    (29) asignacion -> identifier . EQUAL expresion

    EQUAL           shift and go to state 64


state 27

    (22) estatuto -> asignacion .

    IF              reduce using rule 22 (estatuto -> asignacion .)
    PRINT           reduce using rule 22 (estatuto -> asignacion .)
    READ            reduce using rule 22 (estatuto -> asignacion .)
    WHILE           reduce using rule 22 (estatuto -> asignacion .)
    FOR             reduce using rule 22 (estatuto -> asignacion .)
    VAR             reduce using rule 22 (estatuto -> asignacion .)
    IDENTIFIER      reduce using rule 22 (estatuto -> asignacion .)
    ENDBLOQUE       reduce using rule 22 (estatuto -> asignacion .)
    ELSE            reduce using rule 22 (estatuto -> asignacion .)
    ENDIF           reduce using rule 22 (estatuto -> asignacion .)
    ELSEIF          reduce using rule 22 (estatuto -> asignacion .)
    ENDFOR          reduce using rule 22 (estatuto -> asignacion .)
    ENDWHILE        reduce using rule 22 (estatuto -> asignacion .)


state 28

    (8) vars -> VAR . vars_list ENDVAR
    (10) vars_list -> . vars_declaration vars_list
    (11) vars_list -> . vars_declaration
    (12) vars_list -> . empty
    (13) vars_declaration -> . tipo identifier
    (79) empty -> .
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    ENDVAR          reduce using rule 79 (empty -> .)
    TINT            shift and go to state 9
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 10
    VOID            shift and go to state 14

    empty                          shift and go to state 7
    vars_declaration               shift and go to state 11
    tipo                           shift and go to state 8
    vars_list                      shift and go to state 65

state 29

    (39) while -> WHILE . expresion estatuto_list ENDWHILE
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 66
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    llamarfun                      shift and go to state 59

state 30

    (28) estatuto -> vars .

    IF              reduce using rule 28 (estatuto -> vars .)
    PRINT           reduce using rule 28 (estatuto -> vars .)
    READ            reduce using rule 28 (estatuto -> vars .)
    WHILE           reduce using rule 28 (estatuto -> vars .)
    FOR             reduce using rule 28 (estatuto -> vars .)
    VAR             reduce using rule 28 (estatuto -> vars .)
    IDENTIFIER      reduce using rule 28 (estatuto -> vars .)
    ENDBLOQUE       reduce using rule 28 (estatuto -> vars .)
    ELSE            reduce using rule 28 (estatuto -> vars .)
    ENDIF           reduce using rule 28 (estatuto -> vars .)
    ELSEIF          reduce using rule 28 (estatuto -> vars .)
    ENDFOR          reduce using rule 28 (estatuto -> vars .)
    ENDWHILE        reduce using rule 28 (estatuto -> vars .)


state 31

    (21) estatuto_list -> empty .

    ENDIF           reduce using rule 21 (estatuto_list -> empty .)
    ELSE            reduce using rule 21 (estatuto_list -> empty .)
    ENDFOR          reduce using rule 21 (estatuto_list -> empty .)
    ENDBLOQUE       reduce using rule 21 (estatuto_list -> empty .)
    ELSEIF          reduce using rule 21 (estatuto_list -> empty .)
    ENDWHILE        reduce using rule 21 (estatuto_list -> empty .)


state 32

    (19) estatuto_list -> estatuto . estatuto_list
    (20) estatuto_list -> estatuto .
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (79) empty -> .
    (29) asignacion -> . identifier EQUAL expresion
    (34) condicion -> . IF expresion estatuto_list elseif ENDIF
    (35) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ENDIF
    (30) escritura -> . PRINT escritura_vars
    (33) lectura -> . READ identifier
    (39) while -> . WHILE expresion estatuto_list ENDWHILE
    (40) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (80) identifier -> . IDENTIFIER

  ! reduce/reduce conflict for ENDBLOQUE resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ENDIF resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ENDFOR resolved using rule 20 (estatuto_list -> estatuto .)
  ! reduce/reduce conflict for ENDWHILE resolved using rule 20 (estatuto_list -> estatuto .)
    ENDIF           reduce using rule 20 (estatuto_list -> estatuto .)
    ELSE            reduce using rule 20 (estatuto_list -> estatuto .)
    ENDFOR          reduce using rule 20 (estatuto_list -> estatuto .)
    ENDBLOQUE       reduce using rule 20 (estatuto_list -> estatuto .)
    ELSEIF          reduce using rule 20 (estatuto_list -> estatuto .)
    ENDWHILE        reduce using rule 20 (estatuto_list -> estatuto .)
    IF              shift and go to state 23
    PRINT           shift and go to state 20
    READ            shift and go to state 18
    WHILE           shift and go to state 29
    FOR             shift and go to state 24
    VAR             shift and go to state 28
    IDENTIFIER      shift and go to state 19

  ! ENDBLOQUE       [ reduce using rule 79 (empty -> .) ]
  ! ELSE            [ reduce using rule 79 (empty -> .) ]
  ! ENDIF           [ reduce using rule 79 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 79 (empty -> .) ]
  ! ENDFOR          [ reduce using rule 79 (empty -> .) ]
  ! ENDWHILE        [ reduce using rule 79 (empty -> .) ]

    while                          shift and go to state 15
    estatuto_list                  shift and go to state 67
    identifier                     shift and go to state 26
    asignacion                     shift and go to state 27
    lectura                        shift and go to state 16
    for                            shift and go to state 17
    condicion                      shift and go to state 21
    escritura                      shift and go to state 22
    estatuto                       shift and go to state 32
    empty                          shift and go to state 31
    vars                           shift and go to state 30

state 33

    (5) funciones -> func . funciones
    (5) funciones -> . func funciones
    (6) funciones -> . voidfunc funciones
    (7) funciones -> . empty
    (65) func -> . funchead bloque RETURN identifier ENDMETHOD
    (66) voidfunc -> . prochead bloque ENDMETHOD
    (79) empty -> .
    (69) funchead -> . METHOD tipo identifier parameter_list
    (70) funchead -> . METHOD tipo identifier
    (67) prochead -> . METHOD VOID identifier parameter_list
    (68) prochead -> . METHOD VOID identifier

    ENDPROGRAM      reduce using rule 79 (empty -> .)
    METHOD          shift and go to state 35

    prochead                       shift and go to state 36
    funchead                       shift and go to state 37
    func                           shift and go to state 33
    voidfunc                       shift and go to state 38
    funciones                      shift and go to state 68
    empty                          shift and go to state 39

state 34

    (2) programa -> PROGRAM bloque funciones . ENDPROGRAM

    ENDPROGRAM      shift and go to state 69


state 35

    (69) funchead -> METHOD . tipo identifier parameter_list
    (70) funchead -> METHOD . tipo identifier
    (67) prochead -> METHOD . VOID identifier parameter_list
    (68) prochead -> METHOD . VOID identifier
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    VOID            shift and go to state 70
    TINT            shift and go to state 9
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 10

    tipo                           shift and go to state 71

state 36

    (66) voidfunc -> prochead . bloque ENDMETHOD
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE

    BLOQUE          shift and go to state 4

    bloque                         shift and go to state 72

state 37

    (65) func -> funchead . bloque RETURN identifier ENDMETHOD
    (18) bloque -> . BLOQUE estatuto_list ENDBLOQUE

    BLOQUE          shift and go to state 4

    bloque                         shift and go to state 73

state 38

    (6) funciones -> voidfunc . funciones
    (5) funciones -> . func funciones
    (6) funciones -> . voidfunc funciones
    (7) funciones -> . empty
    (65) func -> . funchead bloque RETURN identifier ENDMETHOD
    (66) voidfunc -> . prochead bloque ENDMETHOD
    (79) empty -> .
    (69) funchead -> . METHOD tipo identifier parameter_list
    (70) funchead -> . METHOD tipo identifier
    (67) prochead -> . METHOD VOID identifier parameter_list
    (68) prochead -> . METHOD VOID identifier

    ENDPROGRAM      reduce using rule 79 (empty -> .)
    METHOD          shift and go to state 35

    prochead                       shift and go to state 36
    funchead                       shift and go to state 37
    func                           shift and go to state 33
    voidfunc                       shift and go to state 38
    funciones                      shift and go to state 74
    empty                          shift and go to state 39

state 39

    (7) funciones -> empty .

    ENDPROGRAM      reduce using rule 7 (funciones -> empty .)


state 40

    (1) programa -> PROGRAM bloque ENDPROGRAM .

    $end            reduce using rule 1 (programa -> PROGRAM bloque ENDPROGRAM .)


state 41

    (3) programa -> PROGRAM global bloque . funciones ENDPROGRAM
    (4) programa -> PROGRAM global bloque . ENDPROGRAM
    (5) funciones -> . func funciones
    (6) funciones -> . voidfunc funciones
    (7) funciones -> . empty
    (65) func -> . funchead bloque RETURN identifier ENDMETHOD
    (66) voidfunc -> . prochead bloque ENDMETHOD
    (79) empty -> .
    (69) funchead -> . METHOD tipo identifier parameter_list
    (70) funchead -> . METHOD tipo identifier
    (67) prochead -> . METHOD VOID identifier parameter_list
    (68) prochead -> . METHOD VOID identifier

  ! shift/reduce conflict for ENDPROGRAM resolved as shift
    ENDPROGRAM      shift and go to state 76
    METHOD          shift and go to state 35

  ! ENDPROGRAM      [ reduce using rule 79 (empty -> .) ]

    funchead                       shift and go to state 37
    func                           shift and go to state 33
    funciones                      shift and go to state 75
    empty                          shift and go to state 39
    prochead                       shift and go to state 36
    voidfunc                       shift and go to state 38

state 42

    (13) vars_declaration -> tipo identifier .

    TINT            reduce using rule 13 (vars_declaration -> tipo identifier .)
    TFLOAT          reduce using rule 13 (vars_declaration -> tipo identifier .)
    TSTRING         reduce using rule 13 (vars_declaration -> tipo identifier .)
    VOID            reduce using rule 13 (vars_declaration -> tipo identifier .)
    ENDGLOBAL       reduce using rule 13 (vars_declaration -> tipo identifier .)
    ENDVAR          reduce using rule 13 (vars_declaration -> tipo identifier .)


state 43

    (10) vars_list -> vars_declaration vars_list .

    ENDVAR          reduce using rule 10 (vars_list -> vars_declaration vars_list .)
    ENDGLOBAL       reduce using rule 10 (vars_list -> vars_declaration vars_list .)


state 44

    (9) global -> GLOBAL vars_list ENDGLOBAL .

    BLOQUE          reduce using rule 9 (global -> GLOBAL vars_list ENDGLOBAL .)


state 45

    (33) lectura -> READ identifier .

    IF              reduce using rule 33 (lectura -> READ identifier .)
    PRINT           reduce using rule 33 (lectura -> READ identifier .)
    READ            reduce using rule 33 (lectura -> READ identifier .)
    WHILE           reduce using rule 33 (lectura -> READ identifier .)
    FOR             reduce using rule 33 (lectura -> READ identifier .)
    VAR             reduce using rule 33 (lectura -> READ identifier .)
    IDENTIFIER      reduce using rule 33 (lectura -> READ identifier .)
    ENDWHILE        reduce using rule 33 (lectura -> READ identifier .)
    ENDBLOQUE       reduce using rule 33 (lectura -> READ identifier .)
    ENDIF           reduce using rule 33 (lectura -> READ identifier .)
    ELSE            reduce using rule 33 (lectura -> READ identifier .)
    ELSEIF          reduce using rule 33 (lectura -> READ identifier .)
    ENDFOR          reduce using rule 33 (lectura -> READ identifier .)


state 46

    (45) factor -> elemento .

    MULTI           reduce using rule 45 (factor -> elemento .)
    DIVIDE          reduce using rule 45 (factor -> elemento .)
    LTHAN           reduce using rule 45 (factor -> elemento .)
    GTHAN           reduce using rule 45 (factor -> elemento .)
    EQUALTO         reduce using rule 45 (factor -> elemento .)
    GTHANEQ         reduce using rule 45 (factor -> elemento .)
    LTHANEQ         reduce using rule 45 (factor -> elemento .)
    NOTEQUAL        reduce using rule 45 (factor -> elemento .)
    PLUS            reduce using rule 45 (factor -> elemento .)
    MINUS           reduce using rule 45 (factor -> elemento .)
    AND             reduce using rule 45 (factor -> elemento .)
    OR              reduce using rule 45 (factor -> elemento .)
    IF              reduce using rule 45 (factor -> elemento .)
    PRINT           reduce using rule 45 (factor -> elemento .)
    READ            reduce using rule 45 (factor -> elemento .)
    WHILE           reduce using rule 45 (factor -> elemento .)
    FOR             reduce using rule 45 (factor -> elemento .)
    VAR             reduce using rule 45 (factor -> elemento .)
    IDENTIFIER      reduce using rule 45 (factor -> elemento .)
    ENDIF           reduce using rule 45 (factor -> elemento .)
    ELSE            reduce using rule 45 (factor -> elemento .)
    ENDWHILE        reduce using rule 45 (factor -> elemento .)
    COMMA           reduce using rule 45 (factor -> elemento .)
    ENDBLOQUE       reduce using rule 45 (factor -> elemento .)
    ELSEIF          reduce using rule 45 (factor -> elemento .)
    ENDFOR          reduce using rule 45 (factor -> elemento .)
    RPARENTHESES    reduce using rule 45 (factor -> elemento .)


state 47

    (82) int -> INT .

    MULTI           reduce using rule 82 (int -> INT .)
    DIVIDE          reduce using rule 82 (int -> INT .)
    LTHAN           reduce using rule 82 (int -> INT .)
    GTHAN           reduce using rule 82 (int -> INT .)
    EQUALTO         reduce using rule 82 (int -> INT .)
    GTHANEQ         reduce using rule 82 (int -> INT .)
    LTHANEQ         reduce using rule 82 (int -> INT .)
    NOTEQUAL        reduce using rule 82 (int -> INT .)
    PLUS            reduce using rule 82 (int -> INT .)
    MINUS           reduce using rule 82 (int -> INT .)
    COMMA           reduce using rule 82 (int -> INT .)
    AND             reduce using rule 82 (int -> INT .)
    OR              reduce using rule 82 (int -> INT .)
    IF              reduce using rule 82 (int -> INT .)
    PRINT           reduce using rule 82 (int -> INT .)
    READ            reduce using rule 82 (int -> INT .)
    WHILE           reduce using rule 82 (int -> INT .)
    FOR             reduce using rule 82 (int -> INT .)
    VAR             reduce using rule 82 (int -> INT .)
    IDENTIFIER      reduce using rule 82 (int -> INT .)
    ENDBLOQUE       reduce using rule 82 (int -> INT .)
    ELSE            reduce using rule 82 (int -> INT .)
    ENDIF           reduce using rule 82 (int -> INT .)
    ELSEIF          reduce using rule 82 (int -> INT .)
    ENDFOR          reduce using rule 82 (int -> INT .)
    ENDWHILE        reduce using rule 82 (int -> INT .)
    RPARENTHESES    reduce using rule 82 (int -> INT .)


state 48

    (41) expresion -> termino .
    (44) termino -> termino . sign factor
    (47) sign -> . LTHAN
    (48) sign -> . GTHAN
    (49) sign -> . EQUALTO
    (50) sign -> . GTHANEQ
    (51) sign -> . LTHANEQ
    (52) sign -> . NOTEQUAL
    (53) sign -> . PLUS
    (54) sign -> . MINUS

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUALTO resolved as shift
  ! shift/reduce conflict for GTHANEQ resolved as shift
  ! shift/reduce conflict for LTHANEQ resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 41 (expresion -> termino .)
    AND             reduce using rule 41 (expresion -> termino .)
    OR              reduce using rule 41 (expresion -> termino .)
    IF              reduce using rule 41 (expresion -> termino .)
    PRINT           reduce using rule 41 (expresion -> termino .)
    READ            reduce using rule 41 (expresion -> termino .)
    WHILE           reduce using rule 41 (expresion -> termino .)
    FOR             reduce using rule 41 (expresion -> termino .)
    VAR             reduce using rule 41 (expresion -> termino .)
    IDENTIFIER      reduce using rule 41 (expresion -> termino .)
    ENDBLOQUE       reduce using rule 41 (expresion -> termino .)
    ELSE            reduce using rule 41 (expresion -> termino .)
    ENDIF           reduce using rule 41 (expresion -> termino .)
    ELSEIF          reduce using rule 41 (expresion -> termino .)
    ENDFOR          reduce using rule 41 (expresion -> termino .)
    ENDWHILE        reduce using rule 41 (expresion -> termino .)
    MULTI           reduce using rule 41 (expresion -> termino .)
    DIVIDE          reduce using rule 41 (expresion -> termino .)
    RPARENTHESES    reduce using rule 41 (expresion -> termino .)
    LTHAN           shift and go to state 80
    GTHAN           shift and go to state 79
    EQUALTO         shift and go to state 78
    GTHANEQ         shift and go to state 82
    LTHANEQ         shift and go to state 81
    NOTEQUAL        shift and go to state 77
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85

  ! LTHAN           [ reduce using rule 41 (expresion -> termino .) ]
  ! GTHAN           [ reduce using rule 41 (expresion -> termino .) ]
  ! EQUALTO         [ reduce using rule 41 (expresion -> termino .) ]
  ! GTHANEQ         [ reduce using rule 41 (expresion -> termino .) ]
  ! LTHANEQ         [ reduce using rule 41 (expresion -> termino .) ]
  ! NOTEQUAL        [ reduce using rule 41 (expresion -> termino .) ]
  ! PLUS            [ reduce using rule 41 (expresion -> termino .) ]
  ! MINUS           [ reduce using rule 41 (expresion -> termino .) ]

    sign                           shift and go to state 83

state 49

    (63) elemento -> LPARENTHESES . expresion RPARENTHESES
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 86
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    llamarfun                      shift and go to state 59

state 50

    (30) escritura -> PRINT escritura_vars .

    IF              reduce using rule 30 (escritura -> PRINT escritura_vars .)
    PRINT           reduce using rule 30 (escritura -> PRINT escritura_vars .)
    READ            reduce using rule 30 (escritura -> PRINT escritura_vars .)
    WHILE           reduce using rule 30 (escritura -> PRINT escritura_vars .)
    FOR             reduce using rule 30 (escritura -> PRINT escritura_vars .)
    VAR             reduce using rule 30 (escritura -> PRINT escritura_vars .)
    IDENTIFIER      reduce using rule 30 (escritura -> PRINT escritura_vars .)
    ENDIF           reduce using rule 30 (escritura -> PRINT escritura_vars .)
    ELSE            reduce using rule 30 (escritura -> PRINT escritura_vars .)
    ELSEIF          reduce using rule 30 (escritura -> PRINT escritura_vars .)
    ENDFOR          reduce using rule 30 (escritura -> PRINT escritura_vars .)
    ENDWHILE        reduce using rule 30 (escritura -> PRINT escritura_vars .)
    ENDBLOQUE       reduce using rule 30 (escritura -> PRINT escritura_vars .)


state 51

    (61) elemento -> float .

    MULTI           reduce using rule 61 (elemento -> float .)
    DIVIDE          reduce using rule 61 (elemento -> float .)
    LTHAN           reduce using rule 61 (elemento -> float .)
    GTHAN           reduce using rule 61 (elemento -> float .)
    EQUALTO         reduce using rule 61 (elemento -> float .)
    GTHANEQ         reduce using rule 61 (elemento -> float .)
    LTHANEQ         reduce using rule 61 (elemento -> float .)
    NOTEQUAL        reduce using rule 61 (elemento -> float .)
    PLUS            reduce using rule 61 (elemento -> float .)
    MINUS           reduce using rule 61 (elemento -> float .)
    AND             reduce using rule 61 (elemento -> float .)
    OR              reduce using rule 61 (elemento -> float .)
    IF              reduce using rule 61 (elemento -> float .)
    PRINT           reduce using rule 61 (elemento -> float .)
    READ            reduce using rule 61 (elemento -> float .)
    WHILE           reduce using rule 61 (elemento -> float .)
    FOR             reduce using rule 61 (elemento -> float .)
    VAR             reduce using rule 61 (elemento -> float .)
    IDENTIFIER      reduce using rule 61 (elemento -> float .)
    ENDIF           reduce using rule 61 (elemento -> float .)
    ELSE            reduce using rule 61 (elemento -> float .)
    RPARENTHESES    reduce using rule 61 (elemento -> float .)
    COMMA           reduce using rule 61 (elemento -> float .)
    ENDBLOQUE       reduce using rule 61 (elemento -> float .)
    ELSEIF          reduce using rule 61 (elemento -> float .)
    ENDFOR          reduce using rule 61 (elemento -> float .)
    ENDWHILE        reduce using rule 61 (elemento -> float .)


state 52

    (83) float -> FLOAT .

    MULTI           reduce using rule 83 (float -> FLOAT .)
    DIVIDE          reduce using rule 83 (float -> FLOAT .)
    LTHAN           reduce using rule 83 (float -> FLOAT .)
    GTHAN           reduce using rule 83 (float -> FLOAT .)
    EQUALTO         reduce using rule 83 (float -> FLOAT .)
    GTHANEQ         reduce using rule 83 (float -> FLOAT .)
    LTHANEQ         reduce using rule 83 (float -> FLOAT .)
    NOTEQUAL        reduce using rule 83 (float -> FLOAT .)
    PLUS            reduce using rule 83 (float -> FLOAT .)
    MINUS           reduce using rule 83 (float -> FLOAT .)
    COMMA           reduce using rule 83 (float -> FLOAT .)
    AND             reduce using rule 83 (float -> FLOAT .)
    OR              reduce using rule 83 (float -> FLOAT .)
    IF              reduce using rule 83 (float -> FLOAT .)
    PRINT           reduce using rule 83 (float -> FLOAT .)
    READ            reduce using rule 83 (float -> FLOAT .)
    WHILE           reduce using rule 83 (float -> FLOAT .)
    FOR             reduce using rule 83 (float -> FLOAT .)
    VAR             reduce using rule 83 (float -> FLOAT .)
    IDENTIFIER      reduce using rule 83 (float -> FLOAT .)
    ENDBLOQUE       reduce using rule 83 (float -> FLOAT .)
    ELSE            reduce using rule 83 (float -> FLOAT .)
    ENDIF           reduce using rule 83 (float -> FLOAT .)
    ELSEIF          reduce using rule 83 (float -> FLOAT .)
    ENDFOR          reduce using rule 83 (float -> FLOAT .)
    ENDWHILE        reduce using rule 83 (float -> FLOAT .)
    RPARENTHESES    reduce using rule 83 (float -> FLOAT .)


state 53

    (59) elemento -> identifier .

    MULTI           reduce using rule 59 (elemento -> identifier .)
    DIVIDE          reduce using rule 59 (elemento -> identifier .)
    LTHAN           reduce using rule 59 (elemento -> identifier .)
    GTHAN           reduce using rule 59 (elemento -> identifier .)
    EQUALTO         reduce using rule 59 (elemento -> identifier .)
    GTHANEQ         reduce using rule 59 (elemento -> identifier .)
    LTHANEQ         reduce using rule 59 (elemento -> identifier .)
    NOTEQUAL        reduce using rule 59 (elemento -> identifier .)
    PLUS            reduce using rule 59 (elemento -> identifier .)
    MINUS           reduce using rule 59 (elemento -> identifier .)
    AND             reduce using rule 59 (elemento -> identifier .)
    OR              reduce using rule 59 (elemento -> identifier .)
    IF              reduce using rule 59 (elemento -> identifier .)
    PRINT           reduce using rule 59 (elemento -> identifier .)
    READ            reduce using rule 59 (elemento -> identifier .)
    WHILE           reduce using rule 59 (elemento -> identifier .)
    FOR             reduce using rule 59 (elemento -> identifier .)
    VAR             reduce using rule 59 (elemento -> identifier .)
    IDENTIFIER      reduce using rule 59 (elemento -> identifier .)
    ENDIF           reduce using rule 59 (elemento -> identifier .)
    ELSE            reduce using rule 59 (elemento -> identifier .)
    RPARENTHESES    reduce using rule 59 (elemento -> identifier .)
    COMMA           reduce using rule 59 (elemento -> identifier .)
    ENDBLOQUE       reduce using rule 59 (elemento -> identifier .)
    ELSEIF          reduce using rule 59 (elemento -> identifier .)
    ENDFOR          reduce using rule 59 (elemento -> identifier .)
    ENDWHILE        reduce using rule 59 (elemento -> identifier .)


state 54

    (31) escritura_vars -> expresion . COMMA escritura_vars
    (32) escritura_vars -> expresion .
    (42) expresion -> expresion . and_or termino
    (57) and_or -> . AND
    (58) and_or -> . OR

    COMMA           shift and go to state 90
    IF              reduce using rule 32 (escritura_vars -> expresion .)
    PRINT           reduce using rule 32 (escritura_vars -> expresion .)
    READ            reduce using rule 32 (escritura_vars -> expresion .)
    WHILE           reduce using rule 32 (escritura_vars -> expresion .)
    FOR             reduce using rule 32 (escritura_vars -> expresion .)
    VAR             reduce using rule 32 (escritura_vars -> expresion .)
    IDENTIFIER      reduce using rule 32 (escritura_vars -> expresion .)
    ENDBLOQUE       reduce using rule 32 (escritura_vars -> expresion .)
    ELSE            reduce using rule 32 (escritura_vars -> expresion .)
    ENDIF           reduce using rule 32 (escritura_vars -> expresion .)
    ELSEIF          reduce using rule 32 (escritura_vars -> expresion .)
    ENDFOR          reduce using rule 32 (escritura_vars -> expresion .)
    ENDWHILE        reduce using rule 32 (escritura_vars -> expresion .)
    AND             shift and go to state 89
    OR              shift and go to state 88

    and_or                         shift and go to state 87

state 55

    (62) elemento -> string .

    MULTI           reduce using rule 62 (elemento -> string .)
    DIVIDE          reduce using rule 62 (elemento -> string .)
    LTHAN           reduce using rule 62 (elemento -> string .)
    GTHAN           reduce using rule 62 (elemento -> string .)
    EQUALTO         reduce using rule 62 (elemento -> string .)
    GTHANEQ         reduce using rule 62 (elemento -> string .)
    LTHANEQ         reduce using rule 62 (elemento -> string .)
    NOTEQUAL        reduce using rule 62 (elemento -> string .)
    PLUS            reduce using rule 62 (elemento -> string .)
    MINUS           reduce using rule 62 (elemento -> string .)
    AND             reduce using rule 62 (elemento -> string .)
    OR              reduce using rule 62 (elemento -> string .)
    IF              reduce using rule 62 (elemento -> string .)
    PRINT           reduce using rule 62 (elemento -> string .)
    READ            reduce using rule 62 (elemento -> string .)
    WHILE           reduce using rule 62 (elemento -> string .)
    FOR             reduce using rule 62 (elemento -> string .)
    VAR             reduce using rule 62 (elemento -> string .)
    IDENTIFIER      reduce using rule 62 (elemento -> string .)
    ENDIF           reduce using rule 62 (elemento -> string .)
    ELSE            reduce using rule 62 (elemento -> string .)
    RPARENTHESES    reduce using rule 62 (elemento -> string .)
    COMMA           reduce using rule 62 (elemento -> string .)
    ENDBLOQUE       reduce using rule 62 (elemento -> string .)
    ELSEIF          reduce using rule 62 (elemento -> string .)
    ENDFOR          reduce using rule 62 (elemento -> string .)
    ENDWHILE        reduce using rule 62 (elemento -> string .)


state 56

    (43) termino -> factor .
    (46) factor -> factor . psign elemento
    (55) psign -> . MULTI
    (56) psign -> . DIVIDE

  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LTHAN           reduce using rule 43 (termino -> factor .)
    GTHAN           reduce using rule 43 (termino -> factor .)
    EQUALTO         reduce using rule 43 (termino -> factor .)
    GTHANEQ         reduce using rule 43 (termino -> factor .)
    LTHANEQ         reduce using rule 43 (termino -> factor .)
    NOTEQUAL        reduce using rule 43 (termino -> factor .)
    PLUS            reduce using rule 43 (termino -> factor .)
    MINUS           reduce using rule 43 (termino -> factor .)
    COMMA           reduce using rule 43 (termino -> factor .)
    AND             reduce using rule 43 (termino -> factor .)
    OR              reduce using rule 43 (termino -> factor .)
    IF              reduce using rule 43 (termino -> factor .)
    PRINT           reduce using rule 43 (termino -> factor .)
    READ            reduce using rule 43 (termino -> factor .)
    WHILE           reduce using rule 43 (termino -> factor .)
    FOR             reduce using rule 43 (termino -> factor .)
    VAR             reduce using rule 43 (termino -> factor .)
    IDENTIFIER      reduce using rule 43 (termino -> factor .)
    ENDBLOQUE       reduce using rule 43 (termino -> factor .)
    ELSE            reduce using rule 43 (termino -> factor .)
    ENDIF           reduce using rule 43 (termino -> factor .)
    ELSEIF          reduce using rule 43 (termino -> factor .)
    ENDFOR          reduce using rule 43 (termino -> factor .)
    ENDWHILE        reduce using rule 43 (termino -> factor .)
    RPARENTHESES    reduce using rule 43 (termino -> factor .)
    MULTI           shift and go to state 91
    DIVIDE          shift and go to state 93

  ! MULTI           [ reduce using rule 43 (termino -> factor .) ]
  ! DIVIDE          [ reduce using rule 43 (termino -> factor .) ]

    psign                          shift and go to state 92

state 57

    (75) llamarfun -> CALLMETHOD . identifier funparams
    (76) llamarfun -> CALLMETHOD . identifier
    (80) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 19

    identifier                     shift and go to state 94

state 58

    (60) elemento -> int .

    MULTI           reduce using rule 60 (elemento -> int .)
    DIVIDE          reduce using rule 60 (elemento -> int .)
    LTHAN           reduce using rule 60 (elemento -> int .)
    GTHAN           reduce using rule 60 (elemento -> int .)
    EQUALTO         reduce using rule 60 (elemento -> int .)
    GTHANEQ         reduce using rule 60 (elemento -> int .)
    LTHANEQ         reduce using rule 60 (elemento -> int .)
    NOTEQUAL        reduce using rule 60 (elemento -> int .)
    PLUS            reduce using rule 60 (elemento -> int .)
    MINUS           reduce using rule 60 (elemento -> int .)
    AND             reduce using rule 60 (elemento -> int .)
    OR              reduce using rule 60 (elemento -> int .)
    IF              reduce using rule 60 (elemento -> int .)
    PRINT           reduce using rule 60 (elemento -> int .)
    READ            reduce using rule 60 (elemento -> int .)
    WHILE           reduce using rule 60 (elemento -> int .)
    FOR             reduce using rule 60 (elemento -> int .)
    VAR             reduce using rule 60 (elemento -> int .)
    IDENTIFIER      reduce using rule 60 (elemento -> int .)
    ENDIF           reduce using rule 60 (elemento -> int .)
    ELSE            reduce using rule 60 (elemento -> int .)
    RPARENTHESES    reduce using rule 60 (elemento -> int .)
    COMMA           reduce using rule 60 (elemento -> int .)
    ENDBLOQUE       reduce using rule 60 (elemento -> int .)
    ELSEIF          reduce using rule 60 (elemento -> int .)
    ENDFOR          reduce using rule 60 (elemento -> int .)
    ENDWHILE        reduce using rule 60 (elemento -> int .)


state 59

    (64) elemento -> llamarfun .

    MULTI           reduce using rule 64 (elemento -> llamarfun .)
    DIVIDE          reduce using rule 64 (elemento -> llamarfun .)
    LTHAN           reduce using rule 64 (elemento -> llamarfun .)
    GTHAN           reduce using rule 64 (elemento -> llamarfun .)
    EQUALTO         reduce using rule 64 (elemento -> llamarfun .)
    GTHANEQ         reduce using rule 64 (elemento -> llamarfun .)
    LTHANEQ         reduce using rule 64 (elemento -> llamarfun .)
    NOTEQUAL        reduce using rule 64 (elemento -> llamarfun .)
    PLUS            reduce using rule 64 (elemento -> llamarfun .)
    MINUS           reduce using rule 64 (elemento -> llamarfun .)
    AND             reduce using rule 64 (elemento -> llamarfun .)
    OR              reduce using rule 64 (elemento -> llamarfun .)
    IF              reduce using rule 64 (elemento -> llamarfun .)
    PRINT           reduce using rule 64 (elemento -> llamarfun .)
    READ            reduce using rule 64 (elemento -> llamarfun .)
    WHILE           reduce using rule 64 (elemento -> llamarfun .)
    FOR             reduce using rule 64 (elemento -> llamarfun .)
    VAR             reduce using rule 64 (elemento -> llamarfun .)
    IDENTIFIER      reduce using rule 64 (elemento -> llamarfun .)
    ENDIF           reduce using rule 64 (elemento -> llamarfun .)
    ELSE            reduce using rule 64 (elemento -> llamarfun .)
    RPARENTHESES    reduce using rule 64 (elemento -> llamarfun .)
    COMMA           reduce using rule 64 (elemento -> llamarfun .)
    ENDBLOQUE       reduce using rule 64 (elemento -> llamarfun .)
    ELSEIF          reduce using rule 64 (elemento -> llamarfun .)
    ENDFOR          reduce using rule 64 (elemento -> llamarfun .)
    ENDWHILE        reduce using rule 64 (elemento -> llamarfun .)


state 60

    (84) string -> STRING .

    MULTI           reduce using rule 84 (string -> STRING .)
    DIVIDE          reduce using rule 84 (string -> STRING .)
    LTHAN           reduce using rule 84 (string -> STRING .)
    GTHAN           reduce using rule 84 (string -> STRING .)
    EQUALTO         reduce using rule 84 (string -> STRING .)
    GTHANEQ         reduce using rule 84 (string -> STRING .)
    LTHANEQ         reduce using rule 84 (string -> STRING .)
    NOTEQUAL        reduce using rule 84 (string -> STRING .)
    PLUS            reduce using rule 84 (string -> STRING .)
    MINUS           reduce using rule 84 (string -> STRING .)
    AND             reduce using rule 84 (string -> STRING .)
    OR              reduce using rule 84 (string -> STRING .)
    IF              reduce using rule 84 (string -> STRING .)
    PRINT           reduce using rule 84 (string -> STRING .)
    READ            reduce using rule 84 (string -> STRING .)
    WHILE           reduce using rule 84 (string -> STRING .)
    FOR             reduce using rule 84 (string -> STRING .)
    VAR             reduce using rule 84 (string -> STRING .)
    IDENTIFIER      reduce using rule 84 (string -> STRING .)
    ENDWHILE        reduce using rule 84 (string -> STRING .)
    COMMA           reduce using rule 84 (string -> STRING .)
    ENDBLOQUE       reduce using rule 84 (string -> STRING .)
    ELSE            reduce using rule 84 (string -> STRING .)
    ENDIF           reduce using rule 84 (string -> STRING .)
    ELSEIF          reduce using rule 84 (string -> STRING .)
    ENDFOR          reduce using rule 84 (string -> STRING .)
    RPARENTHESES    reduce using rule 84 (string -> STRING .)


state 61

    (34) condicion -> IF expresion . estatuto_list elseif ENDIF
    (35) condicion -> IF expresion . estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> IF expresion . estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> IF expresion . estatuto_list ENDIF
    (42) expresion -> expresion . and_or termino
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (57) and_or -> . AND
    (58) and_or -> . OR
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (79) empty -> .
    (29) asignacion -> . identifier EQUAL expresion
    (34) condicion -> . IF expresion estatuto_list elseif ENDIF
    (35) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ENDIF
    (30) escritura -> . PRINT escritura_vars
    (33) lectura -> . READ identifier
    (39) while -> . WHILE expresion estatuto_list ENDWHILE
    (40) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (80) identifier -> . IDENTIFIER

    AND             shift and go to state 89
    OR              shift and go to state 88
    ELSE            reduce using rule 79 (empty -> .)
    ENDIF           reduce using rule 79 (empty -> .)
    ELSEIF          reduce using rule 79 (empty -> .)
    IF              shift and go to state 23
    PRINT           shift and go to state 20
    READ            shift and go to state 18
    WHILE           shift and go to state 29
    FOR             shift and go to state 24
    VAR             shift and go to state 28
    IDENTIFIER      shift and go to state 19

    while                          shift and go to state 15
    estatuto_list                  shift and go to state 95
    identifier                     shift and go to state 26
    asignacion                     shift and go to state 27
    lectura                        shift and go to state 16
    for                            shift and go to state 17
    condicion                      shift and go to state 21
    vars                           shift and go to state 30
    escritura                      shift and go to state 22
    and_or                         shift and go to state 87
    empty                          shift and go to state 31
    estatuto                       shift and go to state 32

state 62

    (40) for -> FOR expresion . estatuto_list ENDFOR
    (42) expresion -> expresion . and_or termino
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (57) and_or -> . AND
    (58) and_or -> . OR
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (79) empty -> .
    (29) asignacion -> . identifier EQUAL expresion
    (34) condicion -> . IF expresion estatuto_list elseif ENDIF
    (35) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ENDIF
    (30) escritura -> . PRINT escritura_vars
    (33) lectura -> . READ identifier
    (39) while -> . WHILE expresion estatuto_list ENDWHILE
    (40) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (80) identifier -> . IDENTIFIER

    AND             shift and go to state 89
    OR              shift and go to state 88
    ENDFOR          reduce using rule 79 (empty -> .)
    IF              shift and go to state 23
    PRINT           shift and go to state 20
    READ            shift and go to state 18
    WHILE           shift and go to state 29
    FOR             shift and go to state 24
    VAR             shift and go to state 28
    IDENTIFIER      shift and go to state 19

    vars                           shift and go to state 30
    while                          shift and go to state 15
    estatuto_list                  shift and go to state 96
    identifier                     shift and go to state 26
    asignacion                     shift and go to state 27
    lectura                        shift and go to state 16
    for                            shift and go to state 17
    condicion                      shift and go to state 21
    escritura                      shift and go to state 22
    estatuto                       shift and go to state 32
    empty                          shift and go to state 31
    and_or                         shift and go to state 87

state 63

    (18) bloque -> BLOQUE estatuto_list ENDBLOQUE .

    RETURN          reduce using rule 18 (bloque -> BLOQUE estatuto_list ENDBLOQUE .)
    ENDPROGRAM      reduce using rule 18 (bloque -> BLOQUE estatuto_list ENDBLOQUE .)
    METHOD          reduce using rule 18 (bloque -> BLOQUE estatuto_list ENDBLOQUE .)
    ENDMETHOD       reduce using rule 18 (bloque -> BLOQUE estatuto_list ENDBLOQUE .)


state 64

    (29) asignacion -> identifier EQUAL . expresion
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 97
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    llamarfun                      shift and go to state 59

state 65

    (8) vars -> VAR vars_list . ENDVAR

    ENDVAR          shift and go to state 98


state 66

    (39) while -> WHILE expresion . estatuto_list ENDWHILE
    (42) expresion -> expresion . and_or termino
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (57) and_or -> . AND
    (58) and_or -> . OR
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (79) empty -> .
    (29) asignacion -> . identifier EQUAL expresion
    (34) condicion -> . IF expresion estatuto_list elseif ENDIF
    (35) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ENDIF
    (30) escritura -> . PRINT escritura_vars
    (33) lectura -> . READ identifier
    (39) while -> . WHILE expresion estatuto_list ENDWHILE
    (40) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (80) identifier -> . IDENTIFIER

    AND             shift and go to state 89
    OR              shift and go to state 88
    ENDWHILE        reduce using rule 79 (empty -> .)
    IF              shift and go to state 23
    PRINT           shift and go to state 20
    READ            shift and go to state 18
    WHILE           shift and go to state 29
    FOR             shift and go to state 24
    VAR             shift and go to state 28
    IDENTIFIER      shift and go to state 19

    vars                           shift and go to state 30
    while                          shift and go to state 15
    estatuto_list                  shift and go to state 99
    identifier                     shift and go to state 26
    asignacion                     shift and go to state 27
    lectura                        shift and go to state 16
    for                            shift and go to state 17
    condicion                      shift and go to state 21
    escritura                      shift and go to state 22
    estatuto                       shift and go to state 32
    empty                          shift and go to state 31
    and_or                         shift and go to state 87

state 67

    (19) estatuto_list -> estatuto estatuto_list .

    ENDIF           reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ELSE            reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ENDFOR          reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ENDBLOQUE       reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ELSEIF          reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)
    ENDWHILE        reduce using rule 19 (estatuto_list -> estatuto estatuto_list .)


state 68

    (5) funciones -> func funciones .

    ENDPROGRAM      reduce using rule 5 (funciones -> func funciones .)


state 69

    (2) programa -> PROGRAM bloque funciones ENDPROGRAM .

    $end            reduce using rule 2 (programa -> PROGRAM bloque funciones ENDPROGRAM .)


state 70

    (67) prochead -> METHOD VOID . identifier parameter_list
    (68) prochead -> METHOD VOID . identifier
    (17) tipo -> VOID .
    (80) identifier -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 19

  ! IDENTIFIER      [ reduce using rule 17 (tipo -> VOID .) ]

    identifier                     shift and go to state 100

state 71

    (69) funchead -> METHOD tipo . identifier parameter_list
    (70) funchead -> METHOD tipo . identifier
    (80) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 19

    identifier                     shift and go to state 101

state 72

    (66) voidfunc -> prochead bloque . ENDMETHOD

    ENDMETHOD       shift and go to state 102


state 73

    (65) func -> funchead bloque . RETURN identifier ENDMETHOD

    RETURN          shift and go to state 103


state 74

    (6) funciones -> voidfunc funciones .

    ENDPROGRAM      reduce using rule 6 (funciones -> voidfunc funciones .)


state 75

    (3) programa -> PROGRAM global bloque funciones . ENDPROGRAM

    ENDPROGRAM      shift and go to state 104


state 76

    (4) programa -> PROGRAM global bloque ENDPROGRAM .

    $end            reduce using rule 4 (programa -> PROGRAM global bloque ENDPROGRAM .)


state 77

    (52) sign -> NOTEQUAL .

    LPARENTHESES    reduce using rule 52 (sign -> NOTEQUAL .)
    IDENTIFIER      reduce using rule 52 (sign -> NOTEQUAL .)
    INT             reduce using rule 52 (sign -> NOTEQUAL .)
    FLOAT           reduce using rule 52 (sign -> NOTEQUAL .)
    STRING          reduce using rule 52 (sign -> NOTEQUAL .)
    CALLMETHOD      reduce using rule 52 (sign -> NOTEQUAL .)


state 78

    (49) sign -> EQUALTO .

    LPARENTHESES    reduce using rule 49 (sign -> EQUALTO .)
    IDENTIFIER      reduce using rule 49 (sign -> EQUALTO .)
    INT             reduce using rule 49 (sign -> EQUALTO .)
    FLOAT           reduce using rule 49 (sign -> EQUALTO .)
    STRING          reduce using rule 49 (sign -> EQUALTO .)
    CALLMETHOD      reduce using rule 49 (sign -> EQUALTO .)


state 79

    (48) sign -> GTHAN .

    LPARENTHESES    reduce using rule 48 (sign -> GTHAN .)
    IDENTIFIER      reduce using rule 48 (sign -> GTHAN .)
    INT             reduce using rule 48 (sign -> GTHAN .)
    FLOAT           reduce using rule 48 (sign -> GTHAN .)
    STRING          reduce using rule 48 (sign -> GTHAN .)
    CALLMETHOD      reduce using rule 48 (sign -> GTHAN .)


state 80

    (47) sign -> LTHAN .

    LPARENTHESES    reduce using rule 47 (sign -> LTHAN .)
    IDENTIFIER      reduce using rule 47 (sign -> LTHAN .)
    INT             reduce using rule 47 (sign -> LTHAN .)
    FLOAT           reduce using rule 47 (sign -> LTHAN .)
    STRING          reduce using rule 47 (sign -> LTHAN .)
    CALLMETHOD      reduce using rule 47 (sign -> LTHAN .)


state 81

    (51) sign -> LTHANEQ .

    LPARENTHESES    reduce using rule 51 (sign -> LTHANEQ .)
    IDENTIFIER      reduce using rule 51 (sign -> LTHANEQ .)
    INT             reduce using rule 51 (sign -> LTHANEQ .)
    FLOAT           reduce using rule 51 (sign -> LTHANEQ .)
    STRING          reduce using rule 51 (sign -> LTHANEQ .)
    CALLMETHOD      reduce using rule 51 (sign -> LTHANEQ .)


state 82

    (50) sign -> GTHANEQ .

    LPARENTHESES    reduce using rule 50 (sign -> GTHANEQ .)
    IDENTIFIER      reduce using rule 50 (sign -> GTHANEQ .)
    INT             reduce using rule 50 (sign -> GTHANEQ .)
    FLOAT           reduce using rule 50 (sign -> GTHANEQ .)
    STRING          reduce using rule 50 (sign -> GTHANEQ .)
    CALLMETHOD      reduce using rule 50 (sign -> GTHANEQ .)


state 83

    (44) termino -> termino sign . factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    string                         shift and go to state 55
    factor                         shift and go to state 105
    int                            shift and go to state 58
    llamarfun                      shift and go to state 59

state 84

    (53) sign -> PLUS .

    LPARENTHESES    reduce using rule 53 (sign -> PLUS .)
    IDENTIFIER      reduce using rule 53 (sign -> PLUS .)
    INT             reduce using rule 53 (sign -> PLUS .)
    FLOAT           reduce using rule 53 (sign -> PLUS .)
    STRING          reduce using rule 53 (sign -> PLUS .)
    CALLMETHOD      reduce using rule 53 (sign -> PLUS .)


state 85

    (54) sign -> MINUS .

    LPARENTHESES    reduce using rule 54 (sign -> MINUS .)
    IDENTIFIER      reduce using rule 54 (sign -> MINUS .)
    INT             reduce using rule 54 (sign -> MINUS .)
    FLOAT           reduce using rule 54 (sign -> MINUS .)
    STRING          reduce using rule 54 (sign -> MINUS .)
    CALLMETHOD      reduce using rule 54 (sign -> MINUS .)


state 86

    (63) elemento -> LPARENTHESES expresion . RPARENTHESES
    (42) expresion -> expresion . and_or termino
    (57) and_or -> . AND
    (58) and_or -> . OR

    RPARENTHESES    shift and go to state 106
    AND             shift and go to state 89
    OR              shift and go to state 88

    and_or                         shift and go to state 87

state 87

    (42) expresion -> expresion and_or . termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    termino                        shift and go to state 107
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    llamarfun                      shift and go to state 59

state 88

    (58) and_or -> OR .

    LPARENTHESES    reduce using rule 58 (and_or -> OR .)
    IDENTIFIER      reduce using rule 58 (and_or -> OR .)
    INT             reduce using rule 58 (and_or -> OR .)
    FLOAT           reduce using rule 58 (and_or -> OR .)
    STRING          reduce using rule 58 (and_or -> OR .)
    CALLMETHOD      reduce using rule 58 (and_or -> OR .)


state 89

    (57) and_or -> AND .

    LPARENTHESES    reduce using rule 57 (and_or -> AND .)
    IDENTIFIER      reduce using rule 57 (and_or -> AND .)
    INT             reduce using rule 57 (and_or -> AND .)
    FLOAT           reduce using rule 57 (and_or -> AND .)
    STRING          reduce using rule 57 (and_or -> AND .)
    CALLMETHOD      reduce using rule 57 (and_or -> AND .)


state 90

    (31) escritura_vars -> expresion COMMA . escritura_vars
    (31) escritura_vars -> . expresion COMMA escritura_vars
    (32) escritura_vars -> . expresion
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 54
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    escritura_vars                 shift and go to state 108
    llamarfun                      shift and go to state 59

state 91

    (55) psign -> MULTI .

    LPARENTHESES    reduce using rule 55 (psign -> MULTI .)
    IDENTIFIER      reduce using rule 55 (psign -> MULTI .)
    INT             reduce using rule 55 (psign -> MULTI .)
    FLOAT           reduce using rule 55 (psign -> MULTI .)
    STRING          reduce using rule 55 (psign -> MULTI .)
    CALLMETHOD      reduce using rule 55 (psign -> MULTI .)


state 92

    (46) factor -> factor psign . elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    int                            shift and go to state 58
    float                          shift and go to state 51
    llamarfun                      shift and go to state 59
    identifier                     shift and go to state 53
    elemento                       shift and go to state 109
    string                         shift and go to state 55

state 93

    (56) psign -> DIVIDE .

    LPARENTHESES    reduce using rule 56 (psign -> DIVIDE .)
    IDENTIFIER      reduce using rule 56 (psign -> DIVIDE .)
    INT             reduce using rule 56 (psign -> DIVIDE .)
    FLOAT           reduce using rule 56 (psign -> DIVIDE .)
    STRING          reduce using rule 56 (psign -> DIVIDE .)
    CALLMETHOD      reduce using rule 56 (psign -> DIVIDE .)


state 94

    (75) llamarfun -> CALLMETHOD identifier . funparams
    (76) llamarfun -> CALLMETHOD identifier .
    (77) funparams -> . expresion
    (78) funparams -> . expresion COMMA funparams
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    MULTI           reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    DIVIDE          reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    LTHAN           reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    GTHAN           reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    EQUALTO         reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    GTHANEQ         reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    LTHANEQ         reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    NOTEQUAL        reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    PLUS            reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    MINUS           reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    COMMA           reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    AND             reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    OR              reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    IF              reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    PRINT           reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    READ            reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    WHILE           reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    FOR             reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    VAR             reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    ENDBLOQUE       reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    ELSE            reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    ENDIF           reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    ELSEIF          reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    ENDFOR          reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    ENDWHILE        reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    RPARENTHESES    reduce using rule 76 (llamarfun -> CALLMETHOD identifier .)
    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

  ! IDENTIFIER      [ reduce using rule 76 (llamarfun -> CALLMETHOD identifier .) ]

    float                          shift and go to state 51
    llamarfun                      shift and go to state 59
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 110
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    funparams                      shift and go to state 111

state 95

    (34) condicion -> IF expresion estatuto_list . elseif ENDIF
    (35) condicion -> IF expresion estatuto_list . elseif ELSE estatuto_list ENDIF
    (36) condicion -> IF expresion estatuto_list . ELSE estatuto_list ENDIF
    (37) condicion -> IF expresion estatuto_list . ENDIF
    (38) elseif -> . ELSEIF expresion estatuto_list

    ELSE            shift and go to state 114
    ENDIF           shift and go to state 113
    ELSEIF          shift and go to state 115

    elseif                         shift and go to state 112

state 96

    (40) for -> FOR expresion estatuto_list . ENDFOR

    ENDFOR          shift and go to state 116


state 97

    (29) asignacion -> identifier EQUAL expresion .
    (42) expresion -> expresion . and_or termino
    (57) and_or -> . AND
    (58) and_or -> . OR

    IF              reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    PRINT           reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    READ            reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    WHILE           reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    FOR             reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    VAR             reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    IDENTIFIER      reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    ENDIF           reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    ENDBLOQUE       reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    ELSE            reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    ELSEIF          reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    ENDFOR          reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    ENDWHILE        reduce using rule 29 (asignacion -> identifier EQUAL expresion .)
    AND             shift and go to state 89
    OR              shift and go to state 88

    and_or                         shift and go to state 87

state 98

    (8) vars -> VAR vars_list ENDVAR .

    IF              reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    PRINT           reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    READ            reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    WHILE           reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    FOR             reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    VAR             reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    IDENTIFIER      reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ENDIF           reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ELSE            reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ELSEIF          reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ENDBLOQUE       reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ENDFOR          reduce using rule 8 (vars -> VAR vars_list ENDVAR .)
    ENDWHILE        reduce using rule 8 (vars -> VAR vars_list ENDVAR .)


state 99

    (39) while -> WHILE expresion estatuto_list . ENDWHILE

    ENDWHILE        shift and go to state 117


state 100

    (67) prochead -> METHOD VOID identifier . parameter_list
    (68) prochead -> METHOD VOID identifier .
    (71) parameter_list -> . parameter
    (72) parameter_list -> . parameter COMMA parameter_list
    (73) parameter -> . tipo identifier
    (74) parameter -> . tipo referencia
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    BLOQUE          reduce using rule 68 (prochead -> METHOD VOID identifier .)
    TINT            shift and go to state 9
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 10
    VOID            shift and go to state 14

    parameter_list                 shift and go to state 118
    tipo                           shift and go to state 120
    parameter                      shift and go to state 119

state 101

    (69) funchead -> METHOD tipo identifier . parameter_list
    (70) funchead -> METHOD tipo identifier .
    (71) parameter_list -> . parameter
    (72) parameter_list -> . parameter COMMA parameter_list
    (73) parameter -> . tipo identifier
    (74) parameter -> . tipo referencia
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    BLOQUE          reduce using rule 70 (funchead -> METHOD tipo identifier .)
    TINT            shift and go to state 9
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 10
    VOID            shift and go to state 14

    parameter_list                 shift and go to state 121
    tipo                           shift and go to state 120
    parameter                      shift and go to state 119

state 102

    (66) voidfunc -> prochead bloque ENDMETHOD .

    METHOD          reduce using rule 66 (voidfunc -> prochead bloque ENDMETHOD .)
    ENDPROGRAM      reduce using rule 66 (voidfunc -> prochead bloque ENDMETHOD .)


state 103

    (65) func -> funchead bloque RETURN . identifier ENDMETHOD
    (80) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 19

    identifier                     shift and go to state 122

state 104

    (3) programa -> PROGRAM global bloque funciones ENDPROGRAM .

    $end            reduce using rule 3 (programa -> PROGRAM global bloque funciones ENDPROGRAM .)


state 105

    (44) termino -> termino sign factor .
    (46) factor -> factor . psign elemento
    (55) psign -> . MULTI
    (56) psign -> . DIVIDE

  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LTHAN           reduce using rule 44 (termino -> termino sign factor .)
    GTHAN           reduce using rule 44 (termino -> termino sign factor .)
    EQUALTO         reduce using rule 44 (termino -> termino sign factor .)
    GTHANEQ         reduce using rule 44 (termino -> termino sign factor .)
    LTHANEQ         reduce using rule 44 (termino -> termino sign factor .)
    NOTEQUAL        reduce using rule 44 (termino -> termino sign factor .)
    PLUS            reduce using rule 44 (termino -> termino sign factor .)
    MINUS           reduce using rule 44 (termino -> termino sign factor .)
    COMMA           reduce using rule 44 (termino -> termino sign factor .)
    AND             reduce using rule 44 (termino -> termino sign factor .)
    OR              reduce using rule 44 (termino -> termino sign factor .)
    IF              reduce using rule 44 (termino -> termino sign factor .)
    PRINT           reduce using rule 44 (termino -> termino sign factor .)
    READ            reduce using rule 44 (termino -> termino sign factor .)
    WHILE           reduce using rule 44 (termino -> termino sign factor .)
    FOR             reduce using rule 44 (termino -> termino sign factor .)
    VAR             reduce using rule 44 (termino -> termino sign factor .)
    IDENTIFIER      reduce using rule 44 (termino -> termino sign factor .)
    ENDBLOQUE       reduce using rule 44 (termino -> termino sign factor .)
    ELSE            reduce using rule 44 (termino -> termino sign factor .)
    ENDIF           reduce using rule 44 (termino -> termino sign factor .)
    ELSEIF          reduce using rule 44 (termino -> termino sign factor .)
    ENDFOR          reduce using rule 44 (termino -> termino sign factor .)
    ENDWHILE        reduce using rule 44 (termino -> termino sign factor .)
    RPARENTHESES    reduce using rule 44 (termino -> termino sign factor .)
    MULTI           shift and go to state 91
    DIVIDE          shift and go to state 93

  ! MULTI           [ reduce using rule 44 (termino -> termino sign factor .) ]
  ! DIVIDE          [ reduce using rule 44 (termino -> termino sign factor .) ]

    psign                          shift and go to state 92

state 106

    (63) elemento -> LPARENTHESES expresion RPARENTHESES .

    MULTI           reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    DIVIDE          reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    LTHAN           reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    GTHAN           reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    EQUALTO         reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    GTHANEQ         reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    LTHANEQ         reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    NOTEQUAL        reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    PLUS            reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    MINUS           reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    AND             reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    OR              reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    IF              reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    PRINT           reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    READ            reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    WHILE           reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    FOR             reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    VAR             reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    IDENTIFIER      reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ENDIF           reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ELSE            reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    RPARENTHESES    reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    COMMA           reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ENDBLOQUE       reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ELSEIF          reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ENDFOR          reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)
    ENDWHILE        reduce using rule 63 (elemento -> LPARENTHESES expresion RPARENTHESES .)


state 107

    (42) expresion -> expresion and_or termino .
    (44) termino -> termino . sign factor
    (47) sign -> . LTHAN
    (48) sign -> . GTHAN
    (49) sign -> . EQUALTO
    (50) sign -> . GTHANEQ
    (51) sign -> . LTHANEQ
    (52) sign -> . NOTEQUAL
    (53) sign -> . PLUS
    (54) sign -> . MINUS

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for EQUALTO resolved as shift
  ! shift/reduce conflict for GTHANEQ resolved as shift
  ! shift/reduce conflict for LTHANEQ resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 42 (expresion -> expresion and_or termino .)
    AND             reduce using rule 42 (expresion -> expresion and_or termino .)
    OR              reduce using rule 42 (expresion -> expresion and_or termino .)
    IF              reduce using rule 42 (expresion -> expresion and_or termino .)
    PRINT           reduce using rule 42 (expresion -> expresion and_or termino .)
    READ            reduce using rule 42 (expresion -> expresion and_or termino .)
    WHILE           reduce using rule 42 (expresion -> expresion and_or termino .)
    FOR             reduce using rule 42 (expresion -> expresion and_or termino .)
    VAR             reduce using rule 42 (expresion -> expresion and_or termino .)
    IDENTIFIER      reduce using rule 42 (expresion -> expresion and_or termino .)
    ENDBLOQUE       reduce using rule 42 (expresion -> expresion and_or termino .)
    ELSE            reduce using rule 42 (expresion -> expresion and_or termino .)
    ENDIF           reduce using rule 42 (expresion -> expresion and_or termino .)
    ELSEIF          reduce using rule 42 (expresion -> expresion and_or termino .)
    ENDFOR          reduce using rule 42 (expresion -> expresion and_or termino .)
    ENDWHILE        reduce using rule 42 (expresion -> expresion and_or termino .)
    MULTI           reduce using rule 42 (expresion -> expresion and_or termino .)
    DIVIDE          reduce using rule 42 (expresion -> expresion and_or termino .)
    RPARENTHESES    reduce using rule 42 (expresion -> expresion and_or termino .)
    LTHAN           shift and go to state 80
    GTHAN           shift and go to state 79
    EQUALTO         shift and go to state 78
    GTHANEQ         shift and go to state 82
    LTHANEQ         shift and go to state 81
    NOTEQUAL        shift and go to state 77
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85

  ! LTHAN           [ reduce using rule 42 (expresion -> expresion and_or termino .) ]
  ! GTHAN           [ reduce using rule 42 (expresion -> expresion and_or termino .) ]
  ! EQUALTO         [ reduce using rule 42 (expresion -> expresion and_or termino .) ]
  ! GTHANEQ         [ reduce using rule 42 (expresion -> expresion and_or termino .) ]
  ! LTHANEQ         [ reduce using rule 42 (expresion -> expresion and_or termino .) ]
  ! NOTEQUAL        [ reduce using rule 42 (expresion -> expresion and_or termino .) ]
  ! PLUS            [ reduce using rule 42 (expresion -> expresion and_or termino .) ]
  ! MINUS           [ reduce using rule 42 (expresion -> expresion and_or termino .) ]

    sign                           shift and go to state 83

state 108

    (31) escritura_vars -> expresion COMMA escritura_vars .

    IF              reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    PRINT           reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    READ            reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    WHILE           reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    FOR             reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    VAR             reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    IDENTIFIER      reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    ENDBLOQUE       reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    ELSE            reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    ENDIF           reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    ELSEIF          reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    ENDFOR          reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)
    ENDWHILE        reduce using rule 31 (escritura_vars -> expresion COMMA escritura_vars .)


state 109

    (46) factor -> factor psign elemento .

    MULTI           reduce using rule 46 (factor -> factor psign elemento .)
    DIVIDE          reduce using rule 46 (factor -> factor psign elemento .)
    LTHAN           reduce using rule 46 (factor -> factor psign elemento .)
    GTHAN           reduce using rule 46 (factor -> factor psign elemento .)
    EQUALTO         reduce using rule 46 (factor -> factor psign elemento .)
    GTHANEQ         reduce using rule 46 (factor -> factor psign elemento .)
    LTHANEQ         reduce using rule 46 (factor -> factor psign elemento .)
    NOTEQUAL        reduce using rule 46 (factor -> factor psign elemento .)
    PLUS            reduce using rule 46 (factor -> factor psign elemento .)
    MINUS           reduce using rule 46 (factor -> factor psign elemento .)
    AND             reduce using rule 46 (factor -> factor psign elemento .)
    OR              reduce using rule 46 (factor -> factor psign elemento .)
    IF              reduce using rule 46 (factor -> factor psign elemento .)
    PRINT           reduce using rule 46 (factor -> factor psign elemento .)
    READ            reduce using rule 46 (factor -> factor psign elemento .)
    WHILE           reduce using rule 46 (factor -> factor psign elemento .)
    FOR             reduce using rule 46 (factor -> factor psign elemento .)
    VAR             reduce using rule 46 (factor -> factor psign elemento .)
    IDENTIFIER      reduce using rule 46 (factor -> factor psign elemento .)
    ENDIF           reduce using rule 46 (factor -> factor psign elemento .)
    ELSE            reduce using rule 46 (factor -> factor psign elemento .)
    ENDWHILE        reduce using rule 46 (factor -> factor psign elemento .)
    COMMA           reduce using rule 46 (factor -> factor psign elemento .)
    ENDBLOQUE       reduce using rule 46 (factor -> factor psign elemento .)
    ELSEIF          reduce using rule 46 (factor -> factor psign elemento .)
    ENDFOR          reduce using rule 46 (factor -> factor psign elemento .)
    RPARENTHESES    reduce using rule 46 (factor -> factor psign elemento .)


state 110

    (77) funparams -> expresion .
    (78) funparams -> expresion . COMMA funparams
    (42) expresion -> expresion . and_or termino
    (57) and_or -> . AND
    (58) and_or -> . OR

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MULTI           reduce using rule 77 (funparams -> expresion .)
    DIVIDE          reduce using rule 77 (funparams -> expresion .)
    LTHAN           reduce using rule 77 (funparams -> expresion .)
    GTHAN           reduce using rule 77 (funparams -> expresion .)
    EQUALTO         reduce using rule 77 (funparams -> expresion .)
    GTHANEQ         reduce using rule 77 (funparams -> expresion .)
    LTHANEQ         reduce using rule 77 (funparams -> expresion .)
    NOTEQUAL        reduce using rule 77 (funparams -> expresion .)
    PLUS            reduce using rule 77 (funparams -> expresion .)
    MINUS           reduce using rule 77 (funparams -> expresion .)
    IF              reduce using rule 77 (funparams -> expresion .)
    PRINT           reduce using rule 77 (funparams -> expresion .)
    READ            reduce using rule 77 (funparams -> expresion .)
    WHILE           reduce using rule 77 (funparams -> expresion .)
    FOR             reduce using rule 77 (funparams -> expresion .)
    VAR             reduce using rule 77 (funparams -> expresion .)
    IDENTIFIER      reduce using rule 77 (funparams -> expresion .)
    ENDBLOQUE       reduce using rule 77 (funparams -> expresion .)
    ELSE            reduce using rule 77 (funparams -> expresion .)
    ENDIF           reduce using rule 77 (funparams -> expresion .)
    ELSEIF          reduce using rule 77 (funparams -> expresion .)
    ENDFOR          reduce using rule 77 (funparams -> expresion .)
    ENDWHILE        reduce using rule 77 (funparams -> expresion .)
    RPARENTHESES    reduce using rule 77 (funparams -> expresion .)
    COMMA           shift and go to state 123
    AND             shift and go to state 89
    OR              shift and go to state 88

  ! COMMA           [ reduce using rule 77 (funparams -> expresion .) ]
  ! AND             [ reduce using rule 77 (funparams -> expresion .) ]
  ! OR              [ reduce using rule 77 (funparams -> expresion .) ]

    and_or                         shift and go to state 87

state 111

    (75) llamarfun -> CALLMETHOD identifier funparams .

    MULTI           reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    DIVIDE          reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    LTHAN           reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    GTHAN           reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    EQUALTO         reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    GTHANEQ         reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    LTHANEQ         reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    NOTEQUAL        reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    PLUS            reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    MINUS           reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    COMMA           reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    AND             reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    OR              reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    IF              reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    PRINT           reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    READ            reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    WHILE           reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    FOR             reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    VAR             reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    IDENTIFIER      reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    ENDBLOQUE       reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    ELSE            reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    ENDIF           reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    ELSEIF          reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    ENDFOR          reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    ENDWHILE        reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)
    RPARENTHESES    reduce using rule 75 (llamarfun -> CALLMETHOD identifier funparams .)


state 112

    (34) condicion -> IF expresion estatuto_list elseif . ENDIF
    (35) condicion -> IF expresion estatuto_list elseif . ELSE estatuto_list ENDIF

    ENDIF           shift and go to state 124
    ELSE            shift and go to state 125


state 113

    (37) condicion -> IF expresion estatuto_list ENDIF .

    IF              reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    PRINT           reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    READ            reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    WHILE           reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    FOR             reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    VAR             reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    IDENTIFIER      reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    ENDFOR          reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    ENDIF           reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    ELSE            reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    ELSEIF          reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    ENDBLOQUE       reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)
    ENDWHILE        reduce using rule 37 (condicion -> IF expresion estatuto_list ENDIF .)


state 114

    (36) condicion -> IF expresion estatuto_list ELSE . estatuto_list ENDIF
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (79) empty -> .
    (29) asignacion -> . identifier EQUAL expresion
    (34) condicion -> . IF expresion estatuto_list elseif ENDIF
    (35) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ENDIF
    (30) escritura -> . PRINT escritura_vars
    (33) lectura -> . READ identifier
    (39) while -> . WHILE expresion estatuto_list ENDWHILE
    (40) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (80) identifier -> . IDENTIFIER

    ENDIF           reduce using rule 79 (empty -> .)
    IF              shift and go to state 23
    PRINT           shift and go to state 20
    READ            shift and go to state 18
    WHILE           shift and go to state 29
    FOR             shift and go to state 24
    VAR             shift and go to state 28
    IDENTIFIER      shift and go to state 19

    while                          shift and go to state 15
    estatuto_list                  shift and go to state 126
    identifier                     shift and go to state 26
    asignacion                     shift and go to state 27
    lectura                        shift and go to state 16
    for                            shift and go to state 17
    condicion                      shift and go to state 21
    escritura                      shift and go to state 22
    estatuto                       shift and go to state 32
    empty                          shift and go to state 31
    vars                           shift and go to state 30

state 115

    (38) elseif -> ELSEIF . expresion estatuto_list
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 127
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    llamarfun                      shift and go to state 59

state 116

    (40) for -> FOR expresion estatuto_list ENDFOR .

    IF              reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    PRINT           reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    READ            reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    WHILE           reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    FOR             reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    VAR             reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    IDENTIFIER      reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    ENDFOR          reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    ENDIF           reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    ELSE            reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    ELSEIF          reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    ENDBLOQUE       reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)
    ENDWHILE        reduce using rule 40 (for -> FOR expresion estatuto_list ENDFOR .)


state 117

    (39) while -> WHILE expresion estatuto_list ENDWHILE .

    IF              reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    PRINT           reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    READ            reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    WHILE           reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    FOR             reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    VAR             reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    IDENTIFIER      reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ENDBLOQUE       reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ENDFOR          reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ENDIF           reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ELSE            reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ELSEIF          reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)
    ENDWHILE        reduce using rule 39 (while -> WHILE expresion estatuto_list ENDWHILE .)


state 118

    (67) prochead -> METHOD VOID identifier parameter_list .

    BLOQUE          reduce using rule 67 (prochead -> METHOD VOID identifier parameter_list .)


state 119

    (71) parameter_list -> parameter .
    (72) parameter_list -> parameter . COMMA parameter_list

    BLOQUE          reduce using rule 71 (parameter_list -> parameter .)
    COMMA           shift and go to state 128


state 120

    (73) parameter -> tipo . identifier
    (74) parameter -> tipo . referencia
    (80) identifier -> . IDENTIFIER
    (81) referencia -> . REFERENCIA

    IDENTIFIER      shift and go to state 19
    REFERENCIA      shift and go to state 131

    identifier                     shift and go to state 129
    referencia                     shift and go to state 130

state 121

    (69) funchead -> METHOD tipo identifier parameter_list .

    BLOQUE          reduce using rule 69 (funchead -> METHOD tipo identifier parameter_list .)


state 122

    (65) func -> funchead bloque RETURN identifier . ENDMETHOD

    ENDMETHOD       shift and go to state 132


state 123

    (78) funparams -> expresion COMMA . funparams
    (77) funparams -> . expresion
    (78) funparams -> . expresion COMMA funparams
    (41) expresion -> . termino
    (42) expresion -> . expresion and_or termino
    (43) termino -> . factor
    (44) termino -> . termino sign factor
    (45) factor -> . elemento
    (46) factor -> . factor psign elemento
    (59) elemento -> . identifier
    (60) elemento -> . int
    (61) elemento -> . float
    (62) elemento -> . string
    (63) elemento -> . LPARENTHESES expresion RPARENTHESES
    (64) elemento -> . llamarfun
    (80) identifier -> . IDENTIFIER
    (82) int -> . INT
    (83) float -> . FLOAT
    (84) string -> . STRING
    (75) llamarfun -> . CALLMETHOD identifier funparams
    (76) llamarfun -> . CALLMETHOD identifier

    LPARENTHESES    shift and go to state 49
    IDENTIFIER      shift and go to state 19
    INT             shift and go to state 47
    FLOAT           shift and go to state 52
    STRING          shift and go to state 60
    CALLMETHOD      shift and go to state 57

    float                          shift and go to state 51
    llamarfun                      shift and go to state 59
    identifier                     shift and go to state 53
    elemento                       shift and go to state 46
    expresion                      shift and go to state 110
    termino                        shift and go to state 48
    string                         shift and go to state 55
    factor                         shift and go to state 56
    int                            shift and go to state 58
    funparams                      shift and go to state 133

state 124

    (34) condicion -> IF expresion estatuto_list elseif ENDIF .

    IF              reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    PRINT           reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    READ            reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    WHILE           reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    FOR             reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    VAR             reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    IDENTIFIER      reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ENDFOR          reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ENDIF           reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ELSE            reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ELSEIF          reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ENDBLOQUE       reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)
    ENDWHILE        reduce using rule 34 (condicion -> IF expresion estatuto_list elseif ENDIF .)


state 125

    (35) condicion -> IF expresion estatuto_list elseif ELSE . estatuto_list ENDIF
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (79) empty -> .
    (29) asignacion -> . identifier EQUAL expresion
    (34) condicion -> . IF expresion estatuto_list elseif ENDIF
    (35) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ENDIF
    (30) escritura -> . PRINT escritura_vars
    (33) lectura -> . READ identifier
    (39) while -> . WHILE expresion estatuto_list ENDWHILE
    (40) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (80) identifier -> . IDENTIFIER

    ENDIF           reduce using rule 79 (empty -> .)
    IF              shift and go to state 23
    PRINT           shift and go to state 20
    READ            shift and go to state 18
    WHILE           shift and go to state 29
    FOR             shift and go to state 24
    VAR             shift and go to state 28
    IDENTIFIER      shift and go to state 19

    while                          shift and go to state 15
    estatuto_list                  shift and go to state 134
    identifier                     shift and go to state 26
    asignacion                     shift and go to state 27
    lectura                        shift and go to state 16
    for                            shift and go to state 17
    condicion                      shift and go to state 21
    escritura                      shift and go to state 22
    vars                           shift and go to state 30
    empty                          shift and go to state 31
    estatuto                       shift and go to state 32

state 126

    (36) condicion -> IF expresion estatuto_list ELSE estatuto_list . ENDIF

    ENDIF           shift and go to state 135


state 127

    (38) elseif -> ELSEIF expresion . estatuto_list
    (42) expresion -> expresion . and_or termino
    (19) estatuto_list -> . estatuto estatuto_list
    (20) estatuto_list -> . estatuto
    (21) estatuto_list -> . empty
    (57) and_or -> . AND
    (58) and_or -> . OR
    (22) estatuto -> . asignacion
    (23) estatuto -> . condicion
    (24) estatuto -> . escritura
    (25) estatuto -> . lectura
    (26) estatuto -> . while
    (27) estatuto -> . for
    (28) estatuto -> . vars
    (79) empty -> .
    (29) asignacion -> . identifier EQUAL expresion
    (34) condicion -> . IF expresion estatuto_list elseif ENDIF
    (35) condicion -> . IF expresion estatuto_list elseif ELSE estatuto_list ENDIF
    (36) condicion -> . IF expresion estatuto_list ELSE estatuto_list ENDIF
    (37) condicion -> . IF expresion estatuto_list ENDIF
    (30) escritura -> . PRINT escritura_vars
    (33) lectura -> . READ identifier
    (39) while -> . WHILE expresion estatuto_list ENDWHILE
    (40) for -> . FOR expresion estatuto_list ENDFOR
    (8) vars -> . VAR vars_list ENDVAR
    (80) identifier -> . IDENTIFIER

    AND             shift and go to state 89
    OR              shift and go to state 88
    ENDIF           reduce using rule 79 (empty -> .)
    ELSE            reduce using rule 79 (empty -> .)
    IF              shift and go to state 23
    PRINT           shift and go to state 20
    READ            shift and go to state 18
    WHILE           shift and go to state 29
    FOR             shift and go to state 24
    VAR             shift and go to state 28
    IDENTIFIER      shift and go to state 19

    vars                           shift and go to state 30
    while                          shift and go to state 15
    estatuto_list                  shift and go to state 136
    identifier                     shift and go to state 26
    asignacion                     shift and go to state 27
    lectura                        shift and go to state 16
    for                            shift and go to state 17
    condicion                      shift and go to state 21
    escritura                      shift and go to state 22
    estatuto                       shift and go to state 32
    empty                          shift and go to state 31
    and_or                         shift and go to state 87

state 128

    (72) parameter_list -> parameter COMMA . parameter_list
    (71) parameter_list -> . parameter
    (72) parameter_list -> . parameter COMMA parameter_list
    (73) parameter -> . tipo identifier
    (74) parameter -> . tipo referencia
    (14) tipo -> . TINT
    (15) tipo -> . TFLOAT
    (16) tipo -> . TSTRING
    (17) tipo -> . VOID

    TINT            shift and go to state 9
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 10
    VOID            shift and go to state 14

    parameter_list                 shift and go to state 137
    parameter                      shift and go to state 119
    tipo                           shift and go to state 120

state 129

    (73) parameter -> tipo identifier .

    COMMA           reduce using rule 73 (parameter -> tipo identifier .)
    BLOQUE          reduce using rule 73 (parameter -> tipo identifier .)


state 130

    (74) parameter -> tipo referencia .

    COMMA           reduce using rule 74 (parameter -> tipo referencia .)
    BLOQUE          reduce using rule 74 (parameter -> tipo referencia .)


state 131

    (81) referencia -> REFERENCIA .

    COMMA           reduce using rule 81 (referencia -> REFERENCIA .)
    BLOQUE          reduce using rule 81 (referencia -> REFERENCIA .)


state 132

    (65) func -> funchead bloque RETURN identifier ENDMETHOD .

    METHOD          reduce using rule 65 (func -> funchead bloque RETURN identifier ENDMETHOD .)
    ENDPROGRAM      reduce using rule 65 (func -> funchead bloque RETURN identifier ENDMETHOD .)


state 133

    (78) funparams -> expresion COMMA funparams .

    MULTI           reduce using rule 78 (funparams -> expresion COMMA funparams .)
    DIVIDE          reduce using rule 78 (funparams -> expresion COMMA funparams .)
    LTHAN           reduce using rule 78 (funparams -> expresion COMMA funparams .)
    GTHAN           reduce using rule 78 (funparams -> expresion COMMA funparams .)
    EQUALTO         reduce using rule 78 (funparams -> expresion COMMA funparams .)
    GTHANEQ         reduce using rule 78 (funparams -> expresion COMMA funparams .)
    LTHANEQ         reduce using rule 78 (funparams -> expresion COMMA funparams .)
    NOTEQUAL        reduce using rule 78 (funparams -> expresion COMMA funparams .)
    PLUS            reduce using rule 78 (funparams -> expresion COMMA funparams .)
    MINUS           reduce using rule 78 (funparams -> expresion COMMA funparams .)
    COMMA           reduce using rule 78 (funparams -> expresion COMMA funparams .)
    AND             reduce using rule 78 (funparams -> expresion COMMA funparams .)
    OR              reduce using rule 78 (funparams -> expresion COMMA funparams .)
    IF              reduce using rule 78 (funparams -> expresion COMMA funparams .)
    PRINT           reduce using rule 78 (funparams -> expresion COMMA funparams .)
    READ            reduce using rule 78 (funparams -> expresion COMMA funparams .)
    WHILE           reduce using rule 78 (funparams -> expresion COMMA funparams .)
    FOR             reduce using rule 78 (funparams -> expresion COMMA funparams .)
    VAR             reduce using rule 78 (funparams -> expresion COMMA funparams .)
    IDENTIFIER      reduce using rule 78 (funparams -> expresion COMMA funparams .)
    ENDBLOQUE       reduce using rule 78 (funparams -> expresion COMMA funparams .)
    ELSE            reduce using rule 78 (funparams -> expresion COMMA funparams .)
    ENDIF           reduce using rule 78 (funparams -> expresion COMMA funparams .)
    ELSEIF          reduce using rule 78 (funparams -> expresion COMMA funparams .)
    ENDFOR          reduce using rule 78 (funparams -> expresion COMMA funparams .)
    ENDWHILE        reduce using rule 78 (funparams -> expresion COMMA funparams .)
    RPARENTHESES    reduce using rule 78 (funparams -> expresion COMMA funparams .)


state 134

    (35) condicion -> IF expresion estatuto_list elseif ELSE estatuto_list . ENDIF

    ENDIF           shift and go to state 138


state 135

    (36) condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .

    IF              reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    PRINT           reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    READ            reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    WHILE           reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    FOR             reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    VAR             reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    IDENTIFIER      reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ENDFOR          reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ENDIF           reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ELSE            reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ELSEIF          reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ENDBLOQUE       reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)
    ENDWHILE        reduce using rule 36 (condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF .)


state 136

    (38) elseif -> ELSEIF expresion estatuto_list .

    ENDIF           reduce using rule 38 (elseif -> ELSEIF expresion estatuto_list .)
    ELSE            reduce using rule 38 (elseif -> ELSEIF expresion estatuto_list .)


state 137

    (72) parameter_list -> parameter COMMA parameter_list .

    BLOQUE          reduce using rule 72 (parameter_list -> parameter COMMA parameter_list .)


state 138

    (35) condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .

    IF              reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    PRINT           reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    READ            reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    WHILE           reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    FOR             reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    VAR             reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    IDENTIFIER      reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ENDFOR          reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ENDIF           reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ELSE            reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ELSEIF          reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ENDBLOQUE       reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)
    ENDWHILE        reduce using rule 35 (condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ENDPROGRAM in state 5 resolved as shift
WARNING: shift/reduce conflict for ENDPROGRAM in state 41 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 48 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 48 resolved as shift
WARNING: shift/reduce conflict for EQUALTO in state 48 resolved as shift
WARNING: shift/reduce conflict for GTHANEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for LTHANEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 70 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 94 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 107 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 107 resolved as shift
WARNING: shift/reduce conflict for EQUALTO in state 107 resolved as shift
WARNING: shift/reduce conflict for GTHANEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for LTHANEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 110 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (vars_list -> vars_declaration)
WARNING: rejected rule (empty -> <empty>) in state 11
WARNING: reduce/reduce conflict in state 32 resolved using rule (estatuto_list -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 32
