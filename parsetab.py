
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'CA7BDE6DC4A4D4E7391F6299103BC47B'
    
_lr_action_items = {'IF':([11,31,32,35,39,42,43,45,46,47,49,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,80,81,83,109,112,113,114,115,121,122,123,125,126,128,129,130,131,134,136,137,138,140,142,],[33,-27,33,-29,-24,-22,-82,-26,-25,-23,-28,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,33,-61,-31,-33,33,33,-77,-34,-30,-78,-76,-80,-8,-45,-47,-64,33,-38,-43,-32,-41,-40,33,33,-35,-79,-37,-36,]),'DIVIDE':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,-42,-84,-62,-85,102,-61,-77,-78,-76,-80,102,-47,-64,-43,-79,]),'AND':([43,63,64,65,66,67,68,69,70,71,72,74,75,77,79,80,81,103,109,112,113,114,121,122,123,128,134,138,],[-82,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,105,-61,105,105,105,-77,105,105,-78,-76,105,-45,-47,-64,-43,105,-79,]),'TFLOAT':([3,7,26,43,44,52,53,56,119,],[16,16,16,-82,16,16,16,-13,16,]),'LTHANEQ':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,99,-84,-62,-85,-44,-61,-77,-78,-76,-80,-45,-47,-64,99,-79,]),'ENDMETHOD':([29,43,61,90,],[60,-82,-18,120,]),'COMMA':([43,63,64,65,66,67,68,69,70,71,72,75,77,81,87,112,113,114,116,117,118,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,-61,108,-77,119,-78,132,-80,-83,-74,-75,-45,-47,-64,-43,-79,]),'LTHAN':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,97,-84,-62,-85,-44,-61,-77,-78,-76,-80,-45,-47,-64,97,-79,]),'ENDWHILE':([31,32,35,39,41,42,43,45,46,47,49,62,63,64,65,66,67,68,69,70,71,72,75,76,77,80,81,83,109,111,112,113,114,115,121,122,123,126,128,129,130,131,137,138,140,142,],[-27,-20,-29,-24,-21,-22,-82,-26,-25,-23,-28,-19,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,-61,-31,-33,-81,-77,-34,-30,131,-78,-76,-80,-8,-45,-47,-64,-38,-43,-32,-41,-40,-35,-79,-37,-36,]),'INT':([33,34,37,38,43,73,78,81,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,124,132,],[69,69,69,69,-82,69,69,69,-50,-51,-55,69,-49,-54,-48,-53,-52,-56,69,-57,-58,69,-59,69,69,69,]),'GTHANEQ':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,92,-84,-62,-85,-44,-61,-77,-78,-76,-80,-45,-47,-64,92,-79,]),'READ':([11,31,32,35,39,42,43,45,46,47,49,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,80,81,83,109,112,113,114,115,121,122,123,125,126,128,129,130,131,134,136,137,138,140,142,],[48,-27,48,-29,-24,-22,-82,-26,-25,-23,-28,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,48,-61,-31,-33,48,48,-77,-34,-30,-78,-76,-80,-8,-45,-47,-64,48,-38,-43,-32,-41,-40,48,48,-35,-79,-37,-36,]),'OR':([43,63,64,65,66,67,68,69,70,71,72,74,75,77,79,80,81,103,109,112,113,114,121,122,123,128,134,138,],[-82,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,107,-61,107,107,107,-77,107,107,-78,-76,107,-45,-47,-64,-43,107,-79,]),'VAR':([11,31,32,35,39,42,43,45,46,47,49,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,80,81,83,109,112,113,114,115,121,122,123,125,126,128,129,130,131,134,136,137,138,140,142,],[44,-27,44,-29,-24,-22,-82,-26,-25,-23,-28,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,44,-61,-31,-33,44,44,-77,-34,-30,-78,-76,-80,-8,-45,-47,-64,44,-38,-43,-32,-41,-40,44,44,-35,-79,-37,-36,]),'FLOAT':([33,34,37,38,43,73,78,81,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,124,132,],[71,71,71,71,-82,71,71,71,-50,-51,-55,71,-49,-54,-48,-53,-52,-56,71,-57,-58,71,-59,71,71,71,]),'PROGRAM':([0,],[2,]),'EQUAL':([36,43,],[78,-82,]),'ENDPROGRAM':([5,21,50,55,61,],[20,54,84,89,-18,]),'ENDVAR':([23,26,43,44,56,57,82,],[-12,-11,-82,-81,-13,-10,115,]),'BLOQUE':([2,4,6,8,9,10,12,13,19,22,43,51,52,53,58,60,86,87,88,116,117,118,120,133,],[11,-81,11,-7,11,11,11,-81,-6,11,-82,-5,-71,-69,-9,-67,-70,-72,-68,-83,-74,-75,-66,-73,]),'ENDIF':([31,32,35,39,41,42,43,45,46,47,49,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,81,83,104,109,112,113,114,115,121,122,123,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,],[-27,-20,-29,-24,-21,-22,-82,-26,-25,-23,-28,-19,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,-81,-61,-31,-33,-77,-34,126,-30,-78,-76,-80,-8,-45,-47,-64,-81,-38,137,-43,-32,-41,-40,-81,140,-81,-35,-79,-39,-37,142,-36,]),'VOID':([3,7,26,43,44,52,53,56,119,],[18,25,25,-82,25,25,25,-13,25,]),'EQUALTO':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,91,-84,-62,-85,-44,-61,-77,-78,-76,-80,-45,-47,-64,91,-79,]),'MINUS':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,93,-84,-62,-85,-44,-61,-77,-78,-76,-80,-45,-47,-64,93,-79,]),'METHOD':([2,4,6,13,58,60,120,],[3,3,3,3,-9,-67,-66,]),'GTHAN':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,95,-84,-62,-85,-44,-61,-77,-78,-76,-80,-45,-47,-64,95,-79,]),'PRINT':([11,31,32,35,39,42,43,45,46,47,49,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,80,81,83,109,112,113,114,115,121,122,123,125,126,128,129,130,131,134,136,137,138,140,142,],[34,-27,34,-29,-24,-22,-82,-26,-25,-23,-28,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,34,-61,-31,-33,34,34,-77,-34,-30,-78,-76,-80,-8,-45,-47,-64,34,-38,-43,-32,-41,-40,34,34,-35,-79,-37,-36,]),'ELSEIF':([31,32,35,39,41,42,43,45,46,47,49,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,81,83,104,109,112,113,114,115,121,122,123,126,128,129,130,131,137,138,140,142,],[-27,-20,-29,-24,-21,-22,-82,-26,-25,-23,-28,-19,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,-81,-61,-31,-33,-77,-34,124,-30,-78,-76,-80,-8,-45,-47,-64,-38,-43,-32,-41,-40,-35,-79,-37,-36,]),'ENDGLOBAL':([7,23,26,27,43,56,57,],[-81,-12,-11,58,-82,-13,-10,]),'ENDBLOQUE':([11,30,31,32,35,39,41,42,43,45,46,47,49,62,63,64,65,66,67,68,69,70,71,72,75,76,77,81,83,109,112,113,114,115,121,122,123,126,128,129,130,131,137,138,140,142,],[-81,61,-27,-20,-29,-24,-21,-22,-82,-26,-25,-23,-28,-19,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,-61,-31,-33,-77,-34,-30,-78,-76,-80,-8,-45,-47,-64,-38,-43,-32,-41,-40,-35,-79,-37,-36,]),'FOR':([11,31,32,35,39,42,43,45,46,47,49,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,80,81,83,109,112,113,114,115,121,122,123,125,126,128,129,130,131,134,136,137,138,140,142,],[37,-27,37,-29,-24,-22,-82,-26,-25,-23,-28,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,37,-61,-31,-33,37,37,-77,-34,-30,-78,-76,-80,-8,-45,-47,-64,37,-38,-43,-32,-41,-40,37,37,-35,-79,-37,-36,]),'STRING':([33,34,37,38,43,73,78,81,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,124,132,],[66,66,66,66,-82,66,66,66,-50,-51,-55,66,-49,-54,-48,-53,-52,-56,66,-57,-58,66,-59,66,66,66,]),'CALLMETHOD':([11,31,32,33,34,35,37,38,39,42,43,45,46,47,49,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,109,112,113,114,115,121,122,123,124,125,126,128,129,130,131,132,134,136,137,138,140,142,],[40,-27,40,40,40,-29,40,40,-24,-22,-82,-26,-25,-23,-28,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,40,40,-61,-31,-33,40,40,40,40,-34,-50,-51,-55,40,-49,-54,-48,-53,-52,-56,40,-57,-58,40,-59,40,-30,-78,-76,-80,-8,-45,-47,-64,40,40,-38,-43,-32,-41,-40,40,40,40,-35,-79,-37,-36,]),'IDENTIFIER':([11,14,15,16,17,18,24,25,31,32,33,34,35,37,38,39,40,42,43,45,46,47,48,49,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,109,112,113,114,115,121,122,123,124,125,126,128,129,130,131,132,134,136,137,138,140,142,],[43,43,-16,-15,-14,43,43,-17,-27,43,43,43,-29,43,43,-24,43,-22,-82,-26,-25,-23,43,-28,43,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,43,43,-61,-31,-33,43,43,43,43,-34,43,-50,-51,-55,43,-49,-54,-48,-53,-52,-56,43,-57,-58,43,-59,43,-30,-78,-76,-80,-8,-45,-47,-64,43,43,-38,-43,-32,-41,-40,43,43,43,-35,-79,-37,-36,]),'GLOBAL':([2,],[7,]),'TSTRING':([3,7,26,43,44,52,53,56,119,],[15,15,15,-82,15,15,15,-13,15,]),'MULTI':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,-42,-84,-62,-85,100,-61,-77,-78,-76,-80,100,-47,-64,-43,-79,]),'PLUS':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,96,-84,-62,-85,-44,-61,-77,-78,-76,-80,-45,-47,-64,96,-79,]),'ENDFOR':([31,32,35,39,41,42,43,45,46,47,49,62,63,64,65,66,67,68,69,70,71,72,75,76,77,79,81,83,109,110,112,113,114,115,121,122,123,126,128,129,130,131,137,138,140,142,],[-27,-20,-29,-24,-21,-22,-82,-26,-25,-23,-28,-19,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,-61,-31,-33,-81,-77,-34,-30,130,-78,-76,-80,-8,-45,-47,-64,-38,-43,-32,-41,-40,-35,-79,-37,-36,]),'NOTEQUAL':([43,63,64,65,66,67,68,69,70,71,72,75,81,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,98,-84,-62,-85,-44,-61,-77,-78,-76,-80,-45,-47,-64,98,-79,]),'TINT':([3,7,26,43,44,52,53,56,119,],[17,17,17,-82,17,17,17,-13,17,]),'LPARENTHESES':([33,34,37,38,43,73,78,81,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,124,132,],[73,73,73,73,-82,73,73,73,-50,-51,-55,73,-49,-54,-48,-53,-52,-56,73,-57,-58,73,-59,73,73,73,]),'WHILE':([11,31,32,35,39,42,43,45,46,47,49,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,80,81,83,109,112,113,114,115,121,122,123,125,126,128,129,130,131,134,136,137,138,140,142,],[38,-27,38,-29,-24,-22,-82,-26,-25,-23,-28,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,38,-61,-31,-33,38,38,-77,-34,-30,-78,-76,-80,-8,-45,-47,-64,38,-38,-43,-32,-41,-40,38,38,-35,-79,-37,-36,]),'ELSE':([31,32,35,39,41,42,43,45,46,47,49,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,81,83,104,109,112,113,114,115,121,122,123,126,127,128,129,130,131,134,137,138,139,140,142,],[-27,-20,-29,-24,-21,-22,-82,-26,-25,-23,-28,-19,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,-81,-61,-31,-33,-77,-34,125,-30,-78,-76,-80,-8,-45,-47,-64,-38,136,-43,-32,-41,-40,-81,-35,-79,-39,-37,-36,]),'RETURN':([28,61,],[59,-18,]),'$end':([1,20,54,84,89,],[0,-1,-4,-2,-3,]),'RPARENTHESES':([43,63,64,65,66,67,68,69,70,71,72,75,81,103,112,113,114,121,122,123,128,138,],[-82,-46,-65,-60,-86,-63,-42,-84,-62,-85,-44,-61,-77,123,-78,-76,-80,-45,-47,-64,-43,-79,]),'REFERENCIA':([15,16,17,25,85,],[-16,-15,-14,-17,116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'param':([81,132,],[112,138,]),'estatuto_list':([11,32,74,79,80,125,134,136,],[30,62,104,110,111,135,139,141,]),'psign':([72,121,],[101,101,]),'elseif':([104,],[127,]),'sign':([68,128,],[94,94,]),'for':([11,32,74,79,80,125,134,136,],[31,31,31,31,31,31,31,31,]),'estatuto':([11,32,74,79,80,125,134,136,],[32,32,32,32,32,32,32,32,]),'programa':([0,],[1,]),'parameter_list':([52,53,119,],[86,88,133,]),'int':([33,34,37,38,73,78,81,94,101,106,108,124,132,],[75,75,75,75,75,75,75,75,75,75,75,75,75,]),'string':([33,34,37,38,73,78,81,94,101,106,108,124,132,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'funparams':([81,],[113,]),'elemento':([33,34,37,38,73,78,81,94,101,106,108,124,132,],[63,63,63,63,63,63,63,63,122,63,63,63,63,]),'llamarfun':([11,32,33,34,37,38,73,74,78,79,80,81,94,101,106,108,124,125,132,134,136,],[35,35,64,64,64,64,64,35,64,35,35,64,64,64,64,64,64,35,64,35,35,]),'escritura_vars':([34,108,],[76,129,]),'identifier':([11,14,18,24,32,33,34,37,38,40,48,59,73,74,78,79,80,81,85,94,101,106,108,124,125,132,134,136,],[36,52,53,56,36,65,65,65,65,81,83,90,65,36,65,36,36,65,117,65,65,65,65,65,36,65,36,36,]),'vars':([11,32,74,79,80,125,134,136,],[49,49,49,49,49,49,49,49,]),'bloque':([2,6,9,10,12,22,],[5,21,28,29,50,55,]),'global':([2,],[6,]),'escritura':([11,32,74,79,80,125,134,136,],[39,39,39,39,39,39,39,39,]),'termino':([33,34,37,38,73,78,81,106,108,124,132,],[68,68,68,68,68,68,68,128,68,68,68,]),'tipo':([3,7,26,44,52,53,119,],[14,24,24,24,85,85,85,]),'empty':([2,4,6,7,11,13,26,32,44,74,79,80,125,134,136,],[8,8,8,23,41,8,23,41,23,41,41,41,41,41,41,]),'float':([33,34,37,38,73,78,81,94,101,106,108,124,132,],[70,70,70,70,70,70,70,70,70,70,70,70,70,]),'func':([2,4,6,13,],[13,13,13,13,]),'and_or':([74,77,79,80,103,109,114,134,],[106,106,106,106,106,106,106,106,]),'asignacion':([11,32,74,79,80,125,134,136,],[42,42,42,42,42,42,42,42,]),'funchead':([2,4,6,13,],[9,9,9,9,]),'voidfunc':([2,4,6,13,],[4,4,4,4,]),'prochead':([2,4,6,13,],[10,10,10,10,]),'factor':([33,34,37,38,73,78,81,94,106,108,124,132,],[72,72,72,72,72,72,72,121,72,72,72,72,]),'funciones':([2,4,6,13,],[12,19,22,51,]),'expresion':([33,34,37,38,73,78,81,108,124,132,],[74,77,79,80,103,109,114,77,134,114,]),'while':([11,32,74,79,80,125,134,136,],[45,45,45,45,45,45,45,45,]),'lectura':([11,32,74,79,80,125,134,136,],[46,46,46,46,46,46,46,46,]),'condicion':([11,32,74,79,80,125,134,136,],[47,47,47,47,47,47,47,47,]),'referencia':([85,],[118,]),'vars_declaration':([7,26,44,],[26,26,26,]),'vars_list':([7,26,44,],[27,57,82,]),'parameter':([52,53,119,],[87,87,87,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM bloque ENDPROGRAM','programa',3,'p_programa','rules.py',5),
  ('programa -> PROGRAM funciones bloque ENDPROGRAM','programa',4,'p_programa','rules.py',6),
  ('programa -> PROGRAM global funciones bloque ENDPROGRAM','programa',5,'p_programa','rules.py',7),
  ('programa -> PROGRAM global bloque ENDPROGRAM','programa',4,'p_programa','rules.py',8),
  ('funciones -> func funciones','funciones',2,'p_funciones','rules.py',17),
  ('funciones -> voidfunc funciones','funciones',2,'p_funciones','rules.py',18),
  ('funciones -> empty','funciones',1,'p_funciones','rules.py',19),
  ('vars -> VAR vars_list ENDVAR','vars',3,'p_vars','rules.py',24),
  ('global -> GLOBAL vars_list ENDGLOBAL','global',3,'p_global','rules.py',28),
  ('vars_list -> vars_declaration vars_list','vars_list',2,'p_vars_list','rules.py',32),
  ('vars_list -> vars_declaration','vars_list',1,'p_vars_list','rules.py',33),
  ('vars_list -> empty','vars_list',1,'p_vars_list','rules.py',34),
  ('vars_declaration -> tipo identifier','vars_declaration',2,'p_vars_declaration','rules.py',41),
  ('tipo -> TINT','tipo',1,'p_tipo','rules.py',45),
  ('tipo -> TFLOAT','tipo',1,'p_tipo','rules.py',46),
  ('tipo -> TSTRING','tipo',1,'p_tipo','rules.py',47),
  ('tipo -> VOID','tipo',1,'p_tipo','rules.py',48),
  ('bloque -> BLOQUE estatuto_list ENDBLOQUE','bloque',3,'p_bloque','rules.py',52),
  ('estatuto_list -> estatuto estatuto_list','estatuto_list',2,'p_estatuto_list','rules.py',57),
  ('estatuto_list -> estatuto','estatuto_list',1,'p_estatuto_list','rules.py',58),
  ('estatuto_list -> empty','estatuto_list',1,'p_estatuto_list','rules.py',59),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','rules.py',66),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','rules.py',67),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','rules.py',68),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','rules.py',69),
  ('estatuto -> while','estatuto',1,'p_estatuto','rules.py',70),
  ('estatuto -> for','estatuto',1,'p_estatuto','rules.py',71),
  ('estatuto -> vars','estatuto',1,'p_estatuto','rules.py',72),
  ('estatuto -> llamarfun','estatuto',1,'p_estatuto','rules.py',73),
  ('asignacion -> identifier EQUAL expresion','asignacion',3,'p_asignacion','rules.py',77),
  ('escritura -> PRINT escritura_vars','escritura',2,'p_escritura','rules.py',81),
  ('escritura_vars -> expresion COMMA escritura_vars','escritura_vars',3,'p_escritura_vars','rules.py',85),
  ('escritura_vars -> expresion','escritura_vars',1,'p_escritura_vars','rules.py',86),
  ('lectura -> READ identifier','lectura',2,'p_lectura','rules.py',93),
  ('condicion -> IF expresion estatuto_list elseif ENDIF','condicion',5,'p_condicion','rules.py',97),
  ('condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF','condicion',7,'p_condicion','rules.py',98),
  ('condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF','condicion',6,'p_condicion','rules.py',99),
  ('condicion -> IF expresion estatuto_list ENDIF','condicion',4,'p_condicion','rules.py',100),
  ('elseif -> ELSEIF expresion estatuto_list','elseif',3,'p_elseif','rules.py',111),
  ('while -> WHILE expresion estatuto_list ENDWHILE','while',4,'p_while','rules.py',115),
  ('for -> FOR expresion estatuto_list ENDFOR','for',4,'p_for','rules.py',119),
  ('expresion -> termino','expresion',1,'p_expresion','rules.py',123),
  ('expresion -> expresion and_or termino','expresion',3,'p_expresion','rules.py',124),
  ('termino -> factor','termino',1,'p_termino','rules.py',131),
  ('termino -> termino sign factor','termino',3,'p_termino','rules.py',132),
  ('factor -> elemento','factor',1,'p_factor','rules.py',139),
  ('factor -> factor psign elemento','factor',3,'p_factor','rules.py',140),
  ('sign -> LTHAN','sign',1,'p_sign','rules.py',147),
  ('sign -> GTHAN','sign',1,'p_sign','rules.py',148),
  ('sign -> EQUALTO','sign',1,'p_sign','rules.py',149),
  ('sign -> GTHANEQ','sign',1,'p_sign','rules.py',150),
  ('sign -> LTHANEQ','sign',1,'p_sign','rules.py',151),
  ('sign -> NOTEQUAL','sign',1,'p_sign','rules.py',152),
  ('sign -> PLUS','sign',1,'p_sign','rules.py',153),
  ('sign -> MINUS','sign',1,'p_sign','rules.py',154),
  ('psign -> MULTI','psign',1,'p_psign','rules.py',158),
  ('psign -> DIVIDE','psign',1,'p_psign','rules.py',159),
  ('and_or -> AND','and_or',1,'p_and_or','rules.py',163),
  ('and_or -> OR','and_or',1,'p_and_or','rules.py',164),
  ('elemento -> identifier','elemento',1,'p_elemento','rules.py',168),
  ('elemento -> int','elemento',1,'p_elemento','rules.py',169),
  ('elemento -> float','elemento',1,'p_elemento','rules.py',170),
  ('elemento -> string','elemento',1,'p_elemento','rules.py',171),
  ('elemento -> LPARENTHESES expresion RPARENTHESES','elemento',3,'p_elemento','rules.py',172),
  ('elemento -> llamarfun','elemento',1,'p_elemento','rules.py',173),
  ('func -> funchead bloque RETURN identifier ENDMETHOD','func',5,'p_func','rules.py',180),
  ('voidfunc -> prochead bloque ENDMETHOD','voidfunc',3,'p_voidfunc','rules.py',184),
  ('prochead -> METHOD VOID identifier parameter_list','prochead',4,'p_prochead','rules.py',188),
  ('prochead -> METHOD VOID identifier','prochead',3,'p_prochead','rules.py',189),
  ('funchead -> METHOD tipo identifier parameter_list','funchead',4,'p_funchead','rules.py',196),
  ('funchead -> METHOD tipo identifier','funchead',3,'p_funchead','rules.py',197),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','rules.py',204),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','rules.py',205),
  ('parameter -> tipo identifier','parameter',2,'p_parameter','rules.py',212),
  ('parameter -> tipo referencia','parameter',2,'p_parameter','rules.py',213),
  ('llamarfun -> CALLMETHOD identifier funparams','llamarfun',3,'p_llamarfun','rules.py',217),
  ('llamarfun -> CALLMETHOD identifier','llamarfun',2,'p_llamarfun','rules.py',218),
  ('funparams -> param','funparams',1,'p_funparams','rules.py',225),
  ('funparams -> funparams COMMA param','funparams',3,'p_funparams','rules.py',226),
  ('param -> expresion','param',1,'p_param','rules.py',233),
  ('empty -> <empty>','empty',0,'p_empty','rules.py',237),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','rules.py',240),
  ('referencia -> REFERENCIA','referencia',1,'p_referencia','rules.py',244),
  ('int -> INT','int',1,'p_int','rules.py',248),
  ('float -> FLOAT','float',1,'p_float','rules.py',252),
  ('string -> STRING','string',1,'p_string','rules.py',256),
]
