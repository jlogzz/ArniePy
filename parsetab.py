
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DEC3E0744C9E9A48254CF0195B083482'
    
_lr_action_items = {'CALLMETHOD':([10,17,21,31,33,35,36,40,41,69,72,73,74,75,76,77,78,79,80,81,82,83,88,102,111,118,131,],[-81,-81,-81,-81,-59,-81,62,-60,-61,-81,-81,-43,-41,-47,-48,-45,-46,-42,-81,-44,-81,-81,-81,-81,-81,-59,-81,]),'IDENTIFIER':([3,5,6,7,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,29,31,33,34,35,36,37,38,39,40,41,43,44,46,47,48,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,92,97,98,100,101,102,103,104,105,106,107,108,109,111,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,135,136,137,138,140,141,144,145,146,],[8,8,-19,-20,-81,8,-25,43,-26,-81,-24,-23,-21,-81,-22,-15,-14,-16,-12,49,-13,-81,-59,8,-81,63,-81,-39,-81,-60,-61,-32,8,-81,-28,8,-27,-63,-65,102,-62,-67,-68,-66,-64,-58,-81,-53,-54,-81,-43,-41,-47,-48,-45,-46,-42,-81,-44,-81,-81,-50,-49,-7,-81,-30,-29,113,114,115,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-81,-81,-81,-77,-78,-59,-56,-55,-51,-52,-33,8,8,8,-73,137,8,-81,-71,-75,-74,-76,-79,-34,-81,147,-72,]),'INT':([4,16,55,114,115,144,],[26,26,26,26,26,26,]),'PRINT':([3,5,6,7,11,12,14,18,19,20,22,34,37,38,39,43,44,46,47,48,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,131,135,136,137,138,140,141,144,146,],[17,17,-19,-20,17,-25,-26,-24,-23,-21,-22,17,-81,-39,-81,-32,17,-81,-28,17,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-81,-81,-77,-78,-80,-56,-55,-51,-52,-33,17,17,17,-73,17,-81,-71,-75,-74,-76,-79,-34,-81,-72,]),'ENDIF':([6,7,11,12,14,18,19,20,22,37,38,39,42,43,46,47,48,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,91,100,101,102,103,104,105,106,107,108,109,110,112,116,117,118,119,120,121,122,123,124,125,131,132,133,140,141,142,],[-19,-20,-81,-25,-17,-24,-23,-21,-22,-81,-39,-81,-18,-32,-81,-28,-81,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-81,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,123,-35,-77,-78,-80,-56,-55,-51,-52,-33,-81,-81,-81,141,-81,-79,-34,-36,]),'MULTI':([10,17,21,31,35,37,38,39,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,101,102,103,104,105,106,107,111,116,117,118,119,120,121,122,131,140,],[40,40,40,40,40,72,-39,-81,-63,-65,-62,-67,-68,-66,-64,-58,40,-53,-54,40,-43,-41,-47,-48,-45,-46,-42,40,-44,40,40,-50,-49,40,-57,40,72,72,-40,-81,-81,40,-77,-78,-80,-56,-55,-51,-52,40,-79,]),'OR':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,76,-81,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'WHILE':([3,5,6,7,11,12,14,18,19,20,22,34,37,38,39,43,44,46,47,48,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,131,135,136,137,138,140,141,144,146,],[10,10,-19,-20,10,-25,-26,-24,-23,-21,-22,10,-81,-39,-81,-32,10,-81,-28,10,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-81,-81,-77,-78,-80,-56,-55,-51,-52,-33,10,10,10,-73,10,-81,-71,-75,-74,-76,-79,-34,-81,-72,]),'HASH':([4,16,55,114,115,144,],[25,25,25,25,25,25,]),'GLOBAL':([0,],[4,]),'ENDMETHOD':([6,7,11,12,14,18,19,20,22,37,38,39,42,43,46,47,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,114,116,117,118,119,120,121,122,123,127,128,131,134,135,136,137,138,140,141,144,146,147,],[-19,-20,-81,-25,-17,-24,-23,-21,-22,-81,-39,-81,-18,-32,-81,-28,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-81,-77,-78,-80,-56,-55,-51,-52,-33,-81,-73,-81,143,-71,-75,-74,-76,-79,-34,-81,-72,148,]),'FALSE':([10,17,21,31,33,35,36,40,41,69,72,73,74,75,76,77,78,79,80,81,82,83,88,102,111,118,131,],[-81,-81,-81,-81,-59,-81,64,-60,-61,-81,-81,-43,-41,-47,-48,-45,-46,-42,-81,-44,-81,-81,-81,-81,-81,-59,-81,]),'GTHANEQ':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,81,-81,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'BOOL':([4,16,55,114,115,144,],[23,23,23,23,23,23,]),'VOID':([55,],[97,]),'EQUAL':([8,],[31,]),'LTHAN':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,74,-81,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'METHOD':([32,51,54,57,143,148,],[55,55,55,55,-70,-69,]),'RETURN':([6,7,11,12,14,18,19,20,22,37,38,39,42,43,46,47,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,115,116,117,118,119,120,121,122,123,128,130,131,135,136,137,138,139,140,141,144,146,],[-19,-20,-81,-25,-17,-24,-23,-21,-22,-81,-39,-81,-18,-32,-81,-28,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-81,-77,-78,-80,-56,-55,-51,-52,-33,-73,-81,-81,-71,-75,-74,-76,145,-79,-34,-81,-72,]),'PROGRAM':([0,2,50,],[3,5,-8,]),'ENDWHILE':([6,7,11,12,14,18,19,20,22,34,37,38,39,42,43,46,47,52,58,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,116,117,118,119,120,121,122,123,131,140,141,],[-19,-20,-81,-25,-17,-24,-23,-21,-22,-81,-81,-39,-81,-18,-32,-81,-28,-27,100,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-77,-78,-80,-56,-55,-51,-52,-33,-81,-79,-34,]),'ELSE':([6,7,11,12,14,18,19,20,22,37,38,39,42,43,46,47,48,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,91,100,101,102,103,104,105,106,107,108,109,110,112,116,117,118,119,120,121,122,123,125,131,133,140,141,142,],[-19,-20,-81,-25,-17,-24,-23,-21,-22,-81,-39,-81,-18,-32,-81,-28,-81,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-81,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,124,-35,-77,-78,-80,-56,-55,-51,-52,-33,-81,-81,-81,-79,-34,-36,]),'EQUALTO':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,73,-81,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'VAR':([3,5,6,7,11,12,14,18,19,20,22,34,37,38,39,43,44,46,47,48,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,131,135,136,137,138,140,141,144,146,],[16,16,-19,-20,16,-25,-26,-24,-23,-21,-22,16,-81,-39,-81,-32,16,-81,-28,16,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-81,-81,-77,-78,-80,-56,-55,-51,-52,-33,16,16,16,-73,16,-81,-71,-75,-74,-76,-79,-34,-81,-72,]),'NOTEQUAL':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,78,-81,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'ENDFOR':([6,7,11,12,14,18,19,20,22,37,38,39,42,43,44,46,47,52,60,61,63,64,65,66,67,68,70,71,84,85,86,87,89,90,100,101,102,103,104,105,106,107,108,109,116,117,118,119,120,121,122,123,131,140,141,],[-19,-20,-81,-25,-17,-24,-23,-21,-22,-81,-39,-81,-18,-32,-81,-81,-28,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,108,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-77,-78,-80,-56,-55,-51,-52,-33,-81,-79,-34,]),'ENDPROGRAM':([3,5,6,7,9,11,12,14,18,19,20,22,30,37,38,39,42,43,46,47,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,116,117,118,119,120,121,122,123,131,140,141,],[-81,-81,-19,-20,32,-81,-25,-17,-24,-23,-21,-22,51,-81,-39,-81,-18,-32,-81,-28,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-77,-78,-80,-56,-55,-51,-52,-33,-81,-79,-34,]),'GTHAN':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,79,-81,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'ELSEIF':([6,7,11,12,14,18,19,20,22,37,38,39,42,43,46,47,48,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,91,100,101,102,103,104,105,106,107,108,109,116,117,118,119,120,121,122,123,125,131,133,140,141,],[-19,-20,-81,-25,-17,-24,-23,-21,-22,-81,-39,-81,-18,-32,-81,-28,-81,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,111,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-77,-78,-80,-56,-55,-51,-52,-33,-81,-81,111,-79,-34,]),'FLOAT':([4,16,55,114,115,144,],[29,29,29,29,29,29,]),'RPARENTHESES':([37,38,39,59,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,-39,-81,101,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'ENDGLOBAL':([28,49,93,94,113,126,],[50,-81,-10,-9,-81,-11,]),'COMMA':([37,38,39,46,49,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,113,116,117,118,119,120,121,122,131,135,136,137,138,140,],[-81,-39,-81,88,92,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,92,-77,131,-80,-56,-55,-51,-52,-81,144,-75,-74,-76,-79,]),'FOR':([3,5,6,7,11,12,14,18,19,20,22,34,37,38,39,43,44,46,47,48,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,131,135,136,137,138,140,141,144,146,],[15,15,-19,-20,15,-25,-26,-24,-23,-21,-22,15,-81,-39,-81,-32,15,-81,-28,15,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-81,-81,-77,-78,-80,-56,-55,-51,-52,-33,15,15,15,-73,15,-81,-71,-75,-74,-76,-79,-34,-81,-72,]),'STRING':([4,10,16,17,21,31,33,35,36,40,41,55,69,72,73,74,75,76,77,78,79,80,81,82,83,88,102,111,114,115,118,131,144,],[24,-81,24,-81,-81,-81,-59,-81,61,-60,-61,24,-81,-81,-43,-41,-47,-48,-45,-46,-42,-81,-44,-81,-81,-81,-81,-81,24,24,-59,-81,24,]),'$end':([1,32,51,53,54,56,57,95,96,99,143,148,],[0,-1,-81,-6,-81,-2,-81,-3,-4,-5,-70,-69,]),'READ':([3,5,6,7,11,12,14,18,19,20,22,34,37,38,39,43,44,46,47,48,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,131,135,136,137,138,140,141,144,146,],[13,13,-19,-20,13,-25,-26,-24,-23,-21,-22,13,-81,-39,-81,-32,13,-81,-28,13,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-81,-81,-77,-78,-80,-56,-55,-51,-52,-33,13,13,13,-73,13,-81,-71,-75,-74,-76,-79,-34,-81,-72,]),'REFERENCIA':([23,24,25,26,29,129,],[-15,-14,-16,-12,-13,136,]),'LPARENTHESES':([10,17,21,31,35,69,72,73,74,75,76,77,78,79,80,81,82,83,88,102,111,131,],[35,35,35,35,35,35,35,-43,-41,-47,-48,-45,-46,-42,35,-44,35,35,35,35,35,35,]),'PLUS':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,-39,82,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,82,82,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'MINUS':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,-39,83,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,83,83,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'AND':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,75,-81,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'CTEINT':([10,15,17,21,31,33,35,36,40,41,69,72,73,74,75,76,77,78,79,80,81,82,83,88,102,111,118,131,],[-81,44,-81,-81,-81,-59,-81,60,-60,-61,-81,-81,-43,-41,-47,-48,-45,-46,-42,-81,-44,-81,-81,-81,-81,-81,-59,-81,]),'LTHANEQ':([37,38,39,60,61,63,64,65,66,67,68,70,71,84,85,101,102,103,104,105,106,107,116,117,118,119,120,121,122,131,140,],[-81,77,-81,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-57,-81,-81,-81,-40,-81,-81,-77,-78,-80,-56,-55,-51,-52,-81,-79,]),'IF':([3,5,6,7,11,12,14,18,19,20,22,34,37,38,39,43,44,46,47,48,52,60,61,63,64,65,66,67,68,70,71,84,85,87,89,90,100,101,102,103,104,105,106,107,108,109,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,131,135,136,137,138,140,141,144,146,],[21,21,-19,-20,21,-25,-26,-24,-23,-21,-22,21,-81,-39,-81,-32,21,-81,-28,21,-27,-63,-65,-62,-67,-68,-66,-64,-58,-53,-54,-50,-49,-7,-30,-29,-37,-57,-81,-81,-81,-40,-81,-81,-38,-31,-81,-81,-77,-78,-80,-56,-55,-51,-52,-33,21,21,21,-73,21,-81,-71,-75,-74,-76,-79,-34,-81,-72,]),'ENDVAR':([45,49,93,94,113,126,],[87,-81,-10,-9,-81,-11,]),'DIVIDE':([10,17,21,31,35,37,38,39,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,101,102,103,104,105,106,107,111,116,117,118,119,120,121,122,131,140,],[41,41,41,41,41,69,-39,-81,-63,-65,-62,-67,-68,-66,-64,-58,41,-53,-54,41,-43,-41,-47,-48,-45,-46,-42,41,-44,41,41,-50,-49,41,-57,41,69,69,-40,-81,-81,41,-77,-78,-80,-56,-55,-51,-52,41,-79,]),'VALOR':([23,24,25,26,29,129,],[-15,-14,-16,-12,-13,138,]),'CTEFLOAT':([10,17,21,31,33,35,36,40,41,69,72,73,74,75,76,77,78,79,80,81,82,83,88,102,111,118,131,],[-81,-81,-81,-81,-59,-81,67,-60,-61,-81,-81,-43,-41,-47,-48,-45,-46,-42,-81,-44,-81,-81,-81,-81,-81,-59,-81,]),'TRUE':([10,17,21,31,33,35,36,40,41,69,72,73,74,75,76,77,78,79,80,81,82,83,88,102,111,118,131,],[-81,-81,-81,-81,-59,-81,66,-60,-61,-81,-81,-43,-41,-47,-48,-45,-46,-42,-81,-44,-81,-81,-81,-81,-81,-59,-81,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asignacion':([3,5,11,34,44,48,124,125,127,130,],[6,6,6,6,6,6,6,6,6,6,]),'condicion':([3,5,11,34,44,48,124,125,127,130,],[7,7,7,7,7,7,7,7,7,7,]),'tipo':([4,16,55,114,115,144,],[27,27,98,129,129,129,]),'func':([32,51,54,57,],[54,54,54,54,]),'expresion':([10,17,21,31,35,88,102,111,131,],[34,46,48,52,59,46,117,125,117,]),'func1':([114,115,144,],[127,130,146,]),'factor':([10,17,21,31,35,69,72,80,82,83,88,102,111,131,],[37,37,37,37,37,103,104,37,37,37,37,37,37,37,]),'llamarfun1':([102,131,],[116,140,]),'vars1':([4,16,],[28,45,]),'bloque':([3,5,11,34,44,48,124,125,127,130,],[9,30,42,58,86,91,132,133,134,139,]),'llamarfun':([36,],[65,]),'estatuto':([3,5,11,34,44,48,124,125,127,130,],[11,11,11,11,11,11,11,11,11,11,]),'expresion1':([38,],[80,]),'voidfunc':([32,51,54,57,],[57,57,57,57,]),'condicion1':([91,133,],[110,142,]),'termino1':([37,103,104,],[70,119,120,]),'empty':([3,5,10,11,17,21,31,32,34,35,37,39,44,46,48,49,51,54,57,69,72,80,82,83,88,91,102,103,104,106,107,111,113,114,115,124,125,127,130,131,133,144,],[14,14,33,14,33,33,33,53,14,33,71,84,14,89,14,93,53,53,53,33,33,33,33,33,33,112,118,71,71,84,84,33,93,128,128,14,14,14,14,118,112,128,]),'escritura2':([46,],[90,]),'global':([0,],[2,]),'factor1':([10,17,21,31,35,69,72,80,82,83,88,102,111,131,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'vars2':([49,113,],[94,126,]),'for':([3,5,11,34,44,48,124,125,127,130,],[18,18,18,18,18,18,18,18,18,18,]),'while':([3,5,11,34,44,48,124,125,127,130,],[19,19,19,19,19,19,19,19,19,19,]),'escritura':([3,5,11,34,44,48,124,125,127,130,],[20,20,20,20,20,20,20,20,20,20,]),'vars':([3,5,11,34,44,48,124,125,127,130,],[12,12,12,12,12,12,12,12,12,12,]),'exp':([10,17,21,31,35,80,88,102,111,131,],[38,38,38,38,38,105,38,38,38,38,]),'func2':([129,],[135,]),'termino':([10,17,21,31,35,80,82,83,88,102,111,131,],[39,39,39,39,39,39,106,107,39,39,39,39,]),'exp1':([39,106,107,],[85,121,122,]),'programa':([0,],[1,]),'escritura1':([17,88,],[47,109,]),'lectura':([3,5,11,34,44,48,124,125,127,130,],[22,22,22,22,22,22,22,22,22,22,]),'funciones':([32,51,54,57,],[56,95,96,99,]),'varcte':([36,],[68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM bloque ENDPROGRAM','programa',3,'p_programa','rules.py',5),
  ('programa -> PROGRAM bloque ENDPROGRAM funciones','programa',4,'p_programa','rules.py',6),
  ('programa -> global PROGRAM bloque ENDPROGRAM funciones','programa',5,'p_programa','rules.py',7),
  ('funciones -> func funciones','funciones',2,'p_funciones','rules.py',16),
  ('funciones -> voidfunc funciones','funciones',2,'p_funciones','rules.py',17),
  ('funciones -> empty','funciones',1,'p_funciones','rules.py',18),
  ('vars -> VAR vars1 ENDVAR','vars',3,'p_vars','rules.py',21),
  ('global -> GLOBAL vars1 ENDGLOBAL','global',3,'p_global','rules.py',24),
  ('vars1 -> tipo IDENTIFIER vars2','vars1',3,'p_vars1','rules.py',27),
  ('vars2 -> empty','vars2',1,'p_vars2','rules.py',30),
  ('vars2 -> COMMA IDENTIFIER vars2','vars2',3,'p_vars2','rules.py',31),
  ('tipo -> INT','tipo',1,'p_tipo','rules.py',34),
  ('tipo -> FLOAT','tipo',1,'p_tipo','rules.py',35),
  ('tipo -> STRING','tipo',1,'p_tipo','rules.py',36),
  ('tipo -> BOOL','tipo',1,'p_tipo','rules.py',37),
  ('tipo -> HASH','tipo',1,'p_tipo','rules.py',38),
  ('bloque -> empty','bloque',1,'p_bloque','rules.py',41),
  ('bloque -> estatuto bloque','bloque',2,'p_bloque','rules.py',42),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','rules.py',45),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','rules.py',46),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','rules.py',47),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','rules.py',48),
  ('estatuto -> while','estatuto',1,'p_estatuto','rules.py',49),
  ('estatuto -> for','estatuto',1,'p_estatuto','rules.py',50),
  ('estatuto -> vars','estatuto',1,'p_estatuto','rules.py',51),
  ('estatuto -> empty','estatuto',1,'p_estatuto','rules.py',52),
  ('asignacion -> IDENTIFIER EQUAL expresion','asignacion',3,'p_asignacion','rules.py',55),
  ('escritura -> PRINT escritura1','escritura',2,'p_escritura','rules.py',58),
  ('escritura1 -> expresion escritura2','escritura1',2,'p_escritura1','rules.py',61),
  ('escritura2 -> empty','escritura2',1,'p_escritura2','rules.py',64),
  ('escritura2 -> COMMA escritura1','escritura2',2,'p_escritura2','rules.py',65),
  ('lectura -> READ IDENTIFIER','lectura',2,'p_lectura','rules.py',68),
  ('condicion -> IF expresion bloque condicion1 ENDIF','condicion',5,'p_condicion','rules.py',71),
  ('condicion -> IF expresion bloque condicion1 ELSE bloque ENDIF','condicion',7,'p_condicion','rules.py',72),
  ('condicion1 -> empty','condicion1',1,'p_condicion1','rules.py',75),
  ('condicion1 -> ELSEIF expresion bloque condicion1','condicion1',4,'p_condicion1','rules.py',76),
  ('while -> WHILE expresion bloque ENDWHILE','while',4,'p_while','rules.py',79),
  ('for -> FOR CTEINT bloque ENDFOR','for',4,'p_for','rules.py',82),
  ('expresion -> exp','expresion',1,'p_expresion','rules.py',85),
  ('expresion -> exp expresion1 exp','expresion',3,'p_expresion','rules.py',86),
  ('expresion1 -> LTHAN','expresion1',1,'p_expresion1','rules.py',89),
  ('expresion1 -> GTHAN','expresion1',1,'p_expresion1','rules.py',90),
  ('expresion1 -> EQUALTO','expresion1',1,'p_expresion1','rules.py',91),
  ('expresion1 -> GTHANEQ','expresion1',1,'p_expresion1','rules.py',92),
  ('expresion1 -> LTHANEQ','expresion1',1,'p_expresion1','rules.py',93),
  ('expresion1 -> NOTEQUAL','expresion1',1,'p_expresion1','rules.py',94),
  ('expresion1 -> AND','expresion1',1,'p_expresion1','rules.py',95),
  ('expresion1 -> OR','expresion1',1,'p_expresion1','rules.py',96),
  ('exp -> termino exp1','exp',2,'p_exp','rules.py',99),
  ('exp1 -> empty','exp1',1,'p_exp1','rules.py',102),
  ('exp1 -> PLUS termino exp1','exp1',3,'p_exp1','rules.py',103),
  ('exp1 -> MINUS termino exp1','exp1',3,'p_exp1','rules.py',104),
  ('termino -> factor termino1','termino',2,'p_termino','rules.py',107),
  ('termino1 -> empty','termino1',1,'p_termino1','rules.py',110),
  ('termino1 -> MULTI factor termino1','termino1',3,'p_termino1','rules.py',111),
  ('termino1 -> DIVIDE factor termino1','termino1',3,'p_termino1','rules.py',112),
  ('factor -> LPARENTHESES expresion RPARENTHESES','factor',3,'p_factor','rules.py',115),
  ('factor -> factor1 varcte','factor',2,'p_factor','rules.py',116),
  ('factor1 -> empty','factor1',1,'p_factor1','rules.py',119),
  ('factor1 -> MULTI','factor1',1,'p_factor1','rules.py',120),
  ('factor1 -> DIVIDE','factor1',1,'p_factor1','rules.py',121),
  ('varcte -> IDENTIFIER','varcte',1,'p_varcte','rules.py',124),
  ('varcte -> CTEINT','varcte',1,'p_varcte','rules.py',125),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','rules.py',126),
  ('varcte -> STRING','varcte',1,'p_varcte','rules.py',127),
  ('varcte -> TRUE','varcte',1,'p_varcte','rules.py',128),
  ('varcte -> FALSE','varcte',1,'p_varcte','rules.py',129),
  ('varcte -> llamarfun','varcte',1,'p_varcte','rules.py',130),
  ('func -> METHOD tipo IDENTIFIER func1 bloque RETURN IDENTIFIER ENDMETHOD','func',8,'p_func','rules.py',133),
  ('voidfunc -> METHOD VOID IDENTIFIER func1 bloque ENDMETHOD','voidfunc',6,'p_voidfunc','rules.py',136),
  ('func1 -> tipo func2','func1',2,'p_func1','rules.py',139),
  ('func1 -> tipo func2 COMMA func1','func1',4,'p_func1','rules.py',140),
  ('func1 -> empty','func1',1,'p_func1','rules.py',141),
  ('func2 -> IDENTIFIER','func2',1,'p_func2','rules.py',144),
  ('func2 -> REFERENCIA','func2',1,'p_func2','rules.py',145),
  ('func2 -> VALOR','func2',1,'p_func2','rules.py',146),
  ('llamarfun -> CALLMETHOD IDENTIFIER llamarfun1','llamarfun',3,'p_llamarfun','rules.py',149),
  ('llamarfun1 -> expresion','llamarfun1',1,'p_llamarfun1','rules.py',152),
  ('llamarfun1 -> expresion COMMA llamarfun1','llamarfun1',3,'p_llamarfun1','rules.py',153),
  ('llamarfun1 -> empty','llamarfun1',1,'p_llamarfun1','rules.py',154),
  ('empty -> <empty>','empty',0,'p_empty','rules.py',157),
]
