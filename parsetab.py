
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E82E927FCFF18C0A0B11D5044C287F5A'
    
_lr_action_items = {'MINUS':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,83,-77,-64,83,-78,-76,-47,-45,-79,]),'WHILE':([2,3,4,5,7,9,13,14,15,22,23,24,25,29,39,41,43,45,46,47,48,49,51,52,53,58,60,62,63,64,68,71,78,100,101,103,104,105,107,109,110,111,112,114,115,117,118,119,120,122,125,127,128,130,132,134,135,136,138,139,],[18,-23,-29,-24,-81,-26,-25,-27,18,-28,18,18,-83,-86,-84,-34,-63,-60,-62,18,-65,-46,-44,-61,-42,18,18,18,-31,-33,-7,-30,-77,-8,-41,-64,-43,-38,18,-78,-76,-47,-45,-69,-71,-40,-32,-35,18,18,-68,-72,-70,-37,-79,-75,-82,-74,-36,-73,]),'GTHANEQ':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,87,-77,-64,87,-78,-76,-47,-45,-79,]),'STRING':([7,8,16,18,20,21,35,40,44,59,69,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,99,108,114,115,123,137,],[-81,29,29,29,29,29,29,29,29,29,-12,-58,29,-59,29,-56,29,-57,29,-55,-52,-54,-49,-51,-50,-53,-48,29,29,29,29,29,29,]),'AND':([7,25,29,39,43,45,46,47,48,49,51,52,53,62,64,71,73,78,103,104,109,110,111,112,122,132,],[-81,-83,-86,-84,-63,-60,-62,74,-65,-46,-44,-61,-42,74,74,74,74,-77,-64,-43,74,-76,-47,-45,74,-79,]),'PLUS':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,85,-77,-64,85,-78,-76,-47,-45,-79,]),'VOID':([7,8,21,35,59,69,114,115,137,],[-81,37,37,37,94,-12,37,37,37,]),'PROGRAM':([0,],[2,]),'VAR':([2,3,4,5,7,9,13,14,15,22,23,24,25,29,39,41,43,45,46,47,48,49,51,52,53,58,60,62,63,64,68,71,78,100,101,103,104,105,107,109,110,111,112,114,115,117,118,119,120,122,125,127,128,130,132,134,135,136,138,139,],[8,-23,-29,-24,-81,-26,-25,-27,8,-28,8,8,-83,-86,-84,-34,-63,-60,-62,8,-65,-46,-44,-61,-42,8,8,8,-31,-33,-7,-30,-77,-8,-41,-64,-43,-38,8,-78,-76,-47,-45,-69,-71,-40,-32,-35,8,8,-68,-72,-70,-37,-79,-75,-82,-74,-36,-73,]),'LTHANEQ':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,84,-77,-64,84,-78,-76,-47,-45,-79,]),'ELSE':([3,4,5,7,9,10,13,14,22,23,25,29,39,41,43,45,46,47,48,49,51,52,53,63,64,66,68,71,77,78,101,103,104,105,106,109,110,111,112,117,118,119,122,130,131,132,138,],[-23,-29,-24,-81,-26,-22,-25,-27,-28,-21,-83,-86,-84,-34,-63,-60,-62,-80,-65,-46,-44,-61,-42,-31,-33,-20,-7,-30,107,-77,-41,-64,-43,-38,120,-78,-76,-47,-45,-40,-32,-35,-80,-37,-39,-79,-36,]),'ENDWHILE':([3,4,5,7,9,10,13,14,22,23,25,29,39,41,43,45,46,48,49,51,52,53,62,63,64,66,68,71,78,98,101,103,104,105,109,110,111,112,117,118,119,130,132,138,],[-23,-29,-24,-81,-26,-22,-25,-27,-28,-21,-83,-86,-84,-34,-63,-60,-62,-65,-46,-44,-61,-42,-80,-31,-33,-20,-7,-30,-77,117,-41,-64,-43,-38,-78,-76,-47,-45,-40,-32,-35,-37,-79,-36,]),'IF':([2,3,4,5,7,9,13,14,15,22,23,24,25,29,39,41,43,45,46,47,48,49,51,52,53,58,60,62,63,64,68,71,78,100,101,103,104,105,107,109,110,111,112,114,115,117,118,119,120,122,125,127,128,130,132,134,135,136,138,139,],[16,-23,-29,-24,-81,-26,-25,-27,16,-28,16,16,-83,-86,-84,-34,-63,-60,-62,16,-65,-46,-44,-61,-42,16,16,16,-31,-33,-7,-30,-77,-8,-41,-64,-43,-38,16,-78,-76,-47,-45,-69,-71,-40,-32,-35,16,16,-68,-72,-70,-37,-79,-75,-82,-74,-36,-73,]),'RPARENTHESES':([7,25,29,39,43,45,46,48,49,51,52,53,73,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,-42,103,-77,-64,-43,-78,-76,-47,-45,-79,]),'NOTEQUAL':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,89,-77,-64,89,-78,-76,-47,-45,-79,]),'COMMA':([7,25,29,39,43,45,46,48,49,51,52,53,64,78,103,104,109,110,111,112,127,132,134,135,136,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,-42,99,-77,-64,-43,123,-76,-47,-45,137,-79,-75,-82,-74,]),'ENDMETHOD':([3,4,5,7,9,10,13,14,19,22,23,25,29,39,41,43,45,46,48,49,51,52,53,60,63,64,66,68,71,78,96,101,103,104,105,109,110,111,112,114,117,118,119,124,125,127,130,132,134,135,136,138,139,],[-23,-29,-24,-81,-26,-22,-25,-27,-19,-28,-21,-83,-86,-84,-34,-63,-60,-62,-65,-46,-44,-61,-42,-80,-31,-33,-20,-7,-30,-77,116,-41,-64,-43,-38,-78,-76,-47,-45,-69,-40,-32,-35,133,-68,-72,-37,-79,-75,-82,-74,-36,-73,]),'INT':([6,7,8,16,18,20,21,35,40,44,59,69,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,99,108,114,115,123,137,],[25,-81,25,25,25,25,25,25,25,25,25,-12,-58,25,-59,25,-56,25,-57,25,-55,-52,-54,-49,-51,-50,-53,-48,25,25,25,25,25,25,]),'GLOBAL':([2,],[21,]),'ELSEIF':([3,4,5,7,9,10,13,14,22,23,25,29,39,41,43,45,46,47,48,49,51,52,53,63,64,66,68,71,77,78,101,103,104,105,109,110,111,112,117,118,119,130,132,138,],[-23,-29,-24,-81,-26,-22,-25,-27,-28,-21,-83,-86,-84,-34,-63,-60,-62,-80,-65,-46,-44,-61,-42,-31,-33,-20,-7,-30,108,-77,-41,-64,-43,-38,-78,-76,-47,-45,-40,-32,-35,-37,-79,-36,]),'IDENTIFIER':([2,3,4,5,7,9,12,13,14,15,16,18,20,22,23,24,25,26,27,28,29,31,33,34,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,58,60,62,63,64,68,71,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,99,100,101,103,104,105,107,108,109,110,111,112,113,114,115,117,118,119,120,122,123,125,126,127,128,130,132,134,135,136,138,139,],[7,-23,-29,-24,-81,-26,7,-25,-27,7,7,7,7,-28,7,7,-83,-85,-87,-15,-86,-13,7,-16,-14,-18,-17,-84,7,-34,-63,7,-60,-62,7,-65,-46,7,-44,-61,-42,7,7,7,-31,-33,-7,-30,-58,7,-59,7,-56,7,-57,7,-55,-52,-54,-49,-51,-50,-53,-48,7,7,7,-8,-41,-64,-43,-38,7,7,-78,-76,-47,-45,7,-69,-71,-40,-32,-35,7,7,7,-68,7,-72,-70,-37,-79,-75,-82,-74,-36,-73,]),'RETURN':([3,4,5,7,9,10,13,14,19,22,23,25,29,39,41,43,45,46,48,49,51,52,53,58,63,64,66,68,71,78,93,101,103,104,105,109,110,111,112,115,117,118,119,127,128,130,132,134,135,136,138,139,],[-23,-29,-24,-81,-26,-22,-25,-27,-19,-28,-21,-83,-86,-84,-34,-63,-60,-62,-65,-46,-44,-61,-42,-80,-31,-33,-20,-7,-30,-77,113,-41,-64,-43,-38,-78,-76,-47,-45,-71,-40,-32,-35,-72,-70,-37,-79,-75,-82,-74,-36,-73,]),'DIVIDE':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,81,-61,-42,-77,-64,-43,-78,-76,-47,81,-79,]),'FOR':([2,3,4,5,7,9,13,14,15,22,23,24,25,29,39,41,43,45,46,47,48,49,51,52,53,58,60,62,63,64,68,71,78,100,101,103,104,105,107,109,110,111,112,114,115,117,118,119,120,122,125,127,128,130,132,134,135,136,138,139,],[6,-23,-29,-24,-81,-26,-25,-27,6,-28,6,6,-83,-86,-84,-34,-63,-60,-62,6,-65,-46,-44,-61,-42,6,6,6,-31,-33,-7,-30,-77,-8,-41,-64,-43,-38,6,-78,-76,-47,-45,-69,-71,-40,-32,-35,6,6,-68,-72,-70,-37,-79,-75,-82,-74,-36,-73,]),'LPARENTHESES':([7,16,18,20,40,44,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,99,108,123,],[-81,44,44,44,44,44,-58,44,-59,44,-56,44,-57,44,-55,-52,-54,-49,-51,-50,-53,-48,44,44,44,]),'ENDPROGRAM':([2,3,4,5,7,9,10,13,14,15,17,19,22,23,25,29,39,41,42,43,45,46,48,49,51,52,53,54,55,57,61,63,64,66,68,71,72,78,91,97,100,101,103,104,105,109,110,111,112,116,117,118,119,130,132,133,138,],[-80,-23,-29,-24,-81,-26,-22,-25,-27,-80,56,-19,-28,-21,-83,-86,-84,-34,-80,-63,-60,-62,-65,-46,-44,-61,-42,-6,-80,92,-80,-31,-33,-20,-7,-30,102,-77,-4,-5,-8,-41,-64,-43,-38,-78,-76,-47,-45,-67,-40,-32,-35,-37,-79,-66,-36,]),'MULTI':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,79,-61,-42,-77,-64,-43,-78,-76,-47,79,-79,]),'READ':([2,3,4,5,7,9,13,14,15,22,23,24,25,29,39,41,43,45,46,47,48,49,51,52,53,58,60,62,63,64,68,71,78,100,101,103,104,105,107,109,110,111,112,114,115,117,118,119,120,122,125,127,128,130,132,134,135,136,138,139,],[12,-23,-29,-24,-81,-26,-25,-27,12,-28,12,12,-83,-86,-84,-34,-63,-60,-62,12,-65,-46,-44,-61,-42,12,12,12,-31,-33,-7,-30,-77,-8,-41,-64,-43,-38,12,-78,-76,-47,-45,-69,-71,-40,-32,-35,12,12,-68,-72,-70,-37,-79,-75,-82,-74,-36,-73,]),'ENDVAR':([7,8,30,32,35,69,70,],[-81,-80,68,-11,-10,-12,-9,]),'$end':([1,56,92,102,],[0,-1,-2,-3,]),'ENDGLOBAL':([7,21,32,35,65,69,70,],[-81,-80,-11,-10,100,-12,-9,]),'ENDIF':([3,4,5,7,9,10,13,14,22,23,25,29,39,41,43,45,46,47,48,49,51,52,53,63,64,66,68,71,77,78,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,122,129,130,131,132,138,],[-23,-29,-24,-81,-26,-22,-25,-27,-28,-21,-83,-86,-84,-34,-63,-60,-62,-80,-65,-46,-44,-61,-42,-31,-33,-20,-7,-30,105,-77,-41,-64,-43,-38,119,-80,-78,-76,-47,-45,-40,-32,-35,-80,130,-80,138,-37,-39,-79,-36,]),'HASH':([7,8,21,35,59,69,114,115,137,],[-81,27,27,27,27,-12,27,27,27,]),'CALLMETHOD':([7,16,18,20,40,44,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,99,108,123,],[-81,50,50,50,50,50,-58,50,-59,50,-56,50,-57,50,-55,-52,-54,-49,-51,-50,-53,-48,50,50,50,]),'EQUALTO':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,88,-77,-64,88,-78,-76,-47,-45,-79,]),'BOOL':([7,8,21,35,59,69,114,115,137,],[-81,26,26,26,26,-12,26,26,26,]),'LTHAN':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,90,-77,-64,90,-78,-76,-47,-45,-79,]),'OR':([7,25,29,39,43,45,46,47,48,49,51,52,53,62,64,71,73,78,103,104,109,110,111,112,122,132,],[-81,-83,-86,-84,-63,-60,-62,76,-65,-46,-44,-61,-42,76,76,76,76,-77,-64,-43,76,-76,-47,-45,76,-79,]),'REFERENCIA':([25,26,27,28,29,31,34,36,37,38,39,126,],[-83,-85,-87,-15,-86,-13,-16,-14,-18,-17,-84,135,]),'PRINT':([2,3,4,5,7,9,13,14,15,22,23,24,25,29,39,41,43,45,46,47,48,49,51,52,53,58,60,62,63,64,68,71,78,100,101,103,104,105,107,109,110,111,112,114,115,117,118,119,120,122,125,127,128,130,132,134,135,136,138,139,],[20,-23,-29,-24,-81,-26,-25,-27,20,-28,20,20,-83,-86,-84,-34,-63,-60,-62,20,-65,-46,-44,-61,-42,20,20,20,-31,-33,-7,-30,-77,-8,-41,-64,-43,-38,20,-78,-76,-47,-45,-69,-71,-40,-32,-35,20,20,-68,-72,-70,-37,-79,-75,-82,-74,-36,-73,]),'GTHAN':([7,25,29,39,43,45,46,48,49,51,52,53,78,103,104,109,110,111,112,132,],[-81,-83,-86,-84,-63,-60,-62,-65,-46,-44,-61,86,-77,-64,86,-78,-76,-47,-45,-79,]),'METHOD':([2,3,4,5,7,9,10,13,14,15,17,19,22,23,25,29,39,41,42,43,45,46,48,49,51,52,53,55,61,63,64,66,68,71,78,100,101,103,104,105,109,110,111,112,116,117,118,119,130,132,133,138,],[-80,-23,-29,-24,-81,-26,-22,-25,-27,-80,59,-19,-28,-21,-83,-86,-84,-34,59,-63,-60,-62,-65,-46,-44,-61,-42,59,59,-31,-33,-20,-7,-30,-77,-8,-41,-64,-43,-38,-78,-76,-47,-45,-67,-40,-32,-35,-37,-79,-66,-36,]),'EQUAL':([7,11,],[-81,40,]),'FLOAT':([7,8,16,18,20,21,35,40,44,59,69,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,99,108,114,115,123,137,],[-81,39,39,39,39,39,39,39,39,39,-12,-58,39,-59,39,-56,39,-57,39,-55,-52,-54,-49,-51,-50,-53,-48,39,39,39,39,39,39,]),'ENDFOR':([3,4,5,7,9,10,13,14,22,23,24,25,29,39,41,43,45,46,48,49,51,52,53,63,64,66,67,68,71,78,101,103,104,105,109,110,111,112,117,118,119,130,132,138,],[-23,-29,-24,-81,-26,-22,-25,-27,-28,-21,-80,-83,-86,-84,-34,-63,-60,-62,-65,-46,-44,-61,-42,-31,-33,-20,101,-7,-30,-77,-41,-64,-43,-38,-78,-76,-47,-45,-40,-32,-35,-37,-79,-36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asignacion':([2,15,23,24,47,58,60,62,107,120,122,],[3,3,3,3,3,3,3,3,3,3,3,]),'vars':([2,15,23,24,47,58,60,62,107,120,122,],[4,4,4,4,4,4,4,4,4,4,4,]),'condicion':([2,15,23,24,47,58,60,62,107,120,122,],[5,5,5,5,5,5,5,5,5,5,5,]),'parameter_list':([114,115,137,],[125,128,139,]),'prochead':([17,42,55,61,],[60,60,60,60,]),'string':([8,16,18,20,21,35,40,44,59,75,78,80,82,99,108,114,115,123,137,],[28,43,43,43,28,28,43,43,28,43,43,43,43,43,43,28,28,43,28,]),'escritura':([2,15,23,24,47,58,60,62,107,120,122,],[13,13,13,13,13,13,13,13,13,13,13,]),'vars_list':([8,21,35,],[30,65,70,]),'escritura_vars':([20,99,],[63,118,]),'termino':([16,18,20,40,44,75,78,99,108,123,],[53,53,53,53,53,104,53,53,53,53,]),'empty':([2,8,15,17,21,23,24,35,42,47,55,58,60,61,62,107,120,122,],[10,32,10,54,32,10,10,32,54,10,54,10,10,54,10,10,10,10,]),'referencia':([126,],[134,]),'tipo':([8,21,35,59,114,115,137,],[33,33,33,95,126,126,126,]),'programa':([0,],[1,]),'float':([8,16,18,20,21,35,40,44,59,75,78,80,82,99,108,114,115,123,137,],[36,46,46,46,36,36,46,46,36,46,46,46,46,46,46,36,36,46,36,]),'bool':([8,21,35,59,114,115,137,],[34,34,34,34,34,34,34,]),'expresion':([16,18,20,40,44,78,99,108,123,],[47,62,64,71,73,109,64,122,109,]),'factor':([16,18,20,40,44,75,78,82,99,108,123,],[51,51,51,51,51,51,51,112,51,51,51,]),'for':([2,15,23,24,47,58,60,62,107,120,122,],[22,22,22,22,22,22,22,22,22,22,22,]),'voidfunc':([17,42,55,61,],[61,61,61,61,]),'global':([2,],[15,]),'elemento':([16,18,20,40,44,75,78,80,82,99,108,123,],[49,49,49,49,49,49,49,111,49,49,49,49,]),'sign':([53,104,],[82,82,]),'elseif':([77,],[106,]),'and_or':([47,62,64,71,73,109,122,],[75,75,75,75,75,75,75,]),'parameter':([114,115,137,],[127,127,127,]),'bloque':([2,15,58,60,],[17,42,93,96,]),'identifier':([2,12,15,16,18,20,23,24,33,40,44,47,50,58,60,62,75,78,80,82,94,95,99,107,108,113,120,122,123,126,],[11,41,11,45,45,45,11,11,69,45,45,11,78,11,11,11,45,45,45,45,114,115,45,11,45,124,11,11,45,136,]),'func':([17,42,55,61,],[55,55,55,55,]),'llamarfun':([16,18,20,40,44,75,78,80,82,99,108,123,],[48,48,48,48,48,48,48,48,48,48,48,48,]),'funciones':([17,42,55,61,],[57,72,91,97,]),'funchead':([17,42,55,61,],[58,58,58,58,]),'int':([6,8,16,18,20,21,35,40,44,59,75,78,80,82,99,108,114,115,123,137,],[24,31,52,52,52,31,31,52,52,31,52,52,52,52,52,52,31,31,52,31,]),'hash':([8,21,35,59,114,115,137,],[38,38,38,38,38,38,38,]),'vars_declaration':([8,21,35,],[35,35,35,]),'lectura':([2,15,23,24,47,58,60,62,107,120,122,],[9,9,9,9,9,9,9,9,9,9,9,]),'funparams':([78,123,],[110,132,]),'while':([2,15,23,24,47,58,60,62,107,120,122,],[14,14,14,14,14,14,14,14,14,14,14,]),'estatuto':([2,15,23,24,47,58,60,62,107,120,122,],[23,23,23,23,23,23,23,23,23,23,23,]),'psign':([51,112,],[80,80,]),'estatuto_list':([2,15,23,24,47,58,60,62,107,120,122,],[19,19,66,67,77,19,19,98,121,129,131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM bloque ENDPROGRAM','programa',3,'p_programa','rules.py',5),
  ('programa -> PROGRAM bloque funciones ENDPROGRAM','programa',4,'p_programa','rules.py',6),
  ('programa -> PROGRAM global bloque funciones ENDPROGRAM','programa',5,'p_programa','rules.py',7),
  ('funciones -> func funciones','funciones',2,'p_funciones','rules.py',16),
  ('funciones -> voidfunc funciones','funciones',2,'p_funciones','rules.py',17),
  ('funciones -> empty','funciones',1,'p_funciones','rules.py',18),
  ('vars -> VAR vars_list ENDVAR','vars',3,'p_vars','rules.py',23),
  ('global -> GLOBAL vars_list ENDGLOBAL','global',3,'p_global','rules.py',27),
  ('vars_list -> vars_declaration vars_list','vars_list',2,'p_vars_list','rules.py',31),
  ('vars_list -> vars_declaration','vars_list',1,'p_vars_list','rules.py',32),
  ('vars_list -> empty','vars_list',1,'p_vars_list','rules.py',33),
  ('vars_declaration -> tipo identifier','vars_declaration',2,'p_vars_declaration','rules.py',40),
  ('tipo -> int','tipo',1,'p_tipo','rules.py',44),
  ('tipo -> float','tipo',1,'p_tipo','rules.py',45),
  ('tipo -> string','tipo',1,'p_tipo','rules.py',46),
  ('tipo -> bool','tipo',1,'p_tipo','rules.py',47),
  ('tipo -> hash','tipo',1,'p_tipo','rules.py',48),
  ('tipo -> VOID','tipo',1,'p_tipo','rules.py',49),
  ('bloque -> estatuto_list','bloque',1,'p_bloque','rules.py',53),
  ('estatuto_list -> estatuto estatuto_list','estatuto_list',2,'p_estatuto_list','rules.py',58),
  ('estatuto_list -> estatuto','estatuto_list',1,'p_estatuto_list','rules.py',59),
  ('estatuto_list -> empty','estatuto_list',1,'p_estatuto_list','rules.py',60),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','rules.py',63),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','rules.py',64),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','rules.py',65),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','rules.py',66),
  ('estatuto -> while','estatuto',1,'p_estatuto','rules.py',67),
  ('estatuto -> for','estatuto',1,'p_estatuto','rules.py',68),
  ('estatuto -> vars','estatuto',1,'p_estatuto','rules.py',69),
  ('asignacion -> identifier EQUAL expresion','asignacion',3,'p_asignacion','rules.py',73),
  ('escritura -> PRINT escritura_vars','escritura',2,'p_escritura','rules.py',77),
  ('escritura_vars -> expresion COMMA escritura_vars','escritura_vars',3,'p_escritura_vars','rules.py',81),
  ('escritura_vars -> expresion','escritura_vars',1,'p_escritura_vars','rules.py',82),
  ('lectura -> READ identifier','lectura',2,'p_lectura','rules.py',89),
  ('condicion -> IF expresion estatuto_list elseif ENDIF','condicion',5,'p_condicion','rules.py',93),
  ('condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF','condicion',7,'p_condicion','rules.py',94),
  ('condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF','condicion',6,'p_condicion','rules.py',95),
  ('condicion -> IF expresion estatuto_list ENDIF','condicion',4,'p_condicion','rules.py',96),
  ('elseif -> ELSEIF expresion estatuto_list','elseif',3,'p_elseif','rules.py',107),
  ('while -> WHILE expresion estatuto_list ENDWHILE','while',4,'p_while','rules.py',111),
  ('for -> FOR int estatuto_list ENDFOR','for',4,'p_for','rules.py',115),
  ('expresion -> termino','expresion',1,'p_expresion','rules.py',119),
  ('expresion -> expresion and_or termino','expresion',3,'p_expresion','rules.py',120),
  ('termino -> factor','termino',1,'p_termino','rules.py',127),
  ('termino -> termino sign factor','termino',3,'p_termino','rules.py',128),
  ('factor -> elemento','factor',1,'p_factor','rules.py',135),
  ('factor -> factor psign elemento','factor',3,'p_factor','rules.py',136),
  ('sign -> LTHAN','sign',1,'p_sign','rules.py',143),
  ('sign -> GTHAN','sign',1,'p_sign','rules.py',144),
  ('sign -> EQUALTO','sign',1,'p_sign','rules.py',145),
  ('sign -> GTHANEQ','sign',1,'p_sign','rules.py',146),
  ('sign -> LTHANEQ','sign',1,'p_sign','rules.py',147),
  ('sign -> NOTEQUAL','sign',1,'p_sign','rules.py',148),
  ('sign -> PLUS','sign',1,'p_sign','rules.py',149),
  ('sign -> MINUS','sign',1,'p_sign','rules.py',150),
  ('psign -> MULTI','psign',1,'p_psign','rules.py',154),
  ('psign -> DIVIDE','psign',1,'p_psign','rules.py',155),
  ('and_or -> AND','and_or',1,'p_and_or','rules.py',159),
  ('and_or -> OR','and_or',1,'p_and_or','rules.py',160),
  ('elemento -> identifier','elemento',1,'p_elemento','rules.py',164),
  ('elemento -> int','elemento',1,'p_elemento','rules.py',165),
  ('elemento -> float','elemento',1,'p_elemento','rules.py',166),
  ('elemento -> string','elemento',1,'p_elemento','rules.py',167),
  ('elemento -> LPARENTHESES expresion RPARENTHESES','elemento',3,'p_elemento','rules.py',168),
  ('elemento -> llamarfun','elemento',1,'p_elemento','rules.py',169),
  ('func -> funchead bloque RETURN identifier ENDMETHOD','func',5,'p_func','rules.py',176),
  ('voidfunc -> prochead bloque ENDMETHOD','voidfunc',3,'p_voidfunc','rules.py',180),
  ('prochead -> METHOD VOID identifier parameter_list','prochead',4,'p_prochead','rules.py',184),
  ('prochead -> METHOD VOID identifier','prochead',3,'p_prochead','rules.py',185),
  ('funchead -> METHOD tipo identifier parameter_list','funchead',4,'p_funchead','rules.py',192),
  ('funchead -> METHOD tipo identifier','funchead',3,'p_funchead','rules.py',193),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','rules.py',200),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','rules.py',201),
  ('parameter -> tipo identifier','parameter',2,'p_parameter','rules.py',208),
  ('parameter -> tipo referencia','parameter',2,'p_parameter','rules.py',209),
  ('llamarfun -> CALLMETHOD identifier funparams','llamarfun',3,'p_llamarfun','rules.py',213),
  ('llamarfun -> CALLMETHOD identifier','llamarfun',2,'p_llamarfun','rules.py',214),
  ('funparams -> expresion','funparams',1,'p_funparams','rules.py',221),
  ('funparams -> expresion COMMA funparams','funparams',3,'p_funparams','rules.py',222),
  ('empty -> <empty>','empty',0,'p_empty','rules.py',229),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','rules.py',232),
  ('referencia -> REFERENCIA','referencia',1,'p_referencia','rules.py',236),
  ('int -> INT','int',1,'p_int','rules.py',240),
  ('float -> FLOAT','float',1,'p_float','rules.py',244),
  ('bool -> BOOL','bool',1,'p_bool','rules.py',248),
  ('string -> STRING','string',1,'p_string','rules.py',252),
  ('hash -> HASH','hash',1,'p_hash','rules.py',256),
]
