
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9236E6605B7249ADED7AB54E5B1834CF'
    
_lr_action_items = {'READ':([1,5,6,7,8,12,14,16,17,20,22,31,32,33,35,36,38,44,45,46,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,134,136,137,138,139,141,144,147,],[15,-23,-19,15,-26,-20,-24,-22,-21,-25,15,15,-81,-81,-28,-81,-39,-32,15,15,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-81,-81,15,-33,15,-81,15,-73,15,-79,-75,-71,-76,-74,-34,-81,-72,]),'LTHAN':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,-81,77,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,-81,-81,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'DIVIDE':([10,18,19,32,33,38,40,47,52,53,54,55,56,57,58,59,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,96,97,98,99,101,102,103,110,114,115,116,117,118,119,120,127,134,],[39,39,39,54,-81,-39,39,39,-54,-53,39,39,-50,39,-49,39,39,-64,-68,-63,-67,-62,-65,-66,-58,-45,-48,-44,-46,-42,-41,-43,39,-47,54,54,-81,-81,39,-40,-57,39,-56,-55,-51,-52,-80,-78,-77,39,-79,]),'ENDFOR':([5,6,7,8,12,14,16,17,20,30,31,32,33,35,36,38,44,51,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,124,127,134,141,],[-23,-19,-81,-17,-20,-24,-22,-21,-25,-18,-81,-81,-81,-28,-81,-39,-32,95,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-33,-81,-79,-34,]),'BOOL':([3,13,86,121,122,144,],[23,23,23,23,23,23,]),'COMMA':([32,33,36,38,49,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,113,114,115,116,117,118,119,120,127,134,136,137,138,139,],[-81,-81,62,-39,93,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,-81,-81,-81,-40,-57,93,-56,-55,-51,-52,-80,127,-77,-81,-79,-75,144,-76,-74,]),'LTHANEQ':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,-81,72,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,-81,-81,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'ENDGLOBAL':([27,49,92,94,113,126,],[50,-81,-9,-10,-81,-11,]),'$end':([4,42,82,83,84,85,91,104,105,112,145,148,],[0,-1,-81,-81,-2,-6,-81,-5,-4,-3,-70,-69,]),'VAR':([1,5,6,7,8,12,14,16,17,20,22,31,32,33,35,36,38,44,45,46,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,134,136,137,138,139,141,144,147,],[13,-23,-19,13,-26,-20,-24,-22,-21,-25,13,13,-81,-81,-28,-81,-39,-32,13,13,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-81,-81,13,-33,13,-81,13,-73,13,-79,-75,-71,-76,-74,-34,-81,-72,]),'LPARENTHESES':([10,18,19,40,47,54,55,57,59,62,72,73,74,75,76,77,78,79,80,101,110,127,],[40,40,40,40,40,40,40,40,40,40,-45,-48,-44,-46,-42,-41,-43,40,-47,40,40,40,]),'EQUALTO':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,-81,78,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,-81,-81,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'NOTEQUAL':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,-81,75,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,-81,-81,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'PLUS':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,57,-39,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,57,57,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'ELSE':([5,6,7,8,12,14,16,17,20,30,32,33,35,36,38,44,46,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,89,90,95,96,97,98,99,100,101,102,103,108,109,111,114,115,116,117,118,119,120,124,125,127,133,134,141,142,],[-23,-19,-81,-17,-20,-24,-22,-21,-25,-18,-81,-81,-28,-81,-39,-32,-81,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-81,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,123,-35,-56,-55,-51,-52,-80,-78,-77,-33,-81,-81,-81,-79,-34,-36,]),'MINUS':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,59,-39,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,59,59,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'ENDIF':([5,6,7,8,12,14,16,17,20,30,32,33,35,36,38,44,46,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,89,90,95,96,97,98,99,100,101,102,103,108,109,111,114,115,116,117,118,119,120,123,124,125,127,132,133,134,141,142,],[-23,-19,-81,-17,-20,-24,-22,-21,-25,-18,-81,-81,-28,-81,-39,-32,-81,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-81,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,124,-35,-56,-55,-51,-52,-80,-78,-77,-81,-33,-81,-81,141,-81,-79,-34,-36,]),'VALOR':([23,24,25,28,29,130,],[-15,-13,-12,-14,-16,138,]),'IF':([1,5,6,7,8,12,14,16,17,20,22,31,32,33,35,36,38,44,45,46,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,134,136,137,138,139,141,144,147,],[19,-23,-19,19,-26,-20,-24,-22,-21,-25,19,19,-81,-81,-28,-81,-39,-32,19,19,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-81,-81,19,-33,19,-81,19,-73,19,-79,-75,-71,-76,-74,-34,-81,-72,]),'ELSEIF':([5,6,7,8,12,14,16,17,20,30,32,33,35,36,38,44,46,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,89,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,124,125,127,133,134,141,],[-23,-19,-81,-17,-20,-24,-22,-21,-25,-18,-81,-81,-28,-81,-39,-32,-81,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,110,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-33,-81,-81,110,-79,-34,]),'GTHAN':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,-81,76,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,-81,-81,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'INT':([3,13,86,121,122,144,],[25,25,25,25,25,25,]),'IDENTIFIER':([1,5,6,7,8,10,12,14,15,16,17,18,19,20,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,90,93,95,96,97,98,99,100,101,102,103,106,107,108,110,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,134,136,137,138,139,141,143,144,147,],[21,-23,-19,21,-26,-81,-20,-24,44,-22,-21,-81,-81,-25,21,-15,-13,-12,49,-14,-16,21,-81,-81,-59,-28,-81,67,-39,-61,-81,-60,-32,21,21,-81,-54,-53,-81,-81,-50,-81,-49,-81,-30,-29,-81,-64,-68,-63,-67,-62,-65,-66,101,-58,-45,-48,-44,-46,-42,-41,-43,-81,-47,-7,-27,113,-38,-81,-81,-81,-81,-31,-81,-40,-57,121,122,-37,-81,-56,-55,-51,-52,-59,-78,-77,-81,-81,21,-33,21,-81,21,-73,139,21,-79,-75,-71,-76,-74,-34,146,-81,-72,]),'METHOD':([42,82,83,91,145,148,],[86,86,86,86,-70,-69,]),'TRUE':([10,18,19,34,37,39,40,41,47,54,55,57,59,62,72,73,74,75,76,77,78,79,80,101,110,118,127,],[-81,-81,-81,-59,69,-61,-81,-60,-81,-81,-81,-81,-81,-81,-45,-48,-44,-46,-42,-41,-43,-81,-47,-81,-81,-59,-81,]),'ENDMETHOD':([5,6,7,8,12,14,16,17,20,30,32,33,35,36,38,44,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,122,124,127,129,131,134,136,137,138,139,140,141,144,146,147,],[-23,-19,-81,-17,-20,-24,-22,-21,-25,-18,-81,-81,-28,-81,-39,-32,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-81,-33,-81,-73,-81,-79,-75,-71,-76,-74,145,-34,-81,148,-72,]),'ENDVAR':([43,49,92,94,113,126,],[87,-81,-9,-10,-81,-11,]),'GLOBAL':([0,],[3,]),'HASH':([3,13,86,121,122,144,],[29,29,29,29,29,29,]),'FOR':([1,5,6,7,8,12,14,16,17,20,22,31,32,33,35,36,38,44,45,46,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,134,136,137,138,139,141,144,147,],[9,-23,-19,9,-26,-20,-24,-22,-21,-25,9,9,-81,-81,-28,-81,-39,-32,9,9,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-81,-81,9,-33,9,-81,9,-73,9,-79,-75,-71,-76,-74,-34,-81,-72,]),'PRINT':([1,5,6,7,8,12,14,16,17,20,22,31,32,33,35,36,38,44,45,46,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,134,136,137,138,139,141,144,147,],[10,-23,-19,10,-26,-20,-24,-22,-21,-25,10,10,-81,-81,-28,-81,-39,-32,10,10,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-81,-81,10,-33,10,-81,10,-73,10,-79,-75,-71,-76,-74,-34,-81,-72,]),'MULTI':([10,18,19,32,33,38,40,47,52,53,54,55,56,57,58,59,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,96,97,98,99,101,102,103,110,114,115,116,117,118,119,120,127,134,],[41,41,41,55,-81,-39,41,41,-54,-53,41,41,-50,41,-49,41,41,-64,-68,-63,-67,-62,-65,-66,-58,-45,-48,-44,-46,-42,-41,-43,41,-47,55,55,-81,-81,41,-40,-57,41,-56,-55,-51,-52,-80,-78,-77,41,-79,]),'REFERENCIA':([23,24,25,28,29,130,],[-15,-13,-12,-14,-16,136,]),'PROGRAM':([0,2,50,],[1,22,-8,]),'FLOAT':([3,13,86,121,122,144,],[24,24,24,24,24,24,]),'GTHANEQ':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,-81,74,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,-81,-81,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'CALLMETHOD':([10,18,19,34,37,39,40,41,47,54,55,57,59,62,72,73,74,75,76,77,78,79,80,101,110,118,127,],[-81,-81,-81,-59,70,-61,-81,-60,-81,-81,-81,-81,-81,-81,-45,-48,-44,-46,-42,-41,-43,-81,-47,-81,-81,-59,-81,]),'CTEINT':([9,10,18,19,34,37,39,40,41,47,54,55,57,59,62,72,73,74,75,76,77,78,79,80,101,110,118,127,],[31,-81,-81,-81,-59,65,-61,-81,-60,-81,-81,-81,-81,-81,-81,-45,-48,-44,-46,-42,-41,-43,-81,-47,-81,-81,-59,-81,]),'WHILE':([1,5,6,7,8,12,14,16,17,20,22,31,32,33,35,36,38,44,45,46,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,131,134,136,137,138,139,141,144,147,],[18,-23,-19,18,-26,-20,-24,-22,-21,-25,18,18,-81,-81,-28,-81,-39,-32,18,18,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-81,-81,18,-33,18,-81,18,-73,18,-79,-75,-71,-76,-74,-34,-81,-72,]),'AND':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,-81,80,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,-81,-81,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'FALSE':([10,18,19,34,37,39,40,41,47,54,55,57,59,62,72,73,74,75,76,77,78,79,80,101,110,118,127,],[-81,-81,-81,-59,66,-61,-81,-60,-81,-81,-81,-81,-81,-81,-45,-48,-44,-46,-42,-41,-43,-81,-47,-81,-81,-59,-81,]),'VOID':([86,],[107,]),'ENDWHILE':([5,6,7,8,12,14,16,17,20,30,32,33,35,36,38,44,45,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,88,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,124,127,134,141,],[-23,-19,-81,-17,-20,-24,-22,-21,-25,-18,-81,-81,-28,-81,-39,-32,-81,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,108,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-33,-81,-79,-34,]),'EQUAL':([21,],[47,]),'RPARENTHESES':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,81,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,-81,-39,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,103,-81,-81,-81,-81,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'OR':([32,33,38,52,53,56,58,63,64,65,66,67,68,69,71,96,97,98,99,101,102,103,114,115,116,117,118,119,120,127,134,],[-81,-81,73,-54,-53,-50,-49,-64,-68,-63,-67,-62,-65,-66,-58,-81,-81,-81,-81,-81,-40,-57,-56,-55,-51,-52,-80,-78,-77,-81,-79,]),'CTEFLOAT':([10,18,19,34,37,39,40,41,47,54,55,57,59,62,72,73,74,75,76,77,78,79,80,101,110,118,127,],[-81,-81,-81,-59,63,-61,-81,-60,-81,-81,-81,-81,-81,-81,-45,-48,-44,-46,-42,-41,-43,-81,-47,-81,-81,-59,-81,]),'ENDPROGRAM':([1,5,6,7,8,11,12,14,16,17,20,22,30,32,33,35,36,38,44,48,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,124,127,134,141,],[-81,-23,-19,-81,-17,42,-20,-24,-22,-21,-25,-81,-18,-81,-81,-28,-81,-39,-32,91,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-33,-81,-79,-34,]),'STRING':([3,10,13,18,19,34,37,39,40,41,47,54,55,57,59,62,72,73,74,75,76,77,78,79,80,86,101,110,118,121,122,127,144,],[28,-81,28,-81,-81,-59,68,-61,-81,-60,-81,-81,-81,-81,-81,-81,-45,-48,-44,-46,-42,-41,-43,-81,-47,28,-81,-81,-59,28,28,-81,28,]),'RETURN':([5,6,7,8,12,14,16,17,20,30,32,33,35,36,38,44,52,53,56,58,60,61,63,64,65,66,67,68,69,71,87,90,95,96,97,98,99,100,101,102,103,108,114,115,116,117,118,119,120,121,124,127,128,129,134,135,136,137,138,139,141,144,147,],[-23,-19,-81,-17,-20,-24,-22,-21,-25,-18,-81,-81,-28,-81,-39,-32,-54,-53,-50,-49,-30,-29,-64,-68,-63,-67,-62,-65,-66,-58,-7,-27,-38,-81,-81,-81,-81,-31,-81,-40,-57,-37,-56,-55,-51,-52,-80,-78,-77,-81,-33,-81,-81,-73,-79,143,-75,-71,-76,-74,-34,-81,-72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'while':([1,7,22,31,45,46,123,125,128,131,],[5,5,5,5,5,5,5,5,5,5,]),'asignacion':([1,7,22,31,45,46,123,125,128,131,],[6,6,6,6,6,6,6,6,6,6,]),'func2':([130,],[137,]),'voidfunc':([42,82,83,91,],[82,82,82,82,]),'estatuto':([1,7,22,31,45,46,123,125,128,131,],[7,7,7,7,7,7,7,7,7,7,]),'empty':([1,7,10,18,19,22,31,32,33,36,40,42,45,46,47,49,54,55,57,59,62,79,82,83,89,91,96,97,98,99,101,110,113,121,122,123,125,127,128,131,133,144,],[8,8,34,34,34,8,8,52,56,60,34,85,8,8,34,94,34,34,34,34,34,34,85,85,111,85,52,52,56,56,118,34,94,129,129,8,8,118,8,8,111,129,]),'expresion':([10,18,19,40,47,62,101,110,127,],[36,45,46,81,90,36,119,125,119,]),'programa':([0,],[4,]),'bloque':([1,7,22,31,45,46,123,125,128,131,],[11,30,48,51,88,89,132,133,135,140,]),'factor1':([10,18,19,40,47,54,55,57,59,62,79,101,110,127,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'condicion':([1,7,22,31,45,46,123,125,128,131,],[12,12,12,12,12,12,12,12,12,12,]),'for':([1,7,22,31,45,46,123,125,128,131,],[14,14,14,14,14,14,14,14,14,14,]),'global':([0,],[2,]),'vars1':([3,13,],[27,43,]),'llamarfun':([37,],[64,]),'lectura':([1,7,22,31,45,46,123,125,128,131,],[16,16,16,16,16,16,16,16,16,16,]),'func1':([121,122,144,],[128,131,147,]),'factor':([10,18,19,40,47,54,55,57,59,62,79,101,110,127,],[32,32,32,32,32,96,97,32,32,32,32,32,32,32,]),'escritura':([1,7,22,31,45,46,123,125,128,131,],[17,17,17,17,17,17,17,17,17,17,]),'vars2':([49,113,],[92,126,]),'termino1':([32,96,97,],[53,114,115,]),'func':([42,82,83,91,],[83,83,83,83,]),'termino':([10,18,19,40,47,57,59,62,79,101,110,127,],[33,33,33,33,33,98,99,33,33,33,33,33,]),'tipo':([3,13,86,121,122,144,],[26,26,106,130,130,130,]),'escritura1':([10,62,],[35,100,]),'escritura2':([36,],[61,]),'exp':([10,18,19,40,47,62,79,101,110,127,],[38,38,38,38,38,38,102,38,38,38,]),'exp1':([33,98,99,],[58,116,117,]),'vars':([1,7,22,31,45,46,123,125,128,131,],[20,20,20,20,20,20,20,20,20,20,]),'condicion1':([89,133,],[109,142,]),'llamarfun1':([101,127,],[120,134,]),'funciones':([42,82,83,91,],[84,104,105,112,]),'expresion1':([38,],[79,]),'varcte':([37,],[71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM bloque ENDPROGRAM','programa',3,'p_programa','rules.py',5),
  ('programa -> PROGRAM bloque ENDPROGRAM funciones','programa',4,'p_programa','rules.py',6),
  ('programa -> global PROGRAM bloque ENDPROGRAM funciones','programa',5,'p_programa','rules.py',7),
  ('funciones -> func funciones','funciones',2,'p_funciones','rules.py',16),
  ('funciones -> voidfunc funciones','funciones',2,'p_funciones','rules.py',17),
  ('funciones -> empty','funciones',1,'p_funciones','rules.py',18),
  ('vars -> VAR vars1 ENDVAR','vars',3,'p_vars','rules.py',21),
  ('global -> GLOBAL vars1 ENDGLOBAL','global',3,'p_global','rules.py',24),
  ('vars1 -> tipo IDENTIFIER vars2','vars1',3,'p_vars1','rules.py',27),
  ('vars2 -> empty','vars2',1,'p_vars2','rules.py',30),
  ('vars2 -> COMMA IDENTIFIER vars2','vars2',3,'p_vars2','rules.py',31),
  ('tipo -> INT','tipo',1,'p_tipo','rules.py',34),
  ('tipo -> FLOAT','tipo',1,'p_tipo','rules.py',35),
  ('tipo -> STRING','tipo',1,'p_tipo','rules.py',36),
  ('tipo -> BOOL','tipo',1,'p_tipo','rules.py',37),
  ('tipo -> HASH','tipo',1,'p_tipo','rules.py',38),
  ('bloque -> empty','bloque',1,'p_bloque','rules.py',41),
  ('bloque -> estatuto bloque','bloque',2,'p_bloque','rules.py',42),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','rules.py',45),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','rules.py',46),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','rules.py',47),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','rules.py',48),
  ('estatuto -> while','estatuto',1,'p_estatuto','rules.py',49),
  ('estatuto -> for','estatuto',1,'p_estatuto','rules.py',50),
  ('estatuto -> vars','estatuto',1,'p_estatuto','rules.py',51),
  ('estatuto -> empty','estatuto',1,'p_estatuto','rules.py',52),
  ('asignacion -> IDENTIFIER EQUAL expresion','asignacion',3,'p_asignacion','rules.py',55),
  ('escritura -> PRINT escritura1','escritura',2,'p_escritura','rules.py',58),
  ('escritura1 -> expresion escritura2','escritura1',2,'p_escritura1','rules.py',61),
  ('escritura2 -> empty','escritura2',1,'p_escritura2','rules.py',64),
  ('escritura2 -> COMMA escritura1','escritura2',2,'p_escritura2','rules.py',65),
  ('lectura -> READ IDENTIFIER','lectura',2,'p_lectura','rules.py',68),
  ('condicion -> IF expresion bloque condicion1 ENDIF','condicion',5,'p_condicion','rules.py',71),
  ('condicion -> IF expresion bloque condicion1 ELSE bloque ENDIF','condicion',7,'p_condicion','rules.py',72),
  ('condicion1 -> empty','condicion1',1,'p_condicion1','rules.py',75),
  ('condicion1 -> ELSEIF expresion bloque condicion1','condicion1',4,'p_condicion1','rules.py',76),
  ('while -> WHILE expresion bloque ENDWHILE','while',4,'p_while','rules.py',79),
  ('for -> FOR CTEINT bloque ENDFOR','for',4,'p_for','rules.py',82),
  ('expresion -> exp','expresion',1,'p_expresion','rules.py',85),
  ('expresion -> exp expresion1 exp','expresion',3,'p_expresion','rules.py',86),
  ('expresion1 -> LTHAN','expresion1',1,'p_expresion1','rules.py',89),
  ('expresion1 -> GTHAN','expresion1',1,'p_expresion1','rules.py',90),
  ('expresion1 -> EQUALTO','expresion1',1,'p_expresion1','rules.py',91),
  ('expresion1 -> GTHANEQ','expresion1',1,'p_expresion1','rules.py',92),
  ('expresion1 -> LTHANEQ','expresion1',1,'p_expresion1','rules.py',93),
  ('expresion1 -> NOTEQUAL','expresion1',1,'p_expresion1','rules.py',94),
  ('expresion1 -> AND','expresion1',1,'p_expresion1','rules.py',95),
  ('expresion1 -> OR','expresion1',1,'p_expresion1','rules.py',96),
  ('exp -> termino exp1','exp',2,'p_exp','rules.py',99),
  ('exp1 -> empty','exp1',1,'p_exp1','rules.py',102),
  ('exp1 -> PLUS termino exp1','exp1',3,'p_exp1','rules.py',103),
  ('exp1 -> MINUS termino exp1','exp1',3,'p_exp1','rules.py',104),
  ('termino -> factor termino1','termino',2,'p_termino','rules.py',107),
  ('termino1 -> empty','termino1',1,'p_termino1','rules.py',110),
  ('termino1 -> MULTI factor termino1','termino1',3,'p_termino1','rules.py',111),
  ('termino1 -> DIVIDE factor termino1','termino1',3,'p_termino1','rules.py',112),
  ('factor -> LPARENTHESES expresion RPARENTHESES','factor',3,'p_factor','rules.py',115),
  ('factor -> factor1 varcte','factor',2,'p_factor','rules.py',116),
  ('factor1 -> empty','factor1',1,'p_factor1','rules.py',119),
  ('factor1 -> MULTI','factor1',1,'p_factor1','rules.py',120),
  ('factor1 -> DIVIDE','factor1',1,'p_factor1','rules.py',121),
  ('varcte -> IDENTIFIER','varcte',1,'p_varcte','rules.py',124),
  ('varcte -> CTEINT','varcte',1,'p_varcte','rules.py',125),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','rules.py',126),
  ('varcte -> STRING','varcte',1,'p_varcte','rules.py',127),
  ('varcte -> TRUE','varcte',1,'p_varcte','rules.py',128),
  ('varcte -> FALSE','varcte',1,'p_varcte','rules.py',129),
  ('varcte -> llamarfun','varcte',1,'p_varcte','rules.py',130),
  ('func -> METHOD tipo IDENTIFIER func1 bloque RETURN IDENTIFIER ENDMETHOD','func',8,'p_func','rules.py',133),
  ('voidfunc -> METHOD VOID IDENTIFIER func1 bloque ENDMETHOD','voidfunc',6,'p_voidfunc','rules.py',136),
  ('func1 -> tipo func2','func1',2,'p_func1','rules.py',139),
  ('func1 -> tipo func2 COMMA func1','func1',4,'p_func1','rules.py',140),
  ('func1 -> empty','func1',1,'p_func1','rules.py',141),
  ('func2 -> IDENTIFIER','func2',1,'p_func2','rules.py',144),
  ('func2 -> REFERENCIA','func2',1,'p_func2','rules.py',145),
  ('func2 -> VALOR','func2',1,'p_func2','rules.py',146),
  ('llamarfun -> CALLMETHOD IDENTIFIER llamarfun1','llamarfun',3,'p_llamarfun','rules.py',149),
  ('llamarfun1 -> expresion','llamarfun1',1,'p_llamarfun1','rules.py',152),
  ('llamarfun1 -> expresion COMMA llamarfun1','llamarfun1',3,'p_llamarfun1','rules.py',153),
  ('llamarfun1 -> empty','llamarfun1',1,'p_llamarfun1','rules.py',154),
  ('empty -> <empty>','empty',0,'p_empty','rules.py',157),
]
