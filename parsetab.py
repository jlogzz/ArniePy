
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '56B06A2D04FF3F6C750A51904BA5842C'
    
_lr_action_items = {'RETURN':([54,72,],[84,-20,]),'COMMA':([19,25,29,47,62,64,65,67,68,69,70,71,73,99,111,118,119,120,121,122,123,127,128,129,141,],[-87,-84,-85,-82,-43,-63,-64,-45,-66,-62,-61,-47,104,-78,130,-44,-46,136,-77,-65,-48,-75,-83,-76,-80,]),'LTHANEQ':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,90,-63,-64,-45,-66,-62,-61,-47,-78,90,-46,-79,-77,-65,-48,-80,]),'METHOD':([3,7,14,15,72,83,131,],[8,8,8,8,-20,-68,-67,]),'FLOAT':([5,8,21,31,34,40,46,47,58,66,78,81,82,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,115,130,136,],[29,29,29,29,29,29,29,-82,-13,29,29,29,29,-59,-60,29,-53,-50,-54,-49,-51,-55,-52,29,-56,29,-57,29,-58,29,29,29,29,]),'FOR':([6,19,25,29,33,35,38,39,41,42,43,44,47,61,62,64,65,67,68,69,70,71,73,74,75,77,80,99,107,108,116,117,118,119,120,121,122,123,124,125,126,132,133,134,140,141,142,],[36,-87,-84,-85,-30,-24,36,-25,-29,-26,-27,-28,-82,36,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,36,36,-35,-78,-31,-8,-39,36,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,36,36,-38,-80,-37,]),'ENDBLOQUE':([6,19,25,29,32,33,35,37,38,39,41,42,43,44,47,62,64,65,67,68,69,70,71,73,74,76,80,99,107,108,116,118,119,120,121,122,123,124,125,126,132,140,141,142,],[-81,-87,-84,-85,72,-30,-24,-23,-22,-25,-29,-26,-27,-28,-82,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,-21,-35,-78,-31,-8,-39,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,-38,-80,-37,]),'MINUS':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,98,-63,-64,-45,-66,-62,-61,-47,-78,98,-46,-79,-77,-65,-48,-80,]),'VOID':([5,8,21,46,47,58,81,82,130,],[20,51,20,20,-82,-13,20,20,20,]),'ENDWHILE':([19,25,29,33,35,37,38,39,41,42,43,44,47,62,64,65,67,68,69,70,71,73,74,76,77,80,99,106,107,108,116,118,119,120,121,122,123,124,125,126,132,140,141,142,],[-87,-84,-85,-30,-24,-23,-22,-25,-29,-26,-27,-28,-82,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,-21,-81,-35,-78,126,-31,-8,-39,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,-38,-80,-37,]),'MULTI':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,-43,-63,-64,101,-66,-62,-61,-47,-78,-44,101,-79,-77,-65,-48,-80,]),'LPARENTHESES':([31,34,40,47,66,78,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,115,136,],[66,66,66,-82,66,66,-59,-60,66,-53,-50,-54,-49,-51,-55,-52,66,-56,66,-57,66,-58,66,66,66,]),'DIVIDE':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,-43,-63,-64,103,-66,-62,-61,-47,-78,-44,103,-79,-77,-65,-48,-80,]),'EQUALTO':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,94,-63,-64,-45,-66,-62,-61,-47,-78,94,-46,-79,-77,-65,-48,-80,]),'REFERENCIA':([16,17,19,20,23,25,26,27,28,29,30,109,],[-86,-17,-87,-19,-18,-84,-88,-14,-15,-85,-16,128,]),'$end':([1,13,52,57,85,],[0,-1,-2,-4,-3,]),'ELSEIF':([19,25,29,33,35,37,38,39,41,42,43,44,47,61,62,64,65,67,68,69,70,71,73,74,76,80,86,99,107,108,116,118,119,120,121,122,123,124,125,126,132,140,141,142,],[-87,-84,-85,-30,-24,-23,-22,-25,-29,-26,-27,-28,-82,-81,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,-21,-35,115,-78,-31,-8,-39,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,-38,-80,-37,]),'ENDIF':([19,25,29,33,35,37,38,39,41,42,43,44,47,61,62,64,65,67,68,69,70,71,73,74,76,80,86,99,107,108,114,116,117,118,119,120,121,122,123,124,125,126,132,133,134,135,138,139,140,141,142,],[-87,-84,-85,-30,-24,-23,-22,-25,-29,-26,-27,-28,-82,-81,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,-21,-35,116,-78,-31,-8,132,-39,-81,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,-81,-81,140,142,-40,-38,-80,-37,]),'ENDFOR':([19,25,29,33,35,37,38,39,41,42,43,44,47,62,64,65,67,68,69,70,71,73,74,75,76,80,99,105,107,108,116,118,119,120,121,122,123,124,125,126,132,140,141,142,],[-87,-84,-85,-30,-24,-23,-22,-25,-29,-26,-27,-28,-82,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,-81,-21,-35,-78,125,-31,-8,-39,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,-38,-80,-37,]),'STRING':([5,8,21,31,34,40,46,47,58,66,78,81,82,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,115,130,136,],[19,19,19,19,19,19,19,-82,-13,19,19,19,19,-59,-60,19,-53,-50,-54,-49,-51,-55,-52,19,-56,19,-57,19,-58,19,19,19,19,]),'ENDVAR':([21,24,46,47,58,59,79,],[-11,-12,-81,-82,-13,-10,108,]),'ENDGLOBAL':([5,21,22,24,47,58,59,],[-81,-11,60,-12,-82,-13,-10,]),'VAR':([6,19,25,29,33,35,38,39,41,42,43,44,47,61,62,64,65,67,68,69,70,71,73,74,75,77,80,99,107,108,116,117,118,119,120,121,122,123,124,125,126,132,133,134,140,141,142,],[46,-87,-84,-85,-30,-24,46,-25,-29,-26,-27,-28,-82,46,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,46,46,-35,-78,-31,-8,-39,46,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,46,46,-38,-80,-37,]),'AND':([19,25,29,47,61,62,64,65,67,68,69,70,71,73,77,99,100,107,118,119,120,121,122,123,134,141,],[-87,-84,-85,-82,87,-43,-63,-64,-45,-66,-62,-61,-47,87,87,-78,87,87,-44,-46,87,-77,-65,-48,87,-80,]),'READ':([6,19,25,29,33,35,38,39,41,42,43,44,47,61,62,64,65,67,68,69,70,71,73,74,75,77,80,99,107,108,116,117,118,119,120,121,122,123,124,125,126,132,133,134,140,141,142,],[48,-87,-84,-85,-30,-24,48,-25,-29,-26,-27,-28,-82,48,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,48,48,-35,-78,-31,-8,-39,48,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,48,48,-38,-80,-37,]),'BLOQUE':([2,4,11,12,47,60,81,82,110,111,112,127,128,129,137,],[6,6,6,6,-82,-9,-72,-70,-71,-73,-69,-75,-83,-76,-74,]),'NOTEQUAL':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,92,-63,-64,-45,-66,-62,-61,-47,-78,92,-46,-79,-77,-65,-48,-80,]),'IDENTIFIER':([6,16,17,18,19,20,23,25,26,27,28,29,30,31,33,34,35,38,39,40,41,42,43,44,47,48,50,51,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,78,80,84,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,107,108,109,115,116,117,118,119,120,121,122,123,124,125,126,132,133,134,136,140,141,142,],[47,-86,-17,47,-87,-19,-18,-84,-88,-14,-15,-85,-16,47,-30,47,-24,47,-25,47,-29,-26,-27,-28,-82,47,47,47,47,-43,47,-63,-64,47,-45,-66,-62,-61,-47,-34,-32,47,47,47,-35,47,-59,-60,47,-53,-50,-54,-49,-51,-55,-52,47,-56,47,-57,47,-58,47,-31,-8,47,47,-39,47,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,47,47,47,-38,-80,-37,]),'PRINT':([6,19,25,29,33,35,38,39,41,42,43,44,47,61,62,64,65,67,68,69,70,71,73,74,75,77,80,99,107,108,116,117,118,119,120,121,122,123,124,125,126,132,133,134,140,141,142,],[34,-87,-84,-85,-30,-24,34,-25,-29,-26,-27,-28,-82,34,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,34,34,-35,-78,-31,-8,-39,34,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,34,34,-38,-80,-37,]),'BOOL':([5,8,21,46,47,58,81,82,130,],[16,16,16,16,-82,-13,16,16,16,]),'IF':([6,19,25,29,33,35,38,39,41,42,43,44,47,61,62,64,65,67,68,69,70,71,73,74,75,77,80,99,107,108,116,117,118,119,120,121,122,123,124,125,126,132,133,134,140,141,142,],[31,-87,-84,-85,-30,-24,31,-25,-29,-26,-27,-28,-82,31,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,31,31,-35,-78,-31,-8,-39,31,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,31,31,-38,-80,-37,]),'ELSE':([19,25,29,33,35,37,38,39,41,42,43,44,47,61,62,64,65,67,68,69,70,71,73,74,76,80,86,99,107,108,114,116,118,119,120,121,122,123,124,125,126,132,134,139,140,141,142,],[-87,-84,-85,-30,-24,-23,-22,-25,-29,-26,-27,-28,-82,-81,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,-21,-35,117,-78,-31,-8,133,-39,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,-81,-40,-38,-80,-37,]),'HASH':([5,8,21,46,47,58,81,82,130,],[26,26,26,26,-82,-13,26,26,26,]),'GLOBAL':([2,],[5,]),'PLUS':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,95,-63,-64,-45,-66,-62,-61,-47,-78,95,-46,-79,-77,-65,-48,-80,]),'ENDPROGRAM':([3,7,9,10,14,15,49,55,56,72,83,131,],[13,-81,52,-7,-81,57,-5,-6,85,-20,-68,-67,]),'WHILE':([6,19,25,29,33,35,38,39,41,42,43,44,47,61,62,64,65,67,68,69,70,71,73,74,75,77,80,99,107,108,116,117,118,119,120,121,122,123,124,125,126,132,133,134,140,141,142,],[40,-87,-84,-85,-30,-24,40,-25,-29,-26,-27,-28,-82,40,-43,-63,-64,-45,-66,-62,-61,-47,-34,-32,40,40,-35,-78,-31,-8,-39,40,-44,-46,-79,-77,-65,-48,-33,-42,-41,-36,40,40,-38,-80,-37,]),'CALLMETHOD':([31,34,40,47,66,78,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,115,136,],[63,63,63,-82,63,63,-59,-60,63,-53,-50,-54,-49,-51,-55,-52,63,-56,63,-57,63,-58,63,63,63,]),'LTHAN':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,93,-63,-64,-45,-66,-62,-61,-47,-78,93,-46,-79,-77,-65,-48,-80,]),'OR':([19,25,29,47,61,62,64,65,67,68,69,70,71,73,77,99,100,107,118,119,120,121,122,123,134,141,],[-87,-84,-85,-82,88,-43,-63,-64,-45,-66,-62,-61,-47,88,88,-78,88,88,-44,-46,88,-77,-65,-48,88,-80,]),'PROGRAM':([0,],[2,]),'INT':([5,8,21,31,34,36,40,46,47,58,66,78,81,82,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,115,130,136,],[25,25,25,25,25,25,25,25,-82,-13,25,25,25,25,-59,-60,25,-53,-50,-54,-49,-51,-55,-52,25,-56,25,-57,25,-58,25,25,25,25,]),'RPARENTHESES':([19,25,29,47,62,64,65,67,68,69,70,71,99,100,118,119,120,121,122,123,141,],[-87,-84,-85,-82,-43,-63,-64,-45,-66,-62,-61,-47,-78,122,-44,-46,-79,-77,-65,-48,-80,]),'GTHAN':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,91,-63,-64,-45,-66,-62,-61,-47,-78,91,-46,-79,-77,-65,-48,-80,]),'EQUAL':([45,47,],[78,-82,]),'GTHANEQ':([19,25,29,47,62,64,65,67,68,69,70,71,99,118,119,120,121,122,123,141,],[-87,-84,-85,-82,96,-63,-64,-45,-66,-62,-61,-47,-78,96,-46,-79,-77,-65,-48,-80,]),'ENDMETHOD':([47,53,72,113,],[-82,83,-20,131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bool':([5,8,21,46,81,82,130,],[17,17,17,17,17,17,17,]),'bloque':([2,4,11,12,],[3,15,53,54,]),'estatuto_list':([6,38,61,75,77,117,133,134,],[32,76,86,105,106,135,138,139,]),'global':([2,],[4,]),'vars_declaration':([5,21,46,],[21,21,21,]),'expresion':([31,34,40,66,78,99,104,115,136,],[61,73,77,100,107,120,73,134,120,]),'estatuto':([6,38,61,75,77,117,133,134,],[38,38,38,38,38,38,38,38,]),'vars_list':([5,21,46,],[22,59,79,]),'func':([3,7,14,15,],[7,7,7,7,]),'condicion':([6,38,61,75,77,117,133,134,],[39,39,39,39,39,39,39,39,]),'termino':([31,34,40,66,78,89,99,104,115,136,],[62,62,62,62,62,118,62,62,62,62,]),'empty':([3,5,6,7,14,15,21,38,46,61,75,77,117,133,134,],[10,24,37,10,10,10,24,37,24,37,37,37,37,37,37,]),'parameter':([81,82,130,],[111,111,111,]),'funparams':([99,136,],[121,141,]),'float':([5,8,21,31,34,40,46,66,78,81,82,89,97,99,102,104,115,130,136,],[28,28,28,64,64,64,28,64,64,28,28,64,64,64,64,64,64,28,64,]),'sign':([62,118,],[97,97,]),'referencia':([109,],[129,]),'asignacion':([6,38,61,75,77,117,133,134,],[35,35,35,35,35,35,35,35,]),'psign':([67,119,],[102,102,]),'escritura_vars':([34,104,],[74,124,]),'string':([5,8,21,31,34,40,46,66,78,81,82,89,97,99,102,104,115,130,136,],[30,30,30,65,65,65,30,65,65,30,30,65,65,65,65,65,65,30,65,]),'elseif':([86,],[114,]),'tipo':([5,8,21,46,81,82,130,],[18,50,18,18,109,109,109,]),'parameter_list':([81,82,130,],[110,112,137,]),'for':([6,38,61,75,77,117,133,134,],[41,41,41,41,41,41,41,41,]),'and_or':([61,73,77,100,107,120,134,],[89,89,89,89,89,89,89,]),'vars':([6,38,61,75,77,117,133,134,],[33,33,33,33,33,33,33,33,]),'escritura':([6,38,61,75,77,117,133,134,],[42,42,42,42,42,42,42,42,]),'funciones':([3,7,14,15,],[9,49,55,56,]),'factor':([31,34,40,66,78,89,97,99,104,115,136,],[67,67,67,67,67,67,119,67,67,67,67,]),'hash':([5,8,21,46,81,82,130,],[23,23,23,23,23,23,23,]),'llamarfun':([31,34,40,66,78,89,97,99,102,104,115,136,],[68,68,68,68,68,68,68,68,68,68,68,68,]),'lectura':([6,38,61,75,77,117,133,134,],[43,43,43,43,43,43,43,43,]),'programa':([0,],[1,]),'prochead':([3,7,14,15,],[11,11,11,11,]),'int':([5,8,21,31,34,36,40,46,66,78,81,82,89,97,99,102,104,115,130,136,],[27,27,27,69,69,75,69,27,69,69,27,27,69,69,69,69,69,69,27,69,]),'while':([6,38,61,75,77,117,133,134,],[44,44,44,44,44,44,44,44,]),'funchead':([3,7,14,15,],[12,12,12,12,]),'identifier':([6,18,31,34,38,40,48,50,51,61,63,66,75,77,78,84,89,97,99,102,104,109,115,117,133,134,136,],[45,58,70,70,45,70,80,81,82,45,99,70,45,45,70,113,70,70,70,70,70,127,70,45,45,45,70,]),'voidfunc':([3,7,14,15,],[14,14,14,14,]),'elemento':([31,34,40,66,78,89,97,99,102,104,115,136,],[71,71,71,71,71,71,71,71,123,71,71,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM bloque ENDPROGRAM','programa',3,'p_programa','rules.py',5),
  ('programa -> PROGRAM bloque funciones ENDPROGRAM','programa',4,'p_programa','rules.py',6),
  ('programa -> PROGRAM global bloque funciones ENDPROGRAM','programa',5,'p_programa','rules.py',7),
  ('programa -> PROGRAM global bloque ENDPROGRAM','programa',4,'p_programa','rules.py',8),
  ('funciones -> func funciones','funciones',2,'p_funciones','rules.py',17),
  ('funciones -> voidfunc funciones','funciones',2,'p_funciones','rules.py',18),
  ('funciones -> empty','funciones',1,'p_funciones','rules.py',19),
  ('vars -> VAR vars_list ENDVAR','vars',3,'p_vars','rules.py',24),
  ('global -> GLOBAL vars_list ENDGLOBAL','global',3,'p_global','rules.py',28),
  ('vars_list -> vars_declaration vars_list','vars_list',2,'p_vars_list','rules.py',32),
  ('vars_list -> vars_declaration','vars_list',1,'p_vars_list','rules.py',33),
  ('vars_list -> empty','vars_list',1,'p_vars_list','rules.py',34),
  ('vars_declaration -> tipo identifier','vars_declaration',2,'p_vars_declaration','rules.py',41),
  ('tipo -> int','tipo',1,'p_tipo','rules.py',45),
  ('tipo -> float','tipo',1,'p_tipo','rules.py',46),
  ('tipo -> string','tipo',1,'p_tipo','rules.py',47),
  ('tipo -> bool','tipo',1,'p_tipo','rules.py',48),
  ('tipo -> hash','tipo',1,'p_tipo','rules.py',49),
  ('tipo -> VOID','tipo',1,'p_tipo','rules.py',50),
  ('bloque -> BLOQUE estatuto_list ENDBLOQUE','bloque',3,'p_bloque','rules.py',54),
  ('estatuto_list -> estatuto estatuto_list','estatuto_list',2,'p_estatuto_list','rules.py',59),
  ('estatuto_list -> estatuto','estatuto_list',1,'p_estatuto_list','rules.py',60),
  ('estatuto_list -> empty','estatuto_list',1,'p_estatuto_list','rules.py',61),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','rules.py',68),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','rules.py',69),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','rules.py',70),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','rules.py',71),
  ('estatuto -> while','estatuto',1,'p_estatuto','rules.py',72),
  ('estatuto -> for','estatuto',1,'p_estatuto','rules.py',73),
  ('estatuto -> vars','estatuto',1,'p_estatuto','rules.py',74),
  ('asignacion -> identifier EQUAL expresion','asignacion',3,'p_asignacion','rules.py',78),
  ('escritura -> PRINT escritura_vars','escritura',2,'p_escritura','rules.py',82),
  ('escritura_vars -> expresion COMMA escritura_vars','escritura_vars',3,'p_escritura_vars','rules.py',86),
  ('escritura_vars -> expresion','escritura_vars',1,'p_escritura_vars','rules.py',87),
  ('lectura -> READ identifier','lectura',2,'p_lectura','rules.py',94),
  ('condicion -> IF expresion estatuto_list elseif ENDIF','condicion',5,'p_condicion','rules.py',98),
  ('condicion -> IF expresion estatuto_list elseif ELSE estatuto_list ENDIF','condicion',7,'p_condicion','rules.py',99),
  ('condicion -> IF expresion estatuto_list ELSE estatuto_list ENDIF','condicion',6,'p_condicion','rules.py',100),
  ('condicion -> IF expresion estatuto_list ENDIF','condicion',4,'p_condicion','rules.py',101),
  ('elseif -> ELSEIF expresion estatuto_list','elseif',3,'p_elseif','rules.py',112),
  ('while -> WHILE expresion estatuto_list ENDWHILE','while',4,'p_while','rules.py',116),
  ('for -> FOR int estatuto_list ENDFOR','for',4,'p_for','rules.py',120),
  ('expresion -> termino','expresion',1,'p_expresion','rules.py',124),
  ('expresion -> expresion and_or termino','expresion',3,'p_expresion','rules.py',125),
  ('termino -> factor','termino',1,'p_termino','rules.py',132),
  ('termino -> termino sign factor','termino',3,'p_termino','rules.py',133),
  ('factor -> elemento','factor',1,'p_factor','rules.py',140),
  ('factor -> factor psign elemento','factor',3,'p_factor','rules.py',141),
  ('sign -> LTHAN','sign',1,'p_sign','rules.py',148),
  ('sign -> GTHAN','sign',1,'p_sign','rules.py',149),
  ('sign -> EQUALTO','sign',1,'p_sign','rules.py',150),
  ('sign -> GTHANEQ','sign',1,'p_sign','rules.py',151),
  ('sign -> LTHANEQ','sign',1,'p_sign','rules.py',152),
  ('sign -> NOTEQUAL','sign',1,'p_sign','rules.py',153),
  ('sign -> PLUS','sign',1,'p_sign','rules.py',154),
  ('sign -> MINUS','sign',1,'p_sign','rules.py',155),
  ('psign -> MULTI','psign',1,'p_psign','rules.py',159),
  ('psign -> DIVIDE','psign',1,'p_psign','rules.py',160),
  ('and_or -> AND','and_or',1,'p_and_or','rules.py',164),
  ('and_or -> OR','and_or',1,'p_and_or','rules.py',165),
  ('elemento -> identifier','elemento',1,'p_elemento','rules.py',169),
  ('elemento -> int','elemento',1,'p_elemento','rules.py',170),
  ('elemento -> float','elemento',1,'p_elemento','rules.py',171),
  ('elemento -> string','elemento',1,'p_elemento','rules.py',172),
  ('elemento -> LPARENTHESES expresion RPARENTHESES','elemento',3,'p_elemento','rules.py',173),
  ('elemento -> llamarfun','elemento',1,'p_elemento','rules.py',174),
  ('func -> funchead bloque RETURN identifier ENDMETHOD','func',5,'p_func','rules.py',181),
  ('voidfunc -> prochead bloque ENDMETHOD','voidfunc',3,'p_voidfunc','rules.py',185),
  ('prochead -> METHOD VOID identifier parameter_list','prochead',4,'p_prochead','rules.py',189),
  ('prochead -> METHOD VOID identifier','prochead',3,'p_prochead','rules.py',190),
  ('funchead -> METHOD tipo identifier parameter_list','funchead',4,'p_funchead','rules.py',197),
  ('funchead -> METHOD tipo identifier','funchead',3,'p_funchead','rules.py',198),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','rules.py',205),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','rules.py',206),
  ('parameter -> tipo identifier','parameter',2,'p_parameter','rules.py',213),
  ('parameter -> tipo referencia','parameter',2,'p_parameter','rules.py',214),
  ('llamarfun -> CALLMETHOD identifier funparams','llamarfun',3,'p_llamarfun','rules.py',218),
  ('llamarfun -> CALLMETHOD identifier','llamarfun',2,'p_llamarfun','rules.py',219),
  ('funparams -> expresion','funparams',1,'p_funparams','rules.py',226),
  ('funparams -> expresion COMMA funparams','funparams',3,'p_funparams','rules.py',227),
  ('empty -> <empty>','empty',0,'p_empty','rules.py',234),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','rules.py',237),
  ('referencia -> REFERENCIA','referencia',1,'p_referencia','rules.py',241),
  ('int -> INT','int',1,'p_int','rules.py',245),
  ('float -> FLOAT','float',1,'p_float','rules.py',249),
  ('bool -> BOOL','bool',1,'p_bool','rules.py',253),
  ('string -> STRING','string',1,'p_string','rules.py',257),
  ('hash -> HASH','hash',1,'p_hash','rules.py',261),
]
